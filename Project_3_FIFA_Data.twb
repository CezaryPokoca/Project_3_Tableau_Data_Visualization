<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0710.1712                               -->
<workbook original-version='18.1' source-build='2025.2.1 (20252.25.0710.1712)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <DashboardExportButton />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SavingAnalyticObjects />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Project_3_FIFA_Data' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter_Age_vs_Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MAX Value&quot;'>
        <calculation class='tableau' formula='&quot;MAX Value&quot;' />
        <members>
          <member value='&quot;MIN Value&quot;' />
          <member value='&quot;MAX Value&quot;' />
          <member value='&quot;AVG Value&quot;' />
          <member value='&quot;MEDIAN Value&quot;' />
        </members>
      </column>
      <column caption='Parameter_Player_Values' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Value&quot;'>
        <calculation class='tableau' formula='&quot;Value&quot;' />
        <members>
          <member value='&quot;Wage&quot;' />
          <member value='&quot;Value&quot;' />
          <member value='&quot;Release_clause&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Minimum Value&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maximum Value&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='fifa_players+' inline='true' name='federated.043vgmb0s7grj214p8sr61m8t6fp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fifa_players' name='textscan.06c2vgd1rpxyfb1fee3wm1qtiucp'>
            <connection class='textscan' directory='C:/Users/PC COMPUTER/Desktop/Szkolenia AI/CodersLab/Dzień_26_13.07_Warsztat projektowy_Wizualizacja danych/02_Projekt Tableau' filename='fifa_players.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.06c2vgd1rpxyfb1fee3wm1qtiucp' name='fifa_players.csv' table='[fifa_players#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pl_PL'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='age' ordinal='1' />
              <column datatype='string' name='name' ordinal='2' />
              <column datatype='string' name='club' ordinal='3' />
              <column datatype='string' name='nationality' ordinal='4' />
              <column datatype='string' name='position' ordinal='5' />
              <column datatype='string' name='preferred_foot' ordinal='6' />
              <column datatype='real' name='release_clause' ordinal='7' />
              <column datatype='real' name='value' ordinal='8' />
              <column datatype='real' name='wage' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.06c2vgd1rpxyfb1fee3wm1qtiucp' name='fifa_players_statistics.csv' table='[fifa_players_statistics#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pl_PL'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='real' name='acceleration' ordinal='1' />
              <column datatype='real' name='balance' ordinal='2' />
              <column datatype='real' name='ballcontrol' ordinal='3' />
              <column datatype='real' name='crossing' ordinal='4' />
              <column datatype='real' name='dribbling' ordinal='5' />
              <column datatype='real' name='finishing' ordinal='6' />
              <column datatype='real' name='jumping' ordinal='7' />
              <column datatype='integer' name='overall' ordinal='8' />
              <column datatype='real' name='positioning' ordinal='9' />
              <column datatype='real' name='stamina' ordinal='10' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[acceleration]' value='[fifa_players_statistics.csv].[acceleration]' />
          <map key='[age]' value='[fifa_players.csv].[age]' />
          <map key='[balance]' value='[fifa_players_statistics.csv].[balance]' />
          <map key='[ballcontrol]' value='[fifa_players_statistics.csv].[ballcontrol]' />
          <map key='[club]' value='[fifa_players.csv].[club]' />
          <map key='[crossing]' value='[fifa_players_statistics.csv].[crossing]' />
          <map key='[dribbling]' value='[fifa_players_statistics.csv].[dribbling]' />
          <map key='[finishing]' value='[fifa_players_statistics.csv].[finishing]' />
          <map key='[id (fifa_players_statistics.csv)]' value='[fifa_players_statistics.csv].[id]' />
          <map key='[id]' value='[fifa_players.csv].[id]' />
          <map key='[jumping]' value='[fifa_players_statistics.csv].[jumping]' />
          <map key='[name]' value='[fifa_players.csv].[name]' />
          <map key='[nationality]' value='[fifa_players.csv].[nationality]' />
          <map key='[overall]' value='[fifa_players_statistics.csv].[overall]' />
          <map key='[position]' value='[fifa_players.csv].[position]' />
          <map key='[positioning]' value='[fifa_players_statistics.csv].[positioning]' />
          <map key='[preferred_foot]' value='[fifa_players.csv].[preferred_foot]' />
          <map key='[release_clause]' value='[fifa_players.csv].[release_clause]' />
          <map key='[stamina]' value='[fifa_players_statistics.csv].[stamina]' />
          <map key='[value]' value='[fifa_players.csv].[value]' />
          <map key='[wage]' value='[fifa_players.csv].[wage]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;zł&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pl_PL&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;zł&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pl_PL&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[club]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>club</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[position]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>position</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>preferred_foot</remote-name>
            <remote-type>129</remote-type>
            <local-name>[preferred_foot]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>preferred_foot</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_clause</remote-name>
            <remote-type>5</remote-type>
            <local-name>[release_clause]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>release_clause</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wage]</local-name>
            <parent-name>[fifa_players.csv]</parent-name>
            <remote-alias>wage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (fifa_players_statistics.csv)]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>acceleration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[acceleration]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>acceleration</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>balance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[balance]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>balance</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ballcontrol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ballcontrol]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>ballcontrol</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crossing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crossing]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>crossing</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dribbling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dribbling]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>dribbling</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>finishing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[finishing]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>finishing</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jumping</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jumping]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>jumping</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>overall</remote-name>
            <remote-type>20</remote-type>
            <local-name>[overall]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>overall</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positioning</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positioning]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>positioning</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stamina</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stamina]</local-name>
            <parent-name>[fifa_players_statistics.csv]</parent-name>
            <remote-alias>stamina</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Player_Age_vs_Value' datatype='real' default-format='C1031%' name='[Calculation_364510134687686657]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;MIN Value&apos; AND MIN([value]) &gt; 0 THEN MIN([value])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;MAX Value&apos; AND MAX([value]) &gt; 0 THEN MAX([value])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;AVG Value&apos; AND AVG([value]) &gt; 0 THEN AVG([value])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;MEDIAN Value&apos; AND MEDIAN([value]) &gt; 0 THEN MEDIAN([value]) END' />
      </column>
      <column caption='Player_Values' datatype='real' default-format='C1031%' name='[Calculation_470626200545779715]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;Value&apos; THEN [value]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Release_clause&apos; THEN [release_clause]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Wage&apos; THEN [wage] END' />
      </column>
      <column caption='fifa_players.csv' datatype='table' name='[__tableau_internal_object_id__].[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]' role='measure' type='quantitative' />
      <column caption='fifa_players_statistics.csv' datatype='table' name='[__tableau_internal_object_id__].[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]' role='measure' type='quantitative' />
      <column caption='Acceleration' datatype='real' name='[acceleration]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Balance' datatype='real' name='[balance]' role='measure' type='quantitative' />
      <column caption='Ballcontrol' datatype='real' name='[ballcontrol]' role='measure' type='quantitative' />
      <column caption='Club' datatype='string' name='[club]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Crossing' datatype='real' name='[crossing]' role='measure' type='quantitative' />
      <column caption='Dribbling' datatype='real' name='[dribbling]' role='measure' type='quantitative' />
      <column caption='Finishing' datatype='real' name='[finishing]' role='measure' type='quantitative' />
      <column caption='ID (fifa_players_statistics.csv)' datatype='integer' name='[id (fifa_players_statistics.csv)]' role='dimension' type='ordinal' />
      <column caption='ID' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Jumping' datatype='real' name='[jumping]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;China PR&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column caption='Overall' datatype='integer' name='[overall]' role='measure' type='quantitative' />
      <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
      <column caption='Positioning' datatype='real' name='[positioning]' role='measure' type='quantitative' />
      <column caption='Preferred_foot' datatype='string' name='[preferred_foot]' role='dimension' type='nominal' />
      <column caption='Release_clause' datatype='real' default-format='C1031%' name='[release_clause]' role='measure' type='quantitative' />
      <column caption='Stamina' datatype='real' name='[stamina]' role='measure' type='quantitative' />
      <column caption='Value' datatype='real' default-format='C1031%' name='[value]' role='measure' type='quantitative' />
      <column caption='Wage' datatype='real' default-format='C1031%' name='[wage]' role='measure' type='quantitative' />
      <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Max' name='[max:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[overall]' derivation='Sum' name='[sum:overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/PC COMPUTER/Documents/My Tableau Repository/Datasources/fifa_players+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/07/2025 05:39:54 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='fifa_players.csv_50A39B43E5134384A41D408100D24E3F' table='[Extract].[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]' type='table' />
            <relation name='fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891' table='[Extract].[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]' type='table' />
          </relation>
          <cols>
            <map key='[acceleration]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[acceleration]' />
            <map key='[age]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[age]' />
            <map key='[balance]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[balance]' />
            <map key='[ballcontrol]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[ballcontrol]' />
            <map key='[club]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[club]' />
            <map key='[crossing]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[crossing]' />
            <map key='[dribbling]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[dribbling]' />
            <map key='[finishing]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[finishing]' />
            <map key='[id (fifa_players_statistics.csv)]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[id]' />
            <map key='[id]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[id]' />
            <map key='[jumping]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[jumping]' />
            <map key='[name]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[name]' />
            <map key='[nationality]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[nationality]' />
            <map key='[overall]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[overall]' />
            <map key='[position]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[position]' />
            <map key='[positioning]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[positioning]' />
            <map key='[preferred_foot]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[preferred_foot]' />
            <map key='[release_clause]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[release_clause]' />
            <map key='[stamina]' value='[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891].[stamina]' />
            <map key='[value]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[value]' />
            <map key='[wage]' value='[fifa_players.csv_50A39B43E5134384A41D408100D24E3F].[wage]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='fifa_players+' increment-value='%null%' refresh-type='create' rows-inserted='36414' timestamp-start='2025-08-07 17:39:54.026' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>0</ordinal>
              <family>fifa_players.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18207</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[age]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>age</remote-alias>
              <ordinal>1</ordinal>
              <family>fifa_players.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>2</ordinal>
              <family>fifa_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15773</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>club</remote-name>
              <remote-type>129</remote-type>
              <local-name>[club]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>club</remote-alias>
              <ordinal>3</ordinal>
              <family>fifa_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1161</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>nationality</remote-alias>
              <ordinal>4</ordinal>
              <family>fifa_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>164</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>position</remote-name>
              <remote-type>129</remote-type>
              <local-name>[position]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>position</remote-alias>
              <ordinal>5</ordinal>
              <family>fifa_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>preferred_foot</remote-name>
              <remote-type>129</remote-type>
              <local-name>[preferred_foot]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>preferred_foot</remote-alias>
              <ordinal>6</ordinal>
              <family>fifa_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_clause</remote-name>
              <remote-type>5</remote-type>
              <local-name>[release_clause]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>release_clause</remote-alias>
              <ordinal>7</ordinal>
              <family>fifa_players.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1274</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>8</ordinal>
              <family>fifa_players.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[wage]</local-name>
              <parent-name>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</parent-name>
              <remote-alias>wage</remote-alias>
              <ordinal>9</ordinal>
              <family>fifa_players.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>163</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (fifa_players_statistics.csv)]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>10</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18207</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>acceleration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[acceleration]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>acceleration</remote-alias>
              <ordinal>11</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>balance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[balance]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>balance</remote-alias>
              <ordinal>12</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ballcontrol</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ballcontrol]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>ballcontrol</remote-alias>
              <ordinal>13</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>crossing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[crossing]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>crossing</remote-alias>
              <ordinal>14</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dribbling</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dribbling]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>dribbling</remote-alias>
              <ordinal>15</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>finishing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[finishing]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>finishing</remote-alias>
              <ordinal>16</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>jumping</remote-name>
              <remote-type>5</remote-type>
              <local-name>[jumping]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>jumping</remote-alias>
              <ordinal>17</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>overall</remote-name>
              <remote-type>20</remote-type>
              <local-name>[overall]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>overall</remote-alias>
              <ordinal>18</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positioning</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positioning]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>positioning</remote-alias>
              <ordinal>19</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stamina</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stamina]</local-name>
              <parent-name>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</parent-name>
              <remote-alias>stamina</remote-alias>
              <ordinal>20</ordinal>
              <family>fifa_players_statistics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <object-id>[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#308344'>
              <bucket>4</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0</bucket>
            </map>
            <map to='#59a253'>
              <bucket>3</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>2</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' palette='color_blind_10_0' type='palette'>
            <map to='#308344'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a253'>
              <bucket>3</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>2</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>4</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
            <map to='#32779b'>
              <bucket>4</bucket>
            </map>
            <map to='#419eb6'>
              <bucket>3</bucket>
            </map>
            <map to='#43719f'>
              <bucket>5</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>2</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Poland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='age' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='Calculation_470626200545779715' />
        <field-sort-custom-order field='club' />
        <field-sort-custom-order field='nationality' />
        <field-sort-custom-order field='position' />
        <field-sort-custom-order field='preferred_foot' />
        <field-sort-custom-order field='release_clause' />
        <field-sort-custom-order field='value' />
        <field-sort-custom-order field='Calculation_364510134687686657' />
        <field-sort-custom-order field='wage' />
        <field-sort-custom-order field='Calculation_470626200539926529' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter_Age_vs_Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MAX Value&quot;'>
          <calculation class='tableau' formula='&quot;MAX Value&quot;' />
        </column>
        <column caption='Parameter_Player_Values' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Value&quot;'>
          <calculation class='tableau' formula='&quot;Value&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{66af6654-c6f3-4baf-8803-57a95b133c99}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{e16fe9c3-7284-428e-ac03-7930e3251c5d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.043vgmb0s7grj214p8sr61m8t6fp].[max:value:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{f963943d-6b8a-4655-aa09-8f0c9908fce4}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:overall:qk]' />
            <field name='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:value:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <object-graph>
        <objects>
          <object caption='fifa_players.csv' id='fifa_players.csv_50A39B43E5134384A41D408100D24E3F'>
            <properties context=''>
              <relation connection='textscan.06c2vgd1rpxyfb1fee3wm1qtiucp' name='fifa_players.csv' table='[fifa_players#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pl_PL'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='age' ordinal='1' />
                  <column datatype='string' name='name' ordinal='2' />
                  <column datatype='string' name='club' ordinal='3' />
                  <column datatype='string' name='nationality' ordinal='4' />
                  <column datatype='string' name='position' ordinal='5' />
                  <column datatype='string' name='preferred_foot' ordinal='6' />
                  <column datatype='real' name='release_clause' ordinal='7' />
                  <column datatype='real' name='value' ordinal='8' />
                  <column datatype='real' name='wage' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='fifa_players.csv_50A39B43E5134384A41D408100D24E3F' table='[Extract].[fifa_players.csv_50A39B43E5134384A41D408100D24E3F]' type='table' />
            </properties>
          </object>
          <object caption='fifa_players_statistics.csv' id='fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891'>
            <properties context=''>
              <relation connection='textscan.06c2vgd1rpxyfb1fee3wm1qtiucp' name='fifa_players_statistics.csv' table='[fifa_players_statistics#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pl_PL'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='real' name='acceleration' ordinal='1' />
                  <column datatype='real' name='balance' ordinal='2' />
                  <column datatype='real' name='ballcontrol' ordinal='3' />
                  <column datatype='real' name='crossing' ordinal='4' />
                  <column datatype='real' name='dribbling' ordinal='5' />
                  <column datatype='real' name='finishing' ordinal='6' />
                  <column datatype='real' name='jumping' ordinal='7' />
                  <column datatype='integer' name='overall' ordinal='8' />
                  <column datatype='real' name='positioning' ordinal='9' />
                  <column datatype='real' name='stamina' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891' table='[Extract].[fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (fifa_players_statistics.csv)]' />
            </expression>
            <first-end-point object-id='fifa_players.csv_50A39B43E5134384A41D408100D24E3F' />
            <second-end-point object-id='fifa_players_statistics.csv_79B3ABF6140A4594BE228068651C4891' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_4147B6601AD447C3856B9D354BC36161]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Max Player Market Value - Country' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (1)' />
        <param name='target' value='Max Player Market Value - Country' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2_3CC96A8B75EF477F8247064ED08B99FE]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Number of Players - Country' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (1)' />
        <param name='target' value='Number of Players - Country' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3_38CA1F95F62C4CE88840B1BB845A1E03]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Players Number &amp; Market Value - Country' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (1)' />
        <param name='target' value='Players Number &amp; Market Value - Country' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Max Player Market Value - Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{e16fe9c3-7284-428e-ac03-7930e3251c5d}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[value]' derivation='Max' name='[max:value:qk]' pivot='key' type='quantitative' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;China PR&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column caption='Value' datatype='real' default-format='C1031%' name='[value]' role='measure' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#308344'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#59a253'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#7dc370'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#b3e0a6'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <manual-sort column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]' direction='ASC'>
            <dictionary>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>8</bucket>
              <bucket>9</bucket>
              <bucket>10</bucket>
              <bucket>11</bucket>
              <bucket>12</bucket>
              <bucket>13</bucket>
              <bucket>14</bucket>
              <bucket>15</bucket>
              <bucket>16</bucket>
              <bucket>17</bucket>
              <bucket>18</bucket>
              <bucket>19</bucket>
              <bucket>20</bucket>
              <bucket>21</bucket>
              <bucket>22</bucket>
              <bucket>23</bucket>
              <bucket>24</bucket>
              <bucket>25</bucket>
              <bucket>26</bucket>
              <bucket>27</bucket>
              <bucket>28</bucket>
              <bucket>29</bucket>
              <bucket>30</bucket>
              <bucket>31</bucket>
              <bucket>32</bucket>
              <bucket>33</bucket>
              <bucket>34</bucket>
              <bucket>35</bucket>
              <bucket>36</bucket>
              <bucket>37</bucket>
              <bucket>38</bucket>
              <bucket>39</bucket>
              <bucket>40</bucket>
              <bucket>41</bucket>
              <bucket>42</bucket>
              <bucket>43</bucket>
              <bucket>44</bucket>
              <bucket>45</bucket>
              <bucket>46</bucket>
              <bucket>47</bucket>
              <bucket>48</bucket>
              <bucket>49</bucket>
              <bucket>50</bucket>
              <bucket>-1</bucket>
              <bucket>0</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Longitude (generated)]' field-type='quantitative' max='11461001.511971157' min='-10723585.019555392' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Latitude (generated)]' field-type='quantitative' max='5990863.9279906768' min='-6622815.9209788665' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]' value='Max Player Value - Groups'>
              <formatted-text>
                <run>Max Player Value - Groups</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]' />
              <color column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]' />
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[max:value:qk]' />
              <geometry column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Nationality:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[max:value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]>]]></run>
                <run><![CDATA[
<[federated.043vgmb0s7grj214p8sr61m8t6fp].[max:value:qk]>
]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.043vgmb0s7grj214p8sr61m8t6fp].[max:value:qk]' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.043vgmb0s7grj214p8sr61m8t6fp].[Latitude (generated)]</rows>
        <cols>[federated.043vgmb0s7grj214p8sr61m8t6fp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2F434F47-9D3E-45DF-84F9-7B82F8E7AAB4}' />
    </worksheet>
    <worksheet name='Number of Players - Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' parent-model='[AnalyticModel:{66af6654-c6f3-4baf-8803-57a95b133c99}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='ID' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;China PR&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
                  <map to='#32779b'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#419eb6'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#43719f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#7ec1ca'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#bce4d8'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Longitude (generated)]' field-type='quantitative' max='3136686.1118902825' min='-1672258.3113993458' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Latitude (generated)]' field-type='quantitative' max='9079736.2779835928' min='3704551.0269157654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]' value='Number of Players - Groups'>
              <formatted-text>
                <run>Number of Players - Groups</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]' />
              <color column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]' />
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' />
              <geometry column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Nationality:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Number of players:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontsize='10'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='10'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='7' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-field' value='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.043vgmb0s7grj214p8sr61m8t6fp].[Latitude (generated)]</rows>
        <cols>[federated.043vgmb0s7grj214p8sr61m8t6fp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CE34231A-2049-4745-9C13-9A6F121B93BD}' />
    </worksheet>
    <worksheet name='Player Market Values &amp; Overall Rating - Clusters'>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
          </datasources>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{f963943d-6b8a-4655-aa09-8f0c9908fce4}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Club' datatype='string' name='[club]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[club]' derivation='None' name='[none:club:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Overall' datatype='integer' name='[overall]' role='measure' type='quantitative' />
            <column-instance column='[overall]' derivation='Sum' name='[sum:overall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' default-format='C1031%' name='[value]' role='measure' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' palette='color_blind_10_0' type='palette'>
                  <map to='#308344'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#59a253'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#7dc370'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#b3e0a6'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Heidenheim 1846&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Kaiserslautern&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Köln&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Magdeburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Nürnberg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Union Berlin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FSV Mainz 05&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AC Ajaccio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AC Horsens&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AD Alcorcón&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;ADO Den Haag&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AEK Athens&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AFC Wimbledon&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AIK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AJ Auxerre&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Béziers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Monaco&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Nancy Lorraine&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Saint-Étienne&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AZ Alkmaar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aalborg BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aarhus GF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aberdeen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Accrington Stanley&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Adelaide United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ajax&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Akhisar Belediyespor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Ahli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Batin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Faisaly&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Fateh&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Fayha&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Hazem&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Hilal&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Ittihad&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Nassr&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Qadisiyah&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Raed&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Shabab&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Taawoun&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Wehda&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Alanyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Albacete BP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Alianza Petrolera&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Amiens SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;América FC (Minas Gerais)&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;América de Cali&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Angers SCO&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Antalyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Argentinos Juniors&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Arka Gdynia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ascoli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aston Villa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atalanta&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Athletic Club de Bilbao&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atiker Konyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlanta United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Bucaramanga&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Huila&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Madrid&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Mineiro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Nacional&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Paranaense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Tucumán&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Audax Italiano&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;BB Erzurumspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;BK Häcken&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;BSC Young Boys&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bahia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Barnsley&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bayer 04 Leverkusen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Beijing Renhe FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Beijing Sinobo Guoan FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Belgrano de Córdoba&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Benevento&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Beşiktaş JK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Birmingham City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Blackburn Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Blackpool&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Boavista FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Boca Juniors&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bohemian FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bologna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bolton Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Borussia Dortmund&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Borussia Mönchengladbach&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Botafogo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bournemouth&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Boyacá Chicó FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bradford City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bray Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brentford&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brescia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brighton &amp; Hove Albion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brisbane Roar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bristol City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bristol Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brøndby IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Burnley&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bursaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Burton Albion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bury&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CA Osasuna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Antofagasta&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Aves&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Everton de Viña del Mar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Feirense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Huachipato&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Leganés&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Lugo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Nacional&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Numancia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD O&apos;Higgins&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Palestino&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Tenerife&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Tondela&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Universidad de Concepción&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CF Rayo Majadahonda&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CF Reus Deportiu&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cagliari&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cambridge United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cardiff City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Carlisle United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Carpi&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ceará Sporting Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Celtic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Central Coast Mariners&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cerezo Osaka&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chamois Niortais Football Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Changchun Yatai FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chapecoense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Charlton Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cheltenham Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chicago Fire&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chievo Verona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chongqing Dangdai Lifan FC SWM Team&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cittadella&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Clermont Foot 63&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club América&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Aldosivi&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Banfield&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Colón&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Huracán&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Lanús&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Talleres&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Tigre&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Brugge KV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Deportes Temuco&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club León&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Necaxa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Tijuana&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Clube Sport Marítimo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Colchester United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Colo-Colo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Colorado Rapids&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Columbus Crew SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cork City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cosenza&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Coventry City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cracovia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crawley Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crewe Alexandra&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crotone&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cruz Azul&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cruzeiro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crystal Palace&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Curicó Unido&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cádiz CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Córdoba CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;DC United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;DSC Arminia Bielefeld&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Daegu FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dalian YiFang FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dalkurd FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;De Graafschap&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Defensa y Justicia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportes Iquique&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportes Tolima&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Alavés&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Cali&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Pasto&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Toluca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo de La Coruña&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Derby County&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Derry City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dijon FCO&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dinamo Zagreb&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Djurgårdens IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Doncaster Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dundalk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dundee FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dynamo Kyiv&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;ESTAC Troyes&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Eintracht Braunschweig&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Eintracht Frankfurt&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Elche CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Empoli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;En Avant de Guingamp&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Envigado FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Esbjerg fB&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Estudiantes de La Plata&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ettifaq FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Everton&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Excelsior&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Exeter City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Extremadura UD&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Admira Wacker Mödling&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Augsburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Barcelona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Basel 1893&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Bayern München&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Carl Zeiss Jena&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Dallas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Emmen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Energie Cottbus&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Erzgebirge Aue&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Girondins de Bordeaux&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Groningen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Hansa Rostock&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Ingolstadt 04&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC København&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Lorient&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Lugano&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Luzern&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Metz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Midtjylland&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Nantes&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Nordsjælland&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Porto&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Red Bull Salzburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Schalke 04&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Seoul&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Sion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Sochaux-Montbéliard&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC St. Gallen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC St. Pauli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Thun&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Tokyo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Utrecht&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Wacker Innsbruck&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Würzburger Kickers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Zürich&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FK Austria Wien&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FK Bodø/Glimt&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FK Haugesund&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FSV Zwickau&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fenerbahçe SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Feyenoord&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fiorentina&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fleetwood Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fluminense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Foggia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Forest Green Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fortuna Düsseldorf&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fortuna Sittard&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Frosinone&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fulham&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;GD Chaves&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;GFC Ajaccio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;GIF Sundsvall&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Galatasaray SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gamba Osaka&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gangwon FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Genoa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Getafe CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gillingham&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gimnasia y Esgrima La Plata&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gimnàstic de Tarragona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Girona FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Godoy Cruz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Granada CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grasshopper Club Zürich&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grenoble Foot 38&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grimsby Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grêmio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guadalajara&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guangzhou Evergrande Taobao FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guangzhou R&amp;F; FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guizhou Hengfeng FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gyeongnam FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Górnik Zabrze&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Göztepe SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;HJK Helsinki&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hallescher FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hamburger SV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hamilton Academical FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hammarby IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hannover 96&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Heart of Midlothian&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hebei China Fortune FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hellas Verona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Henan Jianye FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Heracles Almelo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hertha BSC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hibernian&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hobro IK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hokkaido Consadole Sapporo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Holstein Kiel&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Houston Dynamo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Huddersfield Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hull City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IF Brommapojkarna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IF Elfsborg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IFK Göteborg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IFK Norrköping&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IK Sirius&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IK Start&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Incheon United FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Independiente&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Independiente Medellín&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Independiente Santa Fe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Inter&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Internacional&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ipswich Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Itagüí Leones FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jagiellonia Białystok&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jaguares de Córdoba&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jeju United FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jeonbuk Hyundai Motors&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jeonnam Dragons&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jiangsu Suning FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Junior FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Juventus&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Júbilo Iwata&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KAA Gent&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KAS Eupen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KFC Uerdingen 05&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KRC Genk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KSV Cercle Brugge&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KV Kortrijk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KV Oostende&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kaizer Chiefs&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kalmar FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Karlsruher SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kashima Antlers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kashiwa Reysol&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kasimpaşa SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kawasaki Frontale&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kayserispor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kilmarnock&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Korona Kielce&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kristiansund BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;LA Galaxy&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;LASK Linz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;LOSC Lille&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;La Berrichonne de Châteauroux&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;La Equidad&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lazio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Le Havre AC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lecce&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lech Poznań&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lechia Gdańsk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Leeds United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Legia Warszawa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Leicester City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Levante UD&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lillestrøm SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Limerick FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lincoln City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Livingston FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Livorno&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lobos BUAP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lokomotiv Moscow&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Los Angeles FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Luton Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;MKE Ankaragücü&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;MSV Duisburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Macclesfield Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Malmö FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Manchester City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Manchester United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Mansfield Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Medipol Başakşehir FK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Melbourne City FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Melbourne Victory&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Middlesbrough&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Miedź Legnica&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Milan&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Millonarios FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Millwall&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Milton Keynes Dons&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Minnesota United FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Molde FK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Monarcas Morelia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Monterrey&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Montpellier HSC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Montreal Impact&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Morecambe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Moreirense FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Motherwell&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Málaga CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;NAC Breda&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Nagoya Grampus&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Napoli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Neuchâtel Xamax&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;New England Revolution&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;New York City FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;New York Red Bulls&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newcastle Jets&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newcastle United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newell&apos;s Old Boys&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newport County&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Northampton Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Norwich City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Nottingham Forest&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Notts County&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Nîmes Olympique&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;OGC Nice&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Odds BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Odense Boldklub&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ohod Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Oldham Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Olympiacos CFP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Olympique Lyonnais&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Olympique de Marseille&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Once Caldas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Orlando City SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Orlando Pirates&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Os Belenenses&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Oxford United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PAOK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PEC Zwolle&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PFC CSKA Moscow&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PSV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pachuca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Padova&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Palermo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Panathinaikos FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Paraná&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Paris FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Paris Saint-Germain&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Parma&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Patriotas Boyacá FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Patronato&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Perth Glory&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Perugia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pescara&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Peterborough United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Philadelphia Union&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Piast Gliwice&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Plymouth Argyle&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pogoń Szczecin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pohang Steelers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Port Vale&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Portimonense SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Portland Timbers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Portsmouth&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Preston North End&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Puebla FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Queens Park Rangers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Querétaro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RB Leipzig&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RC Celta&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RC Strasbourg Alsace&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RCD Espanyol&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RCD Mallorca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RSC Anderlecht&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Racing Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Racing Club de Lens&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Randers FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rangers FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ranheim Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rayo Vallecano&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Reading&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Betis&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Madrid&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Oviedo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Salt Lake&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Sociedad&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Sporting de Gijón&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Valladolid CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Zaragoza&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Red Star FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rio Ave FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rionegro Águilas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;River Plate&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rochdale&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Roma&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rosario Central&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rosenborg BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rotherham United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Royal Antwerp FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Royal Excel Mouscron&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Braga&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Fortuna Köln&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Freiburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Heerenveen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Paderborn 07&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Preußen Münster&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SCR Altach&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SD Eibar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SD Huesca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SG Dynamo Dresden&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SG Sonnenhof Großaspach&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Brann&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Rapid Wien&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Slavia Praha&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Sturm Graz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SKN St. Pölten&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SL Benfica&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SPAL&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SSV Jahn Regensburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Darmstadt 98&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Mattersburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Meppen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Sandhausen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Wehen Wiesbaden&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Werder Bremen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Zulte-Waregem&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sagan Tosu&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sampdoria&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Jose Earthquakes&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Lorenzo de Almagro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Luis de Quillota&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Martin de Tucumán&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Martín de San Juan&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sandefjord Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sanfrecce Hiroshima&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sangju Sangmu FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Santa Clara&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Santos&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Santos Laguna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sarpsborg 08 FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sassuolo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Scunthorpe United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Seattle Sounders FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sevilla FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shakhtar Donetsk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shamrock Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shandong Luneng TaiShan FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shanghai Greenland Shenhua FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shanghai SIPG FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sheffield United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sheffield Wednesday&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shimizu S-Pulse&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shonan Bellmare&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shrewsbury&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sint-Truidense VV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sivasspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sligo Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Southampton&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Southend United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SpVgg Greuther Fürth&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SpVgg Unterhaching&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sparta Praha&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Spartak Moscow&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Spezia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sport Club do Recife&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting CP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting Kansas City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting Lokeren&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting de Charleroi&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;St. Johnstone FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;St. Mirren&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;St. Patrick&apos;s Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stabæk Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade Brestois 29&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade Malherbe Caen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade Rennais FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade de Reims&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Standard de Liège&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stevenage&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stoke City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Strømsgodset IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sunderland&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Suwon Samsung Bluewings&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Swansea City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Swindon Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sydney FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SønderjyskE&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;TSG 1899 Hoffenheim&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;TSV 1860 München&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;TSV Hartberg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tianjin Quanjian FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tianjin TEDA FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tiburones Rojos de Veracruz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tigres U.A.N.L.&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Torino&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Toronto FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tottenham Hotspur&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Toulouse Football Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Trabzonspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tranmere Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Trelleborgs FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tromsø IL&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;U.N.A.M.&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;UD Almería&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;UD Las Palmas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;US Cremonese&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;US Orléans Loiret Football&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;US Salernitana 1919&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Udinese&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ulsan Hyundai FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Universidad Católica&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Universidad de Chile&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Unión Española&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Unión La Calera&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Unión de Santa Fe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Urawa Red Diamonds&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;V-Varen Nagasaki&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VVV-Venlo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Valencia CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Valenciennes FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vancouver Whitecaps FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vegalta Sendai&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vejle Boldklub&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vendsyssel FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Venezia FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfB Stuttgart&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Bochum 1848&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Osnabrück&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Sportfreunde Lotte&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Wolfsburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfR Aalen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Viktoria Plzeň&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Villarreal CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vissel Kobe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitesse&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitória&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitória Guimarães&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitória de Setúbal&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vålerenga Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vélez Sarsfield&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Waasland-Beveren&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Walsall&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Waterford FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Watford&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wellington Phoenix&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;West Bromwich Albion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;West Ham United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Western Sydney Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wigan Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Willem II&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wisła Kraków&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wisła Płock&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wolfsberger AC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wolverhampton Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wycombe Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Yeni Malatyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Yeovil Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Yokohama F. Marinos&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Zagłębie Lubin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Zagłębie Sosnowiec&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Çaykur Rizespor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Örebro SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Östersunds FK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Śląsk Wrocław&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]' value='Player Group - Value &amp; Rating'>
              <formatted-text>
                <run>Player Group - Value &amp; Rating</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]' />
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]' />
              <size column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:value:qk]' />
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:overall:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Overall rating:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:overall:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:overall:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6C0411D8-887A-49EB-9D1B-C79DC2B39C3A}' />
    </worksheet>
    <worksheet name='Player Release Clause - Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
          </datasources>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column caption='Club' datatype='string' name='[club]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[club]' derivation='None' name='[none:club:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
            <column-instance column='[preferred_foot]' derivation='None' name='[none:preferred_foot:nk]' pivot='key' type='nominal' />
            <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
            <column caption='Preferred_foot' datatype='string' name='[preferred_foot]' role='dimension' type='nominal' />
            <column caption='Release_clause' datatype='real' default-format='C1031%' name='[release_clause]' role='measure' type='quantitative' />
            <column-instance column='[release_clause]' derivation='Sum' name='[sum:release_clause:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Heidenheim 1846&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Kaiserslautern&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Köln&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Magdeburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Nürnberg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FC Union Berlin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;1. FSV Mainz 05&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AC Ajaccio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AC Horsens&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AD Alcorcón&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;ADO Den Haag&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AEK Athens&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AFC Wimbledon&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AIK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AJ Auxerre&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Béziers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Monaco&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Nancy Lorraine&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AS Saint-Étienne&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;AZ Alkmaar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aalborg BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aarhus GF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aberdeen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Accrington Stanley&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Adelaide United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ajax&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Akhisar Belediyespor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Ahli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Batin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Faisaly&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Fateh&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Fayha&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Hazem&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Hilal&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Ittihad&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Nassr&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Qadisiyah&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Raed&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Shabab&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Taawoun&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Al Wehda&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Alanyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Albacete BP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Alianza Petrolera&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Amiens SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;América FC (Minas Gerais)&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;América de Cali&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Angers SCO&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Antalyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Argentinos Juniors&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Arka Gdynia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ascoli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Aston Villa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atalanta&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Athletic Club de Bilbao&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atiker Konyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlanta United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Bucaramanga&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Huila&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Madrid&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Mineiro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Nacional&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Paranaense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Atlético Tucumán&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Audax Italiano&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;BB Erzurumspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;BK Häcken&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;BSC Young Boys&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bahia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Barnsley&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bayer 04 Leverkusen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Beijing Renhe FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Beijing Sinobo Guoan FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Belgrano de Córdoba&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Benevento&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Beşiktaş JK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Birmingham City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Blackburn Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Blackpool&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Boavista FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Boca Juniors&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bohemian FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bologna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bolton Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Borussia Dortmund&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Borussia Mönchengladbach&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Botafogo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bournemouth&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Boyacá Chicó FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bradford City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bray Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brentford&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brescia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brighton &amp; Hove Albion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brisbane Roar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bristol City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bristol Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Brøndby IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Burnley&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bursaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Burton Albion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Bury&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CA Osasuna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Antofagasta&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Aves&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Everton de Viña del Mar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Feirense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Huachipato&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Leganés&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Lugo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Nacional&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Numancia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD O&apos;Higgins&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Palestino&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Tenerife&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Tondela&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CD Universidad de Concepción&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CF Rayo Majadahonda&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;CF Reus Deportiu&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cagliari&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cambridge United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cardiff City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Carlisle United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Carpi&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ceará Sporting Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Celtic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Central Coast Mariners&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cerezo Osaka&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chamois Niortais Football Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Changchun Yatai FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chapecoense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Charlton Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cheltenham Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chicago Fire&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chievo Verona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Chongqing Dangdai Lifan FC SWM Team&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cittadella&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Clermont Foot 63&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club América&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Aldosivi&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Banfield&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Colón&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Huracán&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Lanús&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Talleres&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Atlético Tigre&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Brugge KV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Deportes Temuco&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club León&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Necaxa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Club Tijuana&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Clube Sport Marítimo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Colchester United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Colo-Colo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Colorado Rapids&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Columbus Crew SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cork City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cosenza&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Coventry City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cracovia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crawley Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crewe Alexandra&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crotone&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cruz Azul&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cruzeiro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Crystal Palace&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Curicó Unido&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Cádiz CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Córdoba CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;DC United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;DSC Arminia Bielefeld&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Daegu FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dalian YiFang FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dalkurd FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;De Graafschap&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Defensa y Justicia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportes Iquique&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportes Tolima&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Alavés&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Cali&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Pasto&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo Toluca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Deportivo de La Coruña&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Derby County&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Derry City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dijon FCO&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dinamo Zagreb&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Djurgårdens IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Doncaster Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dundalk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dundee FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Dynamo Kyiv&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;ESTAC Troyes&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Eintracht Braunschweig&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Eintracht Frankfurt&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Elche CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Empoli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;En Avant de Guingamp&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Envigado FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Esbjerg fB&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Estudiantes de La Plata&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ettifaq FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Everton&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Excelsior&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Exeter City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Extremadura UD&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Admira Wacker Mödling&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Augsburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Barcelona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Basel 1893&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Bayern München&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Carl Zeiss Jena&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Dallas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Emmen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Energie Cottbus&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Erzgebirge Aue&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Girondins de Bordeaux&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Groningen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Hansa Rostock&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Ingolstadt 04&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC København&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Lorient&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Lugano&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Luzern&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Metz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Midtjylland&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Nantes&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Nordsjælland&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Porto&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Red Bull Salzburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Schalke 04&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Seoul&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Sion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Sochaux-Montbéliard&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC St. Gallen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC St. Pauli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Thun&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Tokyo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Utrecht&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Wacker Innsbruck&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Würzburger Kickers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FC Zürich&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FK Austria Wien&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FK Bodø/Glimt&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FK Haugesund&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;FSV Zwickau&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fenerbahçe SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Feyenoord&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fiorentina&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fleetwood Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fluminense&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Foggia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Forest Green Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fortuna Düsseldorf&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fortuna Sittard&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Frosinone&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Fulham&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;GD Chaves&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;GFC Ajaccio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;GIF Sundsvall&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Galatasaray SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gamba Osaka&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gangwon FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Genoa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Getafe CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gillingham&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gimnasia y Esgrima La Plata&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gimnàstic de Tarragona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Girona FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Godoy Cruz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Granada CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grasshopper Club Zürich&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grenoble Foot 38&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grimsby Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Grêmio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guadalajara&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guangzhou Evergrande Taobao FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guangzhou R&amp;F; FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Guizhou Hengfeng FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Gyeongnam FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Górnik Zabrze&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Göztepe SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;HJK Helsinki&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hallescher FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hamburger SV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hamilton Academical FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hammarby IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hannover 96&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Heart of Midlothian&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hebei China Fortune FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hellas Verona&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Henan Jianye FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Heracles Almelo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hertha BSC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hibernian&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hobro IK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hokkaido Consadole Sapporo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Holstein Kiel&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Houston Dynamo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Huddersfield Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Hull City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IF Brommapojkarna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IF Elfsborg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IFK Göteborg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IFK Norrköping&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IK Sirius&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;IK Start&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Incheon United FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Independiente&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Independiente Medellín&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Independiente Santa Fe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Inter&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Internacional&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ipswich Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Itagüí Leones FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jagiellonia Białystok&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jaguares de Córdoba&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jeju United FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jeonbuk Hyundai Motors&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jeonnam Dragons&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Jiangsu Suning FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Junior FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Juventus&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Júbilo Iwata&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KAA Gent&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KAS Eupen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KFC Uerdingen 05&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KRC Genk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KSV Cercle Brugge&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KV Kortrijk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;KV Oostende&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kaizer Chiefs&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kalmar FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Karlsruher SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kashima Antlers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kashiwa Reysol&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kasimpaşa SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kawasaki Frontale&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kayserispor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kilmarnock&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Korona Kielce&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Kristiansund BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;LA Galaxy&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;LASK Linz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;LOSC Lille&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;La Berrichonne de Châteauroux&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;La Equidad&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lazio&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Le Havre AC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lecce&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lech Poznań&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lechia Gdańsk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Leeds United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Legia Warszawa&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Leicester City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Levante UD&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lillestrøm SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Limerick FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lincoln City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Livingston FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Livorno&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lobos BUAP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Lokomotiv Moscow&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Los Angeles FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Luton Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;MKE Ankaragücü&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;MSV Duisburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Macclesfield Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Malmö FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Manchester City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Manchester United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Mansfield Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Medipol Başakşehir FK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Melbourne City FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Melbourne Victory&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Middlesbrough&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Miedź Legnica&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Milan&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Millonarios FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Millwall&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Milton Keynes Dons&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Minnesota United FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Molde FK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Monarcas Morelia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Monterrey&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Montpellier HSC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Montreal Impact&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Morecambe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Moreirense FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Motherwell&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Málaga CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;NAC Breda&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Nagoya Grampus&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Napoli&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Neuchâtel Xamax&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;New England Revolution&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;New York City FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;New York Red Bulls&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newcastle Jets&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newcastle United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newell&apos;s Old Boys&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Newport County&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Northampton Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Norwich City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Nottingham Forest&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Notts County&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Nîmes Olympique&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;OGC Nice&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Odds BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Odense Boldklub&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ohod Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Oldham Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Olympiacos CFP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Olympique Lyonnais&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Olympique de Marseille&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Once Caldas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Orlando City SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Orlando Pirates&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Os Belenenses&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Oxford United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PAOK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PEC Zwolle&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PFC CSKA Moscow&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;PSV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pachuca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Padova&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Palermo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Panathinaikos FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Paraná&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Paris FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Paris Saint-Germain&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Parma&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Patriotas Boyacá FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Patronato&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Perth Glory&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Perugia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pescara&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Peterborough United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Philadelphia Union&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Piast Gliwice&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Plymouth Argyle&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pogoń Szczecin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Pohang Steelers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Port Vale&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Portimonense SC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Portland Timbers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Portsmouth&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Preston North End&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Puebla FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Queens Park Rangers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Querétaro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RB Leipzig&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RC Celta&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RC Strasbourg Alsace&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RCD Espanyol&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RCD Mallorca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;RSC Anderlecht&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Racing Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Racing Club de Lens&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Randers FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rangers FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ranheim Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rayo Vallecano&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Reading&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Betis&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Madrid&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Oviedo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Salt Lake&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Sociedad&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Sporting de Gijón&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Valladolid CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Real Zaragoza&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Red Star FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rio Ave FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rionegro Águilas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;River Plate&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rochdale&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Roma&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rosario Central&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rosenborg BK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Rotherham United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Royal Antwerp FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Royal Excel Mouscron&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Braga&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Fortuna Köln&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Freiburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Heerenveen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Paderborn 07&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SC Preußen Münster&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SCR Altach&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SD Eibar&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SD Huesca&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SG Dynamo Dresden&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SG Sonnenhof Großaspach&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Brann&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Rapid Wien&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Slavia Praha&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SK Sturm Graz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SKN St. Pölten&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SL Benfica&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SPAL&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SSV Jahn Regensburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Darmstadt 98&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Mattersburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Meppen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Sandhausen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Wehen Wiesbaden&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Werder Bremen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SV Zulte-Waregem&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sagan Tosu&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sampdoria&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Jose Earthquakes&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Lorenzo de Almagro&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Luis de Quillota&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Martin de Tucumán&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;San Martín de San Juan&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sandefjord Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sanfrecce Hiroshima&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sangju Sangmu FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Santa Clara&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Santos&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Santos Laguna&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sarpsborg 08 FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sassuolo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Scunthorpe United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Seattle Sounders FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sevilla FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shakhtar Donetsk&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shamrock Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shandong Luneng TaiShan FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shanghai Greenland Shenhua FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shanghai SIPG FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sheffield United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sheffield Wednesday&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shimizu S-Pulse&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shonan Bellmare&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Shrewsbury&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sint-Truidense VV&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sivasspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sligo Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Southampton&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Southend United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SpVgg Greuther Fürth&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SpVgg Unterhaching&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sparta Praha&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Spartak Moscow&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Spezia&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sport Club do Recife&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting CP&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting Kansas City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting Lokeren&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sporting de Charleroi&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;St. Johnstone FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;St. Mirren&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;St. Patrick&apos;s Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stabæk Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade Brestois 29&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade Malherbe Caen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade Rennais FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stade de Reims&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Standard de Liège&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stevenage&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Stoke City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Strømsgodset IF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sunderland&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Suwon Samsung Bluewings&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Swansea City&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Swindon Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Sydney FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;SønderjyskE&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;TSG 1899 Hoffenheim&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;TSV 1860 München&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;TSV Hartberg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tianjin Quanjian FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tianjin TEDA FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tiburones Rojos de Veracruz&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tigres U.A.N.L.&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Torino&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Toronto FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tottenham Hotspur&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Toulouse Football Club&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Trabzonspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tranmere Rovers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Trelleborgs FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Tromsø IL&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;U.N.A.M.&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;UD Almería&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;UD Las Palmas&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;US Cremonese&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;US Orléans Loiret Football&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;US Salernitana 1919&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Udinese&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Ulsan Hyundai FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Universidad Católica&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Universidad de Chile&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Unión Española&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Unión La Calera&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Unión de Santa Fe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Urawa Red Diamonds&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;V-Varen Nagasaki&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VVV-Venlo&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Valencia CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Valenciennes FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vancouver Whitecaps FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vegalta Sendai&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vejle Boldklub&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vendsyssel FF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Venezia FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfB Stuttgart&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Bochum 1848&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Osnabrück&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Sportfreunde Lotte&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfL Wolfsburg&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;VfR Aalen&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Viktoria Plzeň&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Villarreal CF&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vissel Kobe&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitesse&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitória&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitória Guimarães&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vitória de Setúbal&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vålerenga Fotball&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Vélez Sarsfield&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Waasland-Beveren&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Walsall&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Waterford FC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Watford&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wellington Phoenix&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;West Bromwich Albion&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;West Ham United&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Western Sydney Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wigan Athletic&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Willem II&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wisła Kraków&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wisła Płock&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wolfsberger AC&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wolverhampton Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Wycombe Wanderers&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Yeni Malatyaspor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Yeovil Town&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Yokohama F. Marinos&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Zagłębie Lubin&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Zagłębie Sosnowiec&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Çaykur Rizespor&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Örebro SK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Östersunds FK&quot;' />
              <groupfilter function='member' level='[none:club:nk]' member='&quot;Śląsk Wrocław&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]'>
            <groupfilter function='level-members' level='[none:position:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]' direction='DESC' measure-to-sort-by='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:release_clause:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]</column>
            <column>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:release_clause:qk]' value='C1045%' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:release_clause:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk] / ([federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk] / ([federated.043vgmb0s7grj214p8sr61m8t6fp].[none:preferred_foot:nk] / [federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{6EDB7794-E860-459D-A82A-4928670DE32F}' />
    </worksheet>
    <worksheet name='Players Market Value - Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter_Age_vs_Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MAX Value&quot;'>
              <calculation class='tableau' formula='&quot;MAX Value&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column caption='Player_Age_vs_Value' datatype='real' default-format='C1031%' name='[Calculation_364510134687686657]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;MIN Value&apos; AND MIN([value]) &gt; 0 THEN MIN([value])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;MAX Value&apos; AND MAX([value]) &gt; 0 THEN MAX([value])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;AVG Value&apos; AND AVG([value]) &gt; 0 THEN AVG([value])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &apos;MEDIAN Value&apos; AND MEDIAN([value]) &gt; 0 THEN MEDIAN([value]) END' />
            </column>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='None' name='[none:age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_364510134687686657]' derivation='User' name='[usr:Calculation_364510134687686657:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' default-format='C1031%' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' included-values='non-null' />
          <slices>
            <column>[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' scope='rows' value='Player Value' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='normal' />
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='9' />
            <format attr='text-align' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='center' />
            <format attr='vertical-align' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='auto' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-format' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='auto' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='auto' />
            <format attr='vertical-align' data-class='total' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='auto' />
            <format attr='font-weight' data-class='total' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='normal' />
            <format attr='font-size' data-class='total' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='auto' />
            <format attr='text-align' value='auto' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='9' />
            <format attr='font-size' scope='rows' value='9' />
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='true' />
            <format attr='font-weight' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='bold' />
            <format attr='vertical-align' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='auto' />
            <format attr='text-align' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='auto' />
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='vertical-align' scope='cols' value='auto' />
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='10' />
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='10' />
            <format attr='font-weight' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='bold' />
            <format attr='text-format' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='' />
            <format attr='text-format' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='c#,##0&quot; €&quot;;-#,##0&quot; €&quot;' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='1' />
            <format attr='border-style' data-class='total' value='solid' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='true' />
            <format attr='break-on-special' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='true' />
            <format attr='show-null-value-warning' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='true' />
            <format attr='alternate-text' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Age:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'><![CDATA[Player <[Parameters].[Parameter 1]>: ]]></run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.1644198894500732' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#8cd17d' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='table' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.043vgmb0s7grj214p8sr61m8t6fp].[usr:Calculation_364510134687686657:qk]</rows>
        <cols>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]</cols>
      </table>
      <simple-id uuid='{1AC0E205-8EFE-4714-BA6E-53597047774B}' />
    </worksheet>
    <worksheet name='Players Market Value Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter_Player_Values' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Value&quot;'>
              <calculation class='tableau' formula='&quot;Value&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column caption='Player_Values' datatype='real' default-format='C1031%' name='[Calculation_470626200545779715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;Value&apos; THEN [value]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Release_clause&apos; THEN [release_clause]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Wage&apos; THEN [wage] END' />
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
            <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
            <column caption='Release_clause' datatype='real' default-format='C1031%' name='[release_clause]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_470626200545779715]' derivation='Sum' name='[sum:Calculation_470626200545779715:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' default-format='C1031%' name='[value]' role='measure' type='quantitative' />
            <column caption='Wage' datatype='real' default-format='C1031%' name='[wage]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]'>
            <groupfilter function='level-members' level='[none:position:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]' value='12' />
            <format attr='font-weight' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]</rows>
        <cols>[federated.043vgmb0s7grj214p8sr61m8t6fp].[sum:Calculation_470626200545779715:qk]</cols>
      </table>
      <simple-id uuid='{0ECFD6A8-9A35-425A-9F15-558308716EA3}' />
    </worksheet>
    <worksheet name='Players Overall Rating - Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
          </datasources>
          <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='ID' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[age]' derivation='None' name='[none:age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[overall]' derivation='None' name='[none:overall:qk]' pivot='key' type='quantitative' />
            <column caption='Overall' datatype='integer' name='[overall]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:qk]' value='10' />
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='10' />
            <format attr='font-weight' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' palette='blue_teal_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' value='Player rating - Size range'>
              <formatted-text>
                <run>Player rating - Size range</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:qk]' value='12' />
            <format attr='font-weight' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' />
              <size column='[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Age:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Overall player rating:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Number of players:&#9;</run>
                <run bold='true'><![CDATA[<[federated.043vgmb0s7grj214p8sr61m8t6fp].[ctd:id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:qk]</rows>
        <cols>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]</cols>
      </table>
      <simple-id uuid='{7E3FA5BD-5459-40F5-AC92-CEA8F3D22199}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Football Player Data Analysis – FIFA 19' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98734' id='9' param='vert' removable='false' type-v2='layout-flow' w='99266' x='367' y='633'>
            <zone h='3798' id='10' type-v2='title' w='99266' x='367' y='633'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94936' id='7' param='vert' removable='false' type-v2='layout-flow' w='99266' x='367' y='4431'>
              <zone h='94936' id='1' param='vert' removable='false' type-v2='layout-flow' w='99266' x='367' y='4431'>
                <zone h='7991' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99266' x='367' y='4431' />
                <zone h='86945' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99266' x='367' y='12422'>
                  <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='Market Value, Wage &amp; Release' captured-sheet='Players - Market Value, Wage &amp; Release Clause' id='1' />
                      <story-point caption='Players &amp; Country' captured-sheet='Players Number &amp; Market Value - Country' id='2'>
                        <capturedDeltas>
                          <worksheet name='Number of Players - Country'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Latitude (generated)]' field-type='quantitative' max='9100408.0505390316' min='3670928.264325595' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[Longitude (generated)]' field-type='quantitative' max='3169419.3757374985' min='-1695527.3901314759' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Market Value &amp; Rating - Age' captured-sheet='Players Market Value &amp; Overall Rating - Age' id='3' />
                      <story-point caption='Market Value, Release Clause &amp; Rating - Club' captured-sheet='Players Market Value, Overall Rating &amp; Release Clause - Club' id='4' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{14E7BDE1-3081-4312-AFEF-977A5D8541F2}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Players - Market Value, Wage &amp; Release Clause'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter_Player_Values' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Value&quot;'>
          <calculation class='tableau' formula='&quot;Value&quot;' />
          <members>
            <member value='&quot;Wage&quot;' />
            <member value='&quot;Value&quot;' />
            <member value='&quot;Release_clause&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
        <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
        <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='28' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='5860' id='29' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92056' id='24' param='vert' type-v2='layout-flow' w='98828' x='586' y='6902'>
              <zone h='92056' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='6902'>
                <zone h='92056' id='5' type-v2='layout-basic' w='87115' x='586' y='6902'>
                  <zone h='92056' id='3' name='Players Market Value Overview' show-title='false' w='87115' x='586' y='6902'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='92056' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='6902'>
                  <zone h='6771' id='8' mode='dropdown' name='Players Market Value Overview' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]' type-v2='filter' w='11713' x='87701' y='6902'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6771' id='9' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11713' x='87701' y='13673'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6771' id='10' type-v2='dashboard-object' w='12006' x='87701' y='91667'>
          <button action='' button-click-action-metadata='pdf' button-type='text'>
            <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{EC473336-EAF6-435C-9CCB-FBEF31F5F005}&quot;</export-button-action>
            <button-visual-state>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#8cd17d' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='59' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='58' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='5860' id='29' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='8' mode='dropdown' name='Players Market Value Overview' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]' type-v2='filter' w='11713' x='87701' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92056' id='3' is-fixed='true' name='Players Market Value Overview' show-title='false' w='87115' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='9' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11713' x='87701' y='13673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='10' type-v2='dashboard-object' w='12006' x='87701' y='91667'>
                  <button action='' button-click-action-metadata='pdf' button-type='text'>
                    <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{EC473336-EAF6-435C-9CCB-FBEF31F5F005}&quot;</export-button-action>
                    <button-visual-state>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#8cd17d' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EC473336-EAF6-435C-9CCB-FBEF31F5F005}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Players Market Value &amp; Overall Rating - Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter_Age_vs_Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MAX Value&quot;'>
          <calculation class='tableau' formula='&quot;MAX Value&quot;' />
          <members>
            <member value='&quot;MIN Value&quot;' />
            <member value='&quot;MAX Value&quot;' />
            <member value='&quot;AVG Value&quot;' />
            <member value='&quot;MEDIAN Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='14' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='5860' id='15' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92056' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='6902'>
              <zone h='92056' id='5' type-v2='layout-basic' w='87115' x='586' y='6902'>
                <zone h='46027' id='3' name='Players Market Value - Age' w='87115' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46029' id='9' name='Players Overall Rating - Age' w='87115' x='586' y='52929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92056' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='6902'>
                <zone h='6771' id='8' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11713' x='87701' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6771' id='10' type-v2='dashboard-object' w='12006' x='87701' y='91667'>
          <button action='' button-click-action-metadata='pdf' button-type='text'>
            <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{EC473336-EAF6-435C-9CCB-FBEF31F5F005}&quot;</export-button-action>
            <button-visual-state>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#8cd17d' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='44' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='5860' id='15' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46027' id='3' is-fixed='true' name='Players Market Value - Age' w='87115' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='8' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11713' x='87701' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46029' id='9' is-fixed='true' name='Players Overall Rating - Age' w='87115' x='586' y='52929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='10' type-v2='dashboard-object' w='12006' x='87701' y='91667'>
                  <button action='' button-click-action-metadata='pdf' button-type='text'>
                    <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{EC473336-EAF6-435C-9CCB-FBEF31F5F005}&quot;</export-button-action>
                    <button-visual-state>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#8cd17d' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{14466A46-951A-496B-BC94-6997F1B44EC8}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Players Market Value, Overall Rating &amp; Release Clause - Club'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='fifa_players+' name='federated.043vgmb0s7grj214p8sr61m8t6fp' />
      </datasources>
      <datasource-dependencies datasource='federated.043vgmb0s7grj214p8sr61m8t6fp'>
        <column caption='Club' datatype='string' name='[club]' role='dimension' semantic-role='' type='nominal' />
        <column-instance column='[club]' derivation='None' name='[none:club:nk]' pivot='key' type='nominal' />
        <column-instance column='[position]' derivation='None' name='[none:position:nk]' pivot='key' type='nominal' />
        <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='10' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
              <zone h='5860' id='7' type-v2='title' w='98828' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92056' id='6' type-v2='layout-basic' w='98828' x='586' y='6902'>
                <zone h='92056' id='8' name='Player Release Clause - Table' w='49414' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='82713' id='13' name='Player Market Values &amp; Overall Rating - Clusters' w='49414' x='50000' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9343' id='15' name='Player Market Values &amp; Overall Rating - Clusters' pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]' type-v2='color' w='18302' x='50000' y='89615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9343' id='11' mode='checkdropdown' name='Player Release Clause - Table' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]' type-v2='filter' w='15885' x='68302' y='89615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9343' id='12' mode='checkdropdown' name='Player Release Clause - Table' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]' type-v2='filter' w='15227' x='84187' y='89615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='30' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='5860' id='7' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9343' id='11' mode='checkdropdown' name='Player Release Clause - Table' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]' type-v2='filter' w='15885' x='68302' y='89615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9343' id='12' mode='checkdropdown' name='Player Release Clause - Table' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]' type-v2='filter' w='15227' x='84187' y='89615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92056' id='8' is-fixed='true' name='Player Release Clause - Table' w='49414' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82713' id='13' is-fixed='true' name='Player Market Values &amp; Overall Rating - Clusters' w='49414' x='50000' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9343' id='15' name='Player Market Values &amp; Overall Rating - Clusters' pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]' type-v2='color' w='18302' x='50000' y='89615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BF4080E9-F663-4A50-971A-BAABB986F40E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Players Number &amp; Market Value - Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='12' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='5860' id='13' type-v2='title' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92056' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='6902'>
              <zone h='92056' id='5' type-v2='layout-basic' w='87115' x='586' y='6902'>
                <zone h='92056' id='3' name='Max Player Market Value - Country' w='43559' x='44142' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='92056' id='9' name='Number of Players - Country' w='43556' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92056' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='6902'>
                <zone h='13802' id='10' name='Number of Players - Country' pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]' type-v2='color' w='11713' x='87701' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13802' id='8' name='Max Player Market Value - Country' pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]' type-v2='color' w='11713' x='87701' y='20704'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='44' h='6771' id='18' is-fixed='true' type-v2='dashboard-object' w='12006' x='87701' y='91667'>
          <button action='' button-click-action-metadata='pdf' button-type='text'>
            <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{EC473336-EAF6-435C-9CCB-FBEF31F5F005}&quot;</export-button-action>
            <button-visual-state>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#8cd17d' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='49' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='5860' id='13' type-v2='title' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92056' id='9' is-fixed='true' name='Number of Players - Country' w='43556' x='586' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13802' id='10' name='Number of Players - Country' pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]' type-v2='color' w='11713' x='87701' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92056' id='3' is-fixed='true' name='Max Player Market Value - Country' w='43559' x='44142' y='6902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13802' id='8' name='Max Player Market Value - Country' pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]' type-v2='color' w='11713' x='87701' y='20704'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='44' h='6771' id='18' type-v2='dashboard-object' w='12006' x='87701' y='91667'>
                  <button action='' button-click-action-metadata='pdf' button-type='text'>
                    <export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{EC473336-EAF6-435C-9CCB-FBEF31F5F005}&quot;</export-button-action>
                    <button-visual-state>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#8cd17d' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C12D9781-BA42-45D8-B1F4-A70C26BB200D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Players Market Value Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F6B43B4-4F3F-4BD8-B25C-71CED1B1996E}' />
    </window>
    <window class='dashboard' name='Players - Market Value, Wage &amp; Release Clause'>
      <viewpoints>
        <viewpoint name='Players Market Value Overview' />
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{17C46F42-3E41-4EA2-A669-EF6D49338799}' />
    </window>
    <window class='worksheet' name='Max Player Market Value - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{39D58237-F6E1-4DE4-A2FB-18ECC1B717F6}' />
    </window>
    <window class='worksheet' name='Number of Players - Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:3:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:id:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:nationality:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{265EB395-FBD9-418D-BED3-7BBB37F3CD6C}' />
    </window>
    <window class='dashboard' name='Players Number &amp; Market Value - Country'>
      <viewpoints>
        <viewpoint name='Max Player Market Value - Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Players - Country'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:4:ok]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{1B6DF364-5A71-4EAB-AF64-E9BB2EF7C77A}' />
    </window>
    <window class='worksheet' name='Players Market Value - Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8524CC2C-C80F-407C-8874-1E5B7FFCDF33}' />
    </window>
    <window class='worksheet' name='Players Overall Rating - Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:age:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:id:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:overall:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1ACFD60-A8A6-47EF-A7A1-6EEB505D52FE}' />
    </window>
    <window class='dashboard' name='Players Market Value &amp; Overall Rating - Age'>
      <viewpoints>
        <viewpoint name='Players Market Value - Age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Players Overall Rating - Age'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C72D0050-5249-49C8-8DE1-1CB5DEBDF69A}' />
    </window>
    <window class='worksheet' name='Player Market Values &amp; Overall Rating - Clusters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92ED8916-7D7F-42D6-99BE-3F7660DB30AE}' />
    </window>
    <window class='worksheet' name='Player Release Clause - Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:club:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:name:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:position:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:preferred_foot:nk]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:release_clause:ok]</field>
            <field>[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:release_clause:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89AF959E-AB5F-44DB-A3AF-242990030B37}' />
    </window>
    <window class='dashboard' name='Players Market Value, Overall Rating &amp; Release Clause - Club'>
      <viewpoints>
        <viewpoint name='Player Market Values &amp; Overall Rating - Clusters'>
          <highlight field='[federated.043vgmb0s7grj214p8sr61m8t6fp].[none:AdhocCluster:1:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Player Release Clause - Table' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A53C67FB-7C18-47C0-B3C1-38081EE500A0}' />
    </window>
    <window class='dashboard' maximized='true' name='Football Player Data Analysis – FIFA 19'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{93946F7D-697D-43AA-B053-979B87F7774B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Football Player Data Analysis – FIFA 19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Max Player Market Value - Country' width='192'>
      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
      V1YXDB4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Players - Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Market Values &amp; Overall Rating - Clusters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZQk91Xn+4k1I/elMmvfq3rvVu+tVkvWaklGlsHGxgs2mw0GZjyHNwMc
      Bg+P8TAMMwyPGQ7gx47BNtjYyNjYlizJkrUvve9VXV3VtVdWZVbuW+zx/sjqlEpVkn2Y4Wmw
      +ntOn9P1i/hFRmTc+/vd5XtvCp7nedzADbxFIb7ZN3ADN/Bm4oYC3MBbGjcU4Abe0pDf7Bu4
      gX/Z8DwP3WmgO3X8chCfqCEIwvc013It5qtT5PQsHi4RNc5AaARNCnzP1/hfhXDDCb6Bfypq
      VoWL+VNk9XRrLKV1sTtxiKASesO5ZbPIicwzNJzaunFJkNmfvIUOf8//L0pwQwG+j+F6LgUj
      S95YRRQkUloHYSX2v0Ww6naV55e/jeE0NhzTJD/HOu8lIAc3nWu7Ns+mv0XNrmx6XBJk3tZ1
      PyEl8r98n98NN0yg71NYrsW53Ess1xdaY1cQGY5sZ2tsD6LwT3f/PM9jvHBuU+EH0J0G44Vz
      7E/esqmypevzryv8AI5nM12eYE/boX/yPX6vuOEEfx/C8zwmihfWCT+Ai8tkeYyl2tw/6ZrX
      /9metc7s2QxZPY3t2ZseKxq57/p5RXP1De/hfxdu7ADfh7Bdi6Xa7Osc9ZivTtETHPieTCHb
      tfnW2Dd5bvoZTNtkT9dNvHP3u7DdzYX71ffguBay8IqI/VNNL8/zyNfzPDL2DWYL06SC7dy/
      /QH646//DK7nUrerNOw6PslHUIkgIm44/4YCfB+gpJd4dPxhVirLjCa3cMvQMWzPet3zdaeB
      i4vovWIAbCZInufxuROf4fGJR1tjy5U049nL3LbrCG9kRYmCxFOT3+HF6efxK37etfs97OzY
      hSAIxH1tzFavvuEzxX3J1v+LjSK/9e3/RLq81Bo7MX+cf3/PrzGSHN1wz1W7zMX8SfJ6Fo/m
      bhFWYuxKHKDN177uWW84wf/CUTNr/Pojv7pOOPZ038SBrbuxXGPTOXE1RbVk8uTVJzBsnX09
      B3j/vg8SUNc7ravVLP/ua/9m09X+9p3H6E12ve59LWSXeXb8hZa5ElSD/Kd3/BZdkW5sz+a5
      9KNv6ATf1nkfISWCIAh89cJDfOnsFzacd6T/KL9w+y+uE+iGXeOF5Sc2RJcAZEHh5o471ynX
      jR3gXwg8z8PDQ0BY98Jfmnl+nfADXFg6z56BnaBsvI6AwKX5MZ668nRr7LErj7BcXuKX7v5V
      nrv2DOeWztAd6WE0ueV1TZ2wkECT/OibRoEClMq1dbZ6zaxxYu5l0uUlxjKXifjD7BgYIRII
      r5vrOC5jC1d4+MQTaIrGD+x4kKXS4qb3sFJZxvGclpnleR5T5fFNhR/A9iyuFM9zpP3OVhDg
      hgL8M8PzPCpWkVU9g+s5hJUYKX8HoiB9z/PPLZ3hb09/jrpZ487Re/jhPT+CKDZfYEkvbzqv
      09ePoFmk6/OwZgaIgsRAaAvfOvXUhvMvpM/zly//KU9NPtkaG0wMIYvypkownBjlpo69XCqc
      JttI4+HhuA7pfIa+wAghdb1gCwg8PPZ1KkZz1c9WMxTqBT5x5yeoOWVczyWqxvnm+Uc4M3u2
      Ne/PX/pjhhLDmz9jpAtJkMjXc1iORTKYZFVffv0vEygaeUzXQJP8wA0F+GeF7Vqcz51gqb7e
      IQ3JEfanjhFV49/1GiW9yB88+z9pWM2V9ivnv0xXpJtjg7cBsLtrD185/yVcz33l+mqIrant
      hHwhhowtFIwcoiCS1DqQBRXD0jd8jofHSzMvrBtLl9Mc6b+FF2aeXTceUAI8Nfkdvnj6b0gE
      2njHzncykhrmD57+Pa5mrwIvoEgKUS1KSS8hILCv5wBjK5fWXSdfyyM7GgdTNwHNXeLi0sUN
      9yYIAj3RXhZLr0S1wr4w79r1Q/zNqb/mkbFv4uGxt3sfe7fseMPv08PF9ZzW3zcU4J8Jnudx
      LnecdH1jyLFqlzmeeYq3dd6PJgfe8DqLpcWW8F/H+MplKkaFk3Mvo0gK2zt2MrV6FcM2iGgR
      3r7lPq7lptiS2krclyKhtTeTYvU8riQw1DbChfS5ddcMqSGG20Y4/6rxkBriY0c/zkhydC0K
      ZJAMpriYPt+an61lWXhxng8e+Mia8DdhORZ3bL+LPd170WSN3lg/v/L1f4tefUX5JEGiYTf4
      x4tfxXQMtqW2b/odRLUoP33053h0/BGuZq/gU3x8YN+HsV2rJfwA55bO4g8pDHf2v+73qYoa
      qqi1/r6hAP9MKJq5TYX/OgxHZ6o8zs7EfhzHZqG0gGEb9EZ7CajBlp3fG+0loASoW/XW3IvL
      F3ji6uOtvyVB4scO/xQ7Onby5bNf4B8uPISHR1ekm1+++5PUjCp/+uL/y3xxDgGBjnAnmuJH
      X1MsVVK5f/sDdEW6WSwtkquvElCD/MSRj6FKKjcPHOXWodsI+yL8xct/gvOqFRSaK/ej4w9v
      eEa/EmBX557W3x888BH+6Lk/wHItBAS2tm/nD5/9vZZZJIsKmqKtu4aAwO0jdxHzx+mKdvP4
      xLdoWA1WKivcPnJXS/ivQ8WPgLBh/Dr6w8NIrzI/byjA9wDP8zCcBg2ngSzIBJXwBmf0tcg2
      3tgWBVjVl8lVV/n087/PRGYcD4+4P8FHb/4ZDvQeYrYww0szLzCYGCZdXkKWZA72HuaZa0+t
      u47jOTw1+QRxf5yT8ye5bvOny0t86czfMrZyiZJeaj4LHsuVNEOJYd69532cXzrDizPP89D5
      LwGgyRr3br2fDx74MA2rwe88+VuMrVxGEmVuH7mD+eL8ps8SVEPc1L2P80tN+z0ZTPG2kTtb
      x+tmnbnCLL2xPkK+EO/b+0G+fO6LLeGHpsko4Oeu0bdzafkCjutwz9Z7Odx3M/l6js+8/GeY
      jtl6tuevPUMikCBfzwNrirzlQQyhwlR5bIMSdAcGGA5vX/fepE996lOf+q5v6i0Kz/NYbixw
      ZvUFxornmK9OMVu9ykzlKrZrEfW1rVtNXo2VxhIFY2M289UQEHj04uNcTJ9vjel2g4vpC7SH
      O/i9p3+Hi8sXyNYyRLQI//H+32SobZjHxh/ZsAqrko/eWB/nlk6vG89UM9StjVGRUqPI/t4D
      /OPFf6Bhv2Ji2a7NtdwUyUCSb199jNMLJ3E9F9u1mcpNots6lrMxx7C/5yA/f+wTDCSGsByL
      qD/KXHGWiC9C3B/n95/9Xb4z+QTFRoFMdYXOcCcX0xeomevvzfNcPnjgwyyWFpgtzHBp+QIn
      5l/Gw2spV+tc4Fff/n8jIJAuL+F5TT9mMb/E9uRuUqF2FEHBtGwWMxkadQu/EiDuj7eU4MYO
      8DrwPI/LhTNMV65sOGa5JpPly6w0ljjSfgf+Tez48PdA5PJcgbGVyxvGK0aZvzn12XVmT6a6
      wumFk9wxcic90V6m89fWzdnavp2buvcS8oWprq2qoiDSG+vjWm5y42fj8dC5L6HbGx1igIfO
      f2lTM6It0IYoiK3PAAj5wjyw40EkUeZqdoJTCydax75z9dt89Oaf4dLyeuf29MJJOiNdZKor
      68ZDvhCfPfEZ5ouvmI/zxTkeOvelDaZNb6yP3lgfsqS0/CTTMbm8comJ7BV++e5PEhPDfOb4
      56iaVQC+celrfOzoz/K24Tso66UbXKDN4HkeM5Wrmwr/q1GxipxefX5dBOY6Ovy9+CRtk1mv
      YCA0yusZUeKmmVmXK5lxRpJbUCUVaO4iQTXIZHaC33j01/FJKv3xQXZ07ORjN3+cHz34Ywib
      fEpADWK5r58trhgVhE3EYzS5hf9433/m6MAxOsNdpELt3Nx/FNdzyVYzG3wB27X52sV/wK+s
      XySSwRTvven9RLVYa0yVVI4O3rqpmWW7Nnu6biKkNmnWXZFuPnrzz5CtZnj8yrc2Pf/vzvwN
      Xz77hZbwQ5Mk+Pfnvsh45jK//PV/e8ME2gy2Z3Eq+9wGM2Mz6E6dkBIhosbWjUuiRESJsVxf
      wGOjggyFt7E1vpvp3DWWyusTPVEtyk8d+RkupM+1bN62QJKF0jzfuPyPXMtN4XgO29p38KED
      H+b43MuU9BKGrdOwGgTUAL9+/28wmtpKWzBJWS9zLTf1yr0JEj9x+KPk63lWa9lNn8sna7xv
      7/u5vHyxpeB+JcD92x9ga/s2bhm8FUkUOTH3MpOrV3lq8kkKjQKz+Rleq28eHh85+OOMrVzC
      dmyiWhRJlHh68kn8aoDDfUe4eeAWPrD/wySDSZ59jY9zHbcM3koy1M5yJY3l2mSqK1iOzdnF
      05ueXzPr1Kxa6zu8Dtu1mc5Pk6mu3DCBNkO2sYz5OjSCzbBYm6UnOLhhPOXv4rbO+7iUP8Nq
      YxlJkoiqcQbDW+nw9zCdm2I0tZW5wizZWgbP82gLtnHH6N0sFOc53HczhmMyGB8kV1/l0fFH
      1l3/SmYMWZQ3vOB0eYnJ7FUUWeWJicdYra3SHemmPdxJT7SXowPHGEmO4njOhtj8dezs3MXh
      /qN0Rbq5mL7AlcwYk6tX+cPnfo/2UDsfO/pzfOnsF1ufbTomL8++iCBsjMAkgyluHbqdw/1H
      KTQKfO7kZ9YJremY/Pah/4GmaJT18oaoFzR3uhPzx9flAk7Mvcyl9Ma8wXUE1SCpUDsT2fF1
      41F/DG9NqW8owCaoWptnV9/o/M2oCjWzxj+ce4iXZ1/CckyG2kb40IGP0OHv5rMn/pInrj6O
      67nIosxdo/dwx8hdPD/9LF89/1Br99FkjT1dN3Fp+cKmnz2bn950/PTiKZ6ceBzDeUWRdVvn
      wwd/nK5IN3OFWUJqiC2pbVzNrjf1/IqfheIc/+6rnyDqj/Gh/R/hxZnnWoKdqWb4i5f+hPpr
      HFjXc9nbs3+dcMuiTHekmz9+8dN0R7q5bfgOJjLrPy9bzTBfnMV2HVYqy9y95V4eGfvGuh34
      UP8RLiytz10A1K0aiqRivWYRADg2dCtH+o/yu0/9d8prUTCf7OMD+36UQiPP7KmZG2S4zTBR
      vMhEaXOB2wx+KUij5PGdySdQRIUHd/0gtwzexh8++3u8PPfiunPj/jg/su9D/PlLf7zOd/Ar
      fn7s0E/yFy/96QbTK6iG6I/3b+owv2P7O3nm2lPrhLEz3IlHkyvzWhwbvI3eWB9fOf9lbNfG
      r/g51HcznudiOiajyS2cWjjJlcxYa05ACWA65jpKRGeki5pRXRfGDPsi/LcH/x9m8tOcWTyN
      JvtYKM1zdvFM65ytqe3kally9VdqAiRBYlfXnlaURxZl3rH9nXh4WI7FTd376Ah38Mlv/PKm
      fsv79n6AZ689ve55D/ffzL+69d+gWzpPXv02Y5nL7GjfycG+w/TF+nE9l29c+toNH2AzmI7x
      hkms12Jy+RoPX3yEqlGhpJc4tXCSkBri0fGHN5gDuq0zV5il9irHDMBxHcpGeVOb3HJMDvff
      zFxhZp1yJAIJ3rnzB/GApdIiUX9sjdn5IZ64+hiOu9GHqRhlLi1fbJkutmsjCgK/dNevcmzo
      NgYSQ3zt4lfWmSCu59IT7W3lEgDu2fZ29nTv42pmAtu10WSNjxz6Cba376Ar2s3+3oNsbd/G
      F059ft0ulKuvcv+2B5jKTeF6DgIC+3sPcn7pbOu7cj2XilHhF27/RQKqn3w9R1SLcmnlIhVj
      /e4cUAL81JGf4YGdTdJcvp7jQO8hfvaWf81KZZlf/9YnObt4mkx1BQ+Xd2x/J0W9yNcuPsRS
      eemGCbQZkv5OVFHDdDcPEb4W6Xxm3d+u5/LU1Hde14lWZRVREDfsAO2h9g3myHWMtI1y6J7D
      fPXCQ2SrWQYTQziew28/8V9agpMMpvjozR/HdR1UScWwN/oxoiBtILdVjSq2ZyMjo0gKA/HB
      dYoY88f4pbt/lRemn2WhNE9bOMFY5QwRNcpvPPBbZCorvJx5Bp//tTmRzZOFRwePcdeWe5hc
      vUpXpIuG1VgXOr1+T3/24h/x3PQzQHNXuGPkLsp6uaUEqqTygf0/SirUzudP/RUn548DcHzu
      JRpWA1VS14Vrx1Yu8/jEozwy9g3yazvQW3YH8DwP0zVYrM2wWJumaOSRRRmfqCGJEoqosNJY
      +q7XafO145kyU6+JtR/qO8x8cW7TEOnbt97HUGKYa7kpPDx8ssaHDnyEfT37eX762Q1zgmqI
      gOLnW+PfxHJt3rPnvezu3ssXT39+3Q6Tq68iCAIHeg+RrWXWRX6g6Ujet+N+KkaF8qtYpLcM
      3cahvsNAM3cwmtrCXGGOqlkhGUpx/853MF29wgNb382B3kMsNmZYrM5juzZxf5yh+AgzlUmm
      ihOUzCIBJchydZGp4hWKRoGV0isLxE3d+3jH9ncS8oXpi/UT88cJ+cK8OP38uoRdd7Sbi8sX
      1u0Kuq3za/d9ip5oLx4ekiAhizJtoSSfO/lX6xJ0meoKDau+Ic+xWFpoCT+8RRXA8zwKRpbj
      madYrM9SNHPkjAwL1WlczyWhpYiqiWYpnrF5mNDzwCf6SYhdxPwJJjJX0NcyqluSW/nZY/+a
      XG2VueJ6JmhbMMlN3fuYyF7BcAwG4oP8X7f/Evt7D9IWTCIKAhOZKy0lCKhBhtuGeWn2BapG
      lZJe4uT8Scp6aUMdwPVnu2vLPWxr306hUWC5nMb1XAJqkFuGb2FGH0PVJLbFd+FXgmzv2kZd
      LjJZGGe1sULNqqE7dQSfw31bf4BUvI2svkSukSXTWGaqeIWJ/GUc10ERFcbzF5kuT2E5BgIC
      ul1nqTrPWP4C2cYKIX+QnmgviUCSXd276El10hPuI6/neHnpWfxygKgWx5F1inqesBrllsFj
      3Dl6Dy/MPLfu2URB5D173ovjOjx07u8o6gWm89c4NX8c3TbWsTwBjg3dti5hqEoqo6mtLFde
      qWd+S5pAhqtzevVFdGd9qK1ZNH6ZoBKmLzTEttgeQnKEk8vPI8q0OPia5KdeN/n6xUfI1Zqr
      SWe4iw/s/1GGEsMMJoZ5ee4lNMVPX6yfulnH9RxGklsYSgzz+ZN/1TJD8vUcj4x/k4/f8vM0
      rAYxf5y9PftpWA0O9B7iYO8h/vrEX66/T89Zlyl9Na4nlgJqkB87/JMk4lG6Ar10hbvxqwE+
      c+EPERCw1Ro/tOUHqVlVLq+ex8Wlbtf58pXPcqz7DgRB4NzqCUAgXV2gI9jFfHkWWZSoWZWW
      Mxr1xZAEkeXaEiElQraxwkBkGFlUKBlF+sKD+CSdSKiZeCsaeT536U8JqWGmS5NMlybZlthF
      urHAvTvvYyS2jecWnmQgMUAymFpniu3t3ocq+Tg1f3ydeVlsFNnevoPxVznu+3oOcOfoPWQq
      KyyWFugId/Gem96H57mcWzzT2lnekgqQrs1vEP5X4DFTmaAnOMCp+RP82Yt/RNWsEtUifOzY
      x9nZvhvHcfkPD/9KS/ihWSt7av4Ed4zcze8+9dvrbPlDfUf42WP/Ck3281+//RsbbPCXZ17g
      jpG7+OyJv2S2MNMaVyWVu0bvIRFs23CXb99yH09Ofntd5EMWZe7e+naenn+cuNaG4ehcyp/h
      WvkKjYU6feFBtiV2MVkYRxQkZsvXmC1fQxYUBEegqOcYiAwjCAIlo2nK1K0aoiA2K69EmZJR
      oDPYgyI2y80GoyMsVRcwHIP2QCcT+ctk6yv4JI2oGqNkFAAo6DmqVoVdbfswHB1RkLi15y5m
      S9d4duEJtiV2cXH1LLOla5TMAi8tP8P7D36AF6deJF1ZYqhtiB/Z/wEmi+No6voMuyRI/PTR
      n2Mmf43xzDipYIrJ3FU+9a3/gOu5+JUAtw2/jd1rzNQf2fdBvnrhK1iu+dY0gear1yiZ+dc9
      7nkuKV83//Xb/7lF1jJsg5ncDD+w/UGuZid47MojG+aV9TKGrXNi7uV14+nyEjs6dpEKt/Po
      +COU9OKGuSvVZSZX1xeKL1fStAWT3DFyJ6cXTrTuZVv7Dn788Ee5eeAWamYV0zaJBWPsH9qH
      4pM4mzmJKIicTL9I1BcjpEaomuVW7UFfeBBRFJEEiY5AFwl/G53BbkpGkdVGhrpdb9XjVswy
      muwnqASRRAlV8jFfmaFiVUgFOsjUl1msziEJEovVOQ503Ey6tkjNrhLTEsiijCYH8MkahqMj
      izI1q0q2sUJnsIvl+hJVq4Iq+YhpCXJ6lrpVx3RNXGzaY0nikQht4ThnM8d5duEJJFkkKreR
      rWaQJZn9A/vY33uQ7e072d97kNnCDA9f/nprlbddi8vLlzncf4SHx77Bk1e/jV/R+JG9H3pr
      KkDeWKXwOrY9gCppaIT41mt4LYZtcM/W+yjrJZ699vSGeZIgoSn+DQQvgOG2UbamtpGupJlc
      nVh3rD3cgeVYG0J80Mxm3jl6N3eM3s2W5Fa6E53s6t2J7VlczJ2hPZaiP9VL3l0h4PNTt2r4
      5QA1q8pQbAsThcsYdoN7Bx/E9iwqZomSWeJw162cyZygZBRb9bGu52J7FqIgIokSNatK0t/O
      cm0RTQ4gizJxrY26XScVaKdu1YlpcdoDneT1VSzHJKbF8StBPDyS/nYmi1eorwn8rra9LFbn
      CKtRUv52ruQv0xXsBgTiWhtBJYhuNxiIDuOTNBRJwXCMZiRJEKhZVapWGVX2cefI3fS29fK+
      mz7AucLxNYXqJqgE+ealf1yXMYZmuHe1muXpqSfRbZ26VWciO/7WJMN1+Ls3JYhdR0rrpDPc
      TcS3ntHZEerAcR38SoBUqH3DvJHkFvb3HtwwLgoimuzj65e+imkbJNYYlQIC7aEOPn7Lz9MW
      TG6YB6DICrlGFtPVSUbaUHwSl3Pn+ZvLfw7AqeUXuVaaJOqL4XoejudQMgpk6svMlKZoD3TR
      HuhkpZbGdExUyUfRyHMuc5KDHUfxSRq5Rpal6gKapJGppfE8j7pVQxJl5irTgIDp6NiujeWa
      9IcHifkStPlT6LZOQA4R8yVIaEmqZoWqWSahJcnUl0n520n4U/SE+pv1Dlpbcxewa/SG+9Ed
      fe1+01wrXmW5tsh47iJjufMElRABOYDneeQaGRzPJiAHCSohTq+8TN7I8OWJz3Jrz52UjSKf
      PvPfeWHpGQK+jexcAWFd9AegYTXeWplg13OpWRVsz2K2MslCbSONwDQt8vkalu0QUPxrRLMi
      UX8MTdZYLjcLwBVJQUTEdC0EmizJnzv2CaJalP+5xuOH5hc/1DZMtpptrfCiIHL7yJ3cOXoP
      fbE+/EqAk/PH+f1n/sc6/8Cv+OntbkeQoCfUx2ojiyY3K54USSUoN1dax3OZL08zGt+GYRtU
      rQp5fRVV8vELBz/JyeUXuFa8SsyXoGQWEYD2QCe6o3Mld4mOYFcr6jQc28rplZfojwyj200y
      WcUso9t19qQOULMqgIDj2gSVMAUjh+HoRNQoJaOI6ZhIgkhIjSAKIgktSd2utbpI5xur9IYH
      qJoVFEnB8RxU0UfEF2WhMktezxFRo0iCRDLQTtkoEVCCrXe3XFsi5ovjk/1IgkhRL7C9bTdL
      1QVWaksk/e0MhEZ5+PwjLfoDwJ6uvRwbvI0/efHT6973W8IE8jyPlcYiJ7LPMFm+xHz1GlWr
      jCKq+CQ/nuehSj5CUpyvnPgaV1auMFeY4Vpuip848jF+8sjHKOnFdQUZrucS9IX4lbs/yQM7
      H+SBHe+ibtX5+qWvkq1mMR2D4bYRfuLIx1gup5ktvKJsHh6r1Szv3vNewmu7TFeki45wJ5lK
      M2OZCqfY0bcVk2Yce3dyP2WzSF5fxXB0dif3MVEYI9fIsrPtJvyyn6uFcfojw3i4iIJEUAky
      V56mZBSxXIuqVSasRmjYdUBAFAQWq/OYjoEqqaiSD0EQMR2TqC+2tmInUEWVhD/JUnUe12sW
      leu2ju1ZeHjUrSpFvUBveICikacj2M2Otj2cXH4RqeVAKzTsOnWrhotL1BdHFmWS/g5ya36H
      JMr4ZT8BJYjhGGtOeDNJF1SC+EQffiVA0t9BQV/FLwfY136IufI1ymaJqK8ZAfPJKnu792M6
      zRrm20fuoiuZYqhtiM5QN6u1LMlQO4ZtvDUUYLmxwOns81juK4Sp5srpEPclOdpxN8OR7cxk
      Z3nxNZ0RKkaFe7bex18f/4sNxemGbXDL4K1sSW1jPDPObz7+HxnPjJGv5zAdk9XaKlEtykx+
      et1qBE3qwy2Dx4gHEgCsNjI8t/wEx4ZuozPRgRoQWW4sEvMlSAba0WQ/qUAHFbNE3JegbBax
      XBPbs6mYZVKBTtoDXWxr20XdrqGITYLYbLkZBxcFEVEQmnW3kp9MPb3meMbpCfVztTjeUo6i
      kcdyLSzXwrB1VMlHY+2ajmfTGexptRYxbJ32YBfZxgor9TQPjPww5zOnmK/MoogK/ZEhXM+l
      YdfXCGseeT2HXw6wVJ3DLwfwhCbnJ+VvOtVt/nYy9WVEUSKgBLEdi6pZwXBNBE8griUIKWEc
      z2GhOosiqgiCQEewi6rVrGNouFUCfo1YJELBzqDJfipmiXdu+yHeseNBbh44ymNXHvn+D4O6
      nsNY4QyvVySdaSxRMvO0+7s37dVz3VYXXqcPoLi2Yv7ZS3+0QUEAHh1/eFP7PugLkggm8TyX
      6dIUs+VrzJdnKOp5bNciqIQYjW1HdxpUzBLLtSUkQUIQhGbTWRcGo6MtwSobRUzX5KErn2co
      OopP9jEc28JKPU1CS9IXGeB85vTaKhtAlTRsz0JAxK8E6An1o8l+8o0sNavaNEH87bi4qJKv
      1eTKdi2yjRVqVpUKZTTJ3zRprApVs8Kp5ZcYiAwTVMNczV+mZBSRRJGoL0aJIh4eATnI4a5b
      ubR6Ftu1aVh1VuppJFHCLwdxXJuoL0ZEjVK3azScBn45QFiN4LgODbvBeO4CN7Uf4FrpKn65
      uSssVRdI+dtpOA0iShSo4NGkWzfsGhdWT9MZ7GF3aj+a7Kcz3PX9vwNUrDKT5Y0syldDEX2k
      tC7agkmOz77UCjdKgsS797wXSZJoWPUN1IKOUAfv3/ejzBVm+cblr73u9UeSW4i9/tAAACAA
      SURBVFqOJYAiKdy34x1kzEWeX3qKl5aewXQM3rvtw3ieS8HIc1PqIBdWz7C3/SCz5WvoToOB
      6Aia1FzJCkYez3NxPBvXc3A9j4TWRsWsUDTyZOrLCILA7uQ+pkuTlI0iJbNI0t9OXs+Ra2TI
      66vc3HUb5zOn2ZrYyUo9TUewi4ASWjOLfEiCRFEvYLkmETWCg0NIiVDS84CAR/MeQmoYERHL
      NWjYDYpGnpgvzmojQ9zfRs2qNqvXlFCL5el4Dgc6bqag56jbNW7tuYu5yjR1q0a2sUJADhLV
      4syWr2G7Fiu1dDM6JCpEfFEKRh6/HCCkRqjbNQQEkoEOuoK96HYdUZQxHZ2gEkYURDqDPSxU
      ZziXObnGsB38/t8B7Dco+7sOyzF5avJJvjP5bRRJZiQ5ymhyK/l6jr86/heYjoFP9hHVojSs
      Bo7rENGi3DZ8B4ul+Q3MztciHojz87d+gpPzJxhbPY8jWUw3xvAaHrZrc+/gOzmfPc3LS89S
      NSvYrsXT84+R9LczXZpkS3wHDbveisl7XpMHo4gqhqOjyRq2a6E7Oookrwml0zRtCmPYrkXE
      F+No9+2M5y6iyRpdoV7KRomZ0hTDsa3k9VXqVg1N9iMLEm3+FF2hXsZyF0hoSRp2A93R8Yk+
      svVl2oNdqKJKurbIbGmahl1ne9tuqlaZ7YndnMucxHUdPDwaVp1cY5VUoIP5ygymYzIc29rk
      DhlFElobYTXCVHECx3PoDw/hk7Xm59mNlpB3BnsJKiHKRpGoFkcWFSzXwif5UMSmQ12xymTq
      yyBAQA7gkzRqZjMnUTIKzFdm2BrfwdPzj+OTtO//HUAUJGbKE69rAgFkCjm+cPJvydVzVIwK
      NaPKrUO38fDYN3HWojLXqcW/+cBvsyW1ldOLJzm3dIanp76D67mky0ubEt8A7hq9h52du2mP
      pJisjFG1S9SsKpqk0R7oxHRNdLtBT7iPmlVFd+pYrk1ca8NyLa4VJ+gO91E2iixV57m97166
      Q71osh/Xc+gIdqOIKtPFCVKBThJaGx3Bbibyl7Hc5uoc19p4Of0cpmtgOSaa7KcvPECmnmau
      Mo0sKCiiQsUogiCwUl+mYTXt/s5QN9eKE+h2A7/iJ+FPkmtkmxEcycfejkNIokRADjYJcHrT
      hwipYRzXps2fok1LUber1Kzqmv/VFFxJlIj6YtiujYfHUHSUslnCckykNUV0cQkpYaprwh1R
      oxiOTtWqIgoiFbOM63lYrkXDrrM7uY+ikUeVfNSspvC7noskSGxv2930mfztTfPs+10BJEFC
      d+qUzMKmx1VRYzGz0qxlXYPjOcwX5ja0E3Fchx0du3ji6mOthq3X++zs6dq7jmR1HalQigf3
      /CDfnv0GC5U5ikYBVVLxPEj621mszpHQknjATHkKRVSQRJnuUC/XShPU7RoHO4+S9LdjuRYj
      sW0sVefJ1Jeb274gEFLCeHjEtDYadrVpt4sqPeEBYr4485VZqlaFYz13YDrGWnbWz1J1oUV7
      2Nd+iMOdt/Bi+hksx2J/xxF2Jm9iNLadsdx5EJp1zkuVeSpmmbAvwmJ1nqKRZ7m2iCwqTWHz
      xVEkhYpZos3fjiCIDMe2UDZLTBevsju5j65wLzOlKVRJwyf7GMtdYCA6wkJlhppVbSbbrBqG
      o1PQc/SGB7iUO0tXsBefrGG5FmWjiOM5pAIdVM0yK/U0ATmIKvlQJR+ThTG2JXZTsypr9Qge
      JbOA4RiIgojtNZXl/ygFuF5W6OHi8d1/UOHVKYzXO1cQBNq0dopmrmmHvuo8VfRxMHUb+Wph
      Q9uO7R07WC5vFOh7t72D43MvraMTA/z00Z8j4U8wW5jBcR0kQaKvrZdwwsdE4RI+2YfjOQSU
      EI7nEPXFSdcWONx1jJLRdA6Lep66VSOvN/sJyaKMKmkMREeYLk3ikzUWq3OookrNqiGJEsvV
      RQJqCPBYri0xEtvG5dVzDK4JlOM5BOQgN6UOsFCdZbo0iSRKa3wembyeI+XvYLY8RUHPEdPa
      6An3cXn1HEU9T7q2SMOuE1LCbE3sYq58DcdzEAWRnlA/fjnAYHSU4diWtR+kaCAIAjvb9mK7
      FhWrxGJlnoASZCg6yoXVM+h207EXBZGoL05IDdMbGqBmVQmrEcpmid7wAFPFK9TtGqqk0hse
      YKY0SUewk4ivmXOIawlW6ulWVEoSZDL1ZaK+GILQpHpcKVyiM9jNSm0J0zGJ+eJMl5qUk+5Q
      3/8ZCuB5HkUzx1jhLGOFc61YfcnMb/rTm67nsFibY6J0genKFbJ6GkEQCcrhded5nsdKZZmv
      nP97Ts2cYS63gF8OMpLYQl9wiJ2xA1zNXKVqVMnWMtTNOqIgcqDvEB+/5ee5vHKJQuOVnWNv
      9z6ODBylolfW8f/7Yv28e897Cfh9eKrF4f6b2dW7k1sGb2UsfwHXcznacztLlXk8PKpmmfnK
      DD2hPipWBd2u43ouZbNEe6CTqtlM9+t2nW2J3SxV5pgtT+GX/YSUMGE1wnx5GtO1SAU6kAQJ
      SZQIKWEmi1cYiAwR8cWaHZe1eDPv0MigiioBJbhm6pTQFD/WWnbYdExSgU6uFSdYrM5xrOdO
      VmppDEdvmShlo8iDI++lZlVZqMw2HV9BpGIWSdcWqJhlDFenZBQpm0UkUcZyTHJ6lopZAgSq
      VoV7Bx+kJ9RPzaoyXZpkIDJC2SwxVbxCWImwuuagD0ZH15JxVRJaGwmtjZVamryeoyPQxZ7U
      fparixiOTliNUrWq3NR+kJpZYb4ygwd0BruRRQXD0fHLgTWliyGLCrIgv/mZYNdzGSucfd0e
      PAICo9GdbI3uQRCaGcizuZc3LVnsD42wO3GoxW2ZyU/z20/8l3Xksyan/H28a9e7+Z3v/FZr
      5Vcllffv+xBbU9vI1rKcWTiF4RiYtkk8kMAnqZxaOMlqLYssyrSHOoj6Y7SH2nn3nveSCrXz
      mQufZrZ8rUkw05K4uETUGOnaPEW90MzeKiFEQWS+PEN7oJOw2jQlekL95PQsDbvO7b1vRxRE
      np5/nK2JnWTry1iOhSRKxH0JbM8hqISapDSjRH9kGMs18UkaeT1LxBenblXRJD8ls0hEjWG7
      Ft2hPk4sP98SCse11yrELOJaGwuVWRL+FAV9lXcOv5fvzH2LiC+65v8IXCtN0B3qw3QMHM+h
      YdWwXIvR+HYmC+M4nkNfeBDLNekO9VFYC+lWzBJJfwfZxgqa1HTAoWlSrjYyJPxJJEGkZJTY
      33GYl5aeaXXcu56Y8zwXvxwgXWuannEtQUAOElCCZBsZREEkU0sT19qIqFFUycdCZZaIL7rG
      /anSFxlaCx4oCILAUnXhzd0BPM97Q+G/jryRRQASvnauVcaZqUxsel7JLOCXgkR9Tafnj1/4
      9IaCFA+PqdWrCILA01PfaY07noMoSliuxV8d/3PmirMslRbJVjPcu+0dXExfaFGVXc+lYTX4
      9/f8GneM3MV8dYbTKy9juc0XFfXFWKzO45M1BJp1wC4uFbOEB+xo201Bz6HJAXS7QdQXp2HX
      UUSZopGnZtUIKiF0R2e2dK0ZE/dFyTWyVKxmJKjNn1pLajW5PA27QcHIkfAnsV2bdHWBgNLk
      0fhlP9nGCiDQHxki5ouTb6wiCCIRX5R0bZH9HUewXItMPU1MSzBVmsBY4//ojs5qY4XOYA97
      kvtJ1xbWfBkfjueS0NoQBQm/7Kcn3I/h6ASUIEvVOSpmmc5gd6t7XjMhJ9Kw660kWDOz3EAR
      lWZyz7WwXBNBEFEkBVVUaQu00xXsYaE6h+WadAS6mS5PElTDBJQA/eEB4lqSqlWmbteJ+mIE
      lBAVq4wsyji49EeGWKkvocl+HM/BdN7kTHDRzHE+f/x7OjdvrNLh72a8eH5dRve10J0G/aER
      amaNL575/KZ9LJ21VP6rzRtoCva5pTPrii08PCayV6gYpXU1tq7nsqd7H1OVMZ5deILJ4niz
      FLC2xHB0S+uXS2RRJttYJunvQEBkODpKtp4hrEawPQtJFFv04GY2t6NJAlOCzJSmiGlx6nad
      4dhWKmYJQRAwHIOiXsD1HLL1Fcw1x87DI+ZLIAjNXqF+OUBQCZGuLhBRowSUABWjjOEarNZX
      KJlFdrbdhOu5nF55iX3th8gbeepWlYASpDvUi27rlMwCPaE+FElhpjRFZ7AbVdLoCw9SNkrN
      aI/nULer9IT6qVtVKmaZXGMV0zXwSX4KRp6gGsJyTZZrS3QFe7iYO9tKMMZ8CdK1BQJqiOXq
      IpIok64tIiCgKX6Kep5LuXPsSR1AFCQEQSTuS+B4ztruUUSVVUzbwHCMNWfZZKW2hCqp7E7u
      53j6ObqCvUiCtJbneBPDoJ7nMVY8R8UqffeTmzMwXZOyWdy009qrLsxAeBTHdXjsyiMbmkZd
      xx0jdzOTn1lHPtvbvZ+ZwkaCnOu5dIa7KL5KYVRJpSvZwUz5KkPRLUTUGLIoNyMUZomKUcL2
      bOp2M5J0c9dtlM0S2cZK8wW4JqqoslRdJKxGiPhiaLKv2WKwvoIiKsS0Nvak9rNSW0IUJKaL
      kwTV0NoKaRFfo0m8rfft+OUAiqjg4bJST1O1quT0LIqoMhQdbVEETEfngeH3UDZLqKIPURBZ
      qadpD3TSEepitjxF2SyR8KeI+KIMxbYgImI4OjWrRtHIY9gNZFEhr6+S9LejSj7mKtfQ7QZV
      q4IkSuQaWZKB5i7VGewh6U+xVFugI9BNw64jiwrtgS5CaqhJVW5kSAU7Wa4tMRAZom7XMB2D
      gehIcwX3HCpmiZgvzlx5hoKRQxYVbNd6FYWjQEHPsSu5j6pVbhXxaLIfyzVxPY+gGqJkFpmv
      zNAZ6n5zd4Dx4tk37E/5WjTj7N4btiz0SRqD4S3Iksxk9uqmdbOa7Ocnj3yMwcQgS+UlEoEE
      P7DjnfzQnh/miauPb6jYagsm+cU7f4WrqxPNzmVqgLfvvJeJ8kUKRp7VxgqqpGI5TWZoQAkh
      CWKrYMSjGdFhLcbll4OUzEIz1W/VSGhJLNdqRim0OIajUzFLmI7JteIVOoLdLFXnGYltxXYt
      FFGlfe3aBT2PJEpcLYyRqS9TNAo8MPLDrBE48PBYqaVJ+tuZr8ywM7mXr09+mYAcZEt8O9Ol
      SURBJNvIsNrI0B7sQhFVuoI9a2HI/FoXNYGecD9z5WstwtpKvdlBb09qH3k9hyTKSIJE3a6z
      PbGbqC/WTG65NgEliCwquJ6D4znUrCoIXpNVqoZaP2eqSipTxat0hnoQECiZBXySRsQXQZM1
      6ladkdhW2gOdRHwxTMegZlUQBRFV8jEYHWG1kSHpb2857nl9FUVUqVhlBiPDFPTcWk4j+Cbu
      AHhcLV3aUMj8RpAEmbiWet3ObZ7n4dkSj116fI2a4DVbfrxKoGVR5gd3v4enpp7g65e+RtWo
      sKd7Lx/c/2E01Y9P1tZ+JWWtZlRU+OmjP0tPrJeJ2nm62zrY2bOTK6ULJP0pukN9ZOrLVM0K
      O9r2kNdXyTdWUSWVvJ7jQMeRFiWgZtXwKwHyepZcI0tMaxbeb0vsJF1bYLWxgm7rTf67nkUS
      JXySxnxllq5gL4vVObpDfWQbK63sZ8koULUq+OUAPsmH7dr4ZI1sY4WuUA+GY+B4TW7NaHxb
      0zRSArRpSU5njlM2S3h4jMa2oYgK85UZwkqEklGkoOdo2HVG4ttYri1RMvJYTtNhTgU6kEWZ
      mC/O1cI4oijRGWyu7gPRYXRHJ6SGm0ohSqzUlwgpYbL1ZSK+GB4udavWVKTaMke738ZSdZ7V
      RtM89MkamcYySa25czSzvs3+Qz5Zo2KWaNj1ZlcNSaO6RtOWxFecZ7+s4XgumqRxZ/996LaO
      Iin45QAj8W1MFC6/eVQIAQFVVN/Qnn8tfJLGtuge8np20549pmXx9TOPUTVeoSZEtCi3j95F
      rrZKRItwbPBtjGcut7qVeXg8e+1pdnbsZkfHTlYqy6SCKSRR4mDfYY4N3kpnpIsXFp8m18gi
      iwpx2pqF5a6N5zUrnxRRIaxG8DyPodgoI7FtjOcuUtTzrXaJhqNTqZa4d/Bda7FoganCFSYK
      PsprBeR+pWm3+2uBJhnNc+mLDLJcW8QnaVxePcdIfBtX8pc50HEEWVQo6LlmhMxzcD2Xy6vn
      EYCinqc92MVQYJSCnqNcLiELMh4esqDQEehicY2R2eZPUTQKSIJMwp9kpbaEJmssVRcom0U6
      g92cz55qZVtnSlOIgtji9uQbq+xI7GG2dI1MLY0oSuTX6hd0u7GW9PIT9kXxST52tt3EM/OP
      E/XFWa4tcWrlpTV6uoYiqdSsKil/B3tSB+jR+1muLSIKYkvRG3ajGfmpp+kK9gJCc8cpXCGg
      hAirYYpGYW2BSnNy5aW1DLjGVHGc2NpvO7xpO4AgCJTNImVr8wztZugJDNATHCCldVC1KjTs
      WrM/jCiT1DrJ5kpcfE2zVMM2uGfLvdy77X5kUSHoC3F87qUNHZk1xc/fn/87LqbPUzNr1Iwq
      b996Lzd172eltsxE/hKj8R2MxLeSX1u9VxtZso0VjnbfjiiKTBcnqVlVlqrzrNTT2K6FKvmY
      KU9yuPNWpooT1OwqktgkmEmiiCYHaPMnkUUFRVK4kr/cqtxaqi6gO3V0u4HtOmu1uWFSgQ6i
      vhjzlVkytTQIoFsN/EqAopFHFJrmz4HOmwkrEVZqaURBatrxdo2yUWr+eroaIhXopCvUw9mV
      EwSUZlIr38iuRZ5izRYxvhgFI0dXsBfHsxmIDK/5CU1KhOVabIlvY6Eyy1BsFMe1SVcXSQU6
      m5Ei16ZkFJBFmZASomyWWW2s0BPuZ6Y8RcUs4+ERVMKElDAVs9yKguUaWQxHZ6Eyh+mYhNQw
      JaPQpGHIvibnP9BOurpAT7ifklki4osS88Vp8ycpGyWKRgERodmi3fNYXns33aHeN5cMNxTZ
      xkJt+g15OtchCRID4S0IgkBADpPJFnlq6lk8PO4avYeDO29jcmHzViFnFk7xhdOfo2I0bcWQ
      L7ThnLJeolB/pVDew+OJq49zZOAWXk4/y1xlBrc8tdYz36Mz2ENvZICyUeRqYYyKWSbmiyNr
      bTieQ1ewZy0uv8pwbCsvLD0FeBzqvAVFVJksjNMTOsJiZa7F0/fLQQQEukN9VM1yM+qDwO7k
      fr4z9y0SWhJV8nE8/RwHO462ikUEx8ByLbpCvbQHujDWygxfWHyK7lDfmgPoEtfamC5exXRN
      +iJDjOcuIokSFaPEjrY9XFw9Q66xiiRIxLU2xnIXiGttVK0yhm3geE2qdNEoUDZLbEvsIqxG
      qJhlLqyewSdpawUxXWxJ7KCo5wnIASzXalWMyaJMQktycfUMJb1AT7i/mZST/ETUaFMxQn3M
      lKcAgT3J/UyXJgkozZj/9WxxurbIruReAnKAqlXhtt57AI9UoIO+8CDTpavNfE2gE9u1iGkJ
      REEkokaJa83VP6+vvrlOsCr6AIGckfmu5+6M76c90I3neXzj8tf40tkvUDNr1M06l5cv0RZM
      MpgYWtfFGJo2fN2qtZJh16m429q3U9Kb6fj7tz/A7s49G9rzJYNJSt4qF1fPMhwdxXAMfmD4
      3azqWfojgxT1Aiu1JYpGgZAaxvYcukN9yKJMwchTMgqs1JfAYy0pZJOppUn4k61qJ1EQWaou
      YHs2kiASVMMsVGbpiwxiu3bLwb3O92nYde7ou5dUoIM9yQNk6ysMRkeJaQn8coBsY3mtnLFB
      XGujYpYomyUUUcXzXI713EXZKBLxRSkahWZ2WQ2Tri3SFxmkPzLEeP4iHh5t/naqVqUZtvWF
      KRh5ImqUqBYjXVtkub5Emz+FT1JxPZdUoKNZc6wXqJhlekJ9tPlTDEZHWhTt62bMntQBlmtL
      CDSVf0ey6T8VjSJFo4Bh6yTXCmPiWoKCnqMj0NmM3a+FQa/XGC+UZ1v0aNPWyTaWcT2PxTXu
      VUAJYtgGDbtOurpA1BfH9Zw3XwEEQSDhSyEKIgU9u+lOIAkSO+P7GQxvRRAEXM/lM8f/fAMX
      p27Wed/e9+N5HtP5KVzXJaiGeP++D5IuL61r7IoAH7v541TNKrl6Dt1qcKjvCNdyU61ekpIg
      0dXezmB8iLgvwURhjLJZZKW+jCb7m13RchfXGj9phNQwBT2H4TRI+JOA0PzRN0Hgtt57miud
      WSKsRltJGBcX13PZmtjBcm0Rx3PYmdyLQLMdyfX62Ca3PkGbP0lXsBdFUji7cpKEP8nF1bPU
      7RphNUJez72SPJJ8uLhYrkX9/2PuPcMkScsz3Tu9N5VZ3puuau+9me5x3eMtMIwBZoQdBJJw
      R1pppT3IIbE6wJ4jhBDIIBYQRrgZxvVMj2vvTXV1eV9Z6b0LH/sjcrJpDZxzrkuLRPyriiur
      MiPj++L73vd57kcpM9SwBovZyuXkeZrdreTETH2TbPQhEsTKEexmBx2+bpaLRkrLQMMg3b4+
      EpUYRamA2+ahKBnXvsffz/qmzZyKHqPZ3YbVbKvdnLCmcSPT2QkuLA6zVFjEbNFZ37QZRVOY
      yo0TcARxWBw4rC7mCzM144yVO/ruZz4/TVEuoOgKJclAzXjtPtq9XZSVIolKjLWNGxlOXTCW
      SJrhXciKabx2X135WZKLUBP7FeUCnb4eXLWJR6p1q//TtUAmk4mQs4l2TzcmjBtc1Q0dedjR
      zLam/bS4O+oaH13XeX3qyNvYOmFPI3khx6n5E5hMJrZ2bucTBz7N+raNlMQi1+LX9wadwS40
      XePYzBsomkKummM8McYfHfpjMOm0+FpoCPlxOKwkK3FEtYrXbqSaNLmaMWEiVY2zpnEjFpOZ
      BleYWHmZgpSnqlRZ37SZsKvJaGrZfYiqyGJhlkQlajyRlDJuqweX1U3QEeJi/AwDwVUUpDyV
      mryg3dtFq6cDr8OPy+pG0QzXl8VsPLpLUoHJ7BgHe+81JhAxQ4MzRJOrhbyYJeg0qA0uq5uQ
      s5GUkKAo5RkMrWYsc5WskMZvbyBSWmBb6+76tbGabUZJ0erAZ/dRkApMJqeplk0c6LkNm8UA
      alnNVgS1atTT3e3YzAZYV0MnXokStIf58YljXJyaYWwhQkWqsLK9F1mTcVrdLBXncVk9TKWm
      mJhPUqkoqJYyaSGJrCt47V62te5mf9ftlOQCk9lRCmIODa1ufdShPvEUpQIVuUSrp4OSZPQA
      /I4gglLFYXXgsXkJOhsM7VFgAFGtGk20/+wBALWKkMWB1xYgLSQoKcZsXVXLxKtL2M0OfLYg
      ptrmTkPn8vJ15rzFZMHn9HNs9k2KYoGqXGUxt0BHoJPeUD/NvlaStbTEDe2b+NCuj3J89ugN
      VDVREdneu5NrhYuEfQ2kxTg9gQFAR1CEWiPGkN1qGM2qqlwh4AxyKXGeoDOE3eLAaXGSrMSo
      KBWjTFcz3KuaQpe/l8XiHBW5hG7CKFvqCp2+HuwWO/OFWVw2NxaThWvpy2SEFMXapu6tZVKj
      qxlRFXBYnaiags1sI1WNY8h9c5SkAj5HgIpcIlaO1NIsg0znDBapy+pCVkUsZhuSJmLCUGTO
      5AxrocvmZiI2x6XpWQpCCRNmnj91jstzU0zFFgmH7exo31OHV92/4l2GJkkqcml6mjNj47j1
      Rjo9vfzk4uH69S2UBPram2j0hMnXqjOKpvD6xWvMRONEUmlCrjBmp0CT22iuRUqLLBUMEK/L
      5sFvD5KuJinJRdxWD4JSptHVgtVsYzC4CrfN6CcEnWEixUXDa6FKdHi7UXSZwdAaAo4gZblI
      wNHwn78E+vlDVKuciL1CXr6R2KboCrHqEk6Li6DDMJB3BDpRVJmqXKWroYd3bHyEkdjw28BS
      FcnAH/710S8ym5lBUARERaAvNIDD5rghdSXoCeL3u2n3dlKWS/QGVjCTn6Qo5bm1+06upi7W
      2Dsat3bfiagI9AYGmMyMIqhVdF3HY/Pgsxt4j5yYodHVTEHKo+oK45kR5NpmrD84RFkuYjFZ
      0XUNWZPIihl2t+9nOHmBNm8nSm3AVJUKPnuAeGWZkLMJk8kg1+nolOQCVUVA0WTS1WTdiyup
      IolKDJ8jACaj9xF0hujwdtduehNWk6HUbPd11vGHTqsLNCs/PH6UpVSShXiSBnsLkwmjO14U
      Sqxo7+Dk+BVOjkzQ6m9mtjyKoitMLEZ49cpF0qUcU4k5RqMTlKXr+Emr2YrX7mc6HqGzoY3F
      8jQ9npWcmxqnJBrd8lZ/E8GAnVZPO5HSAj3+fhRNRkNjdXg9sibT6m1HVEWqtZtfrumGdHSs
      NVxjXsxSlot1w03QaUAEynIRq9lGshLHYrbS6ev+9RgAuq4zlrtMSvjl4dIZMUm3d4DT8yf5
      q1c/x3DsCiWpxIrGQe5afQ/HZt9827JIVmXOLJy8waxekStcWr7APWvuJ1KZx4qdgfAAOwd2
      4rA5OBl5g6HQGoKOBjw2H1aLUZ4sink6fN1EigvEy8t1asJbszJAohKnwRnGaXHS5G5loTBD
      VakgqRJbW3ezWJwj5GysS55NJhMWkwW3zUtFKRs0t8AgOhqpagKXzU1ByrNcWmJlaC2JShRV
      VzGZzFTkEge6DmEyUXeF5aUc6Drd/n6mc+PYzQ48Nl+tiZUl7G5iNjeJw+LEYfYgyDIVQSJb
      qJAulIini3gdbs5NjaLWBtnNQ3uI5uNU5CrN/jBbuzbyyvBpMuU8+VKZpWSK5UQRWYR44Xou
      coM7wPbeTcynl7BZrATdAa5FpllMJTDJDhpsrXzz6DPGXs3hJuDyUxIELkzMMBaZJxTw4HTY
      6t7kilzCZXUxkrpCUTL0R5IqYjMbaZlv4dI3tWxnvoZJ0XStvmdx1ow0qq4YbjOzhaupS78m
      AwCd4cxZg3bwSw5N10gWUnzt2Ffrwc46Oou5BQpCgc0dW7gcvc7tsZgsOGyOt4WtgYHJWyzP
      YnFr3DZ0EKfbxpX0eTw2L1azrUZqmCJZjRMtR9B1jeXyEpIq0erpqK9/MYSaqgAAIABJREFU
      rWYrWSGN3eIg7GrEZDIjKlXilShem4+MkAZdZ0vrTs5FjzPUsJqiVGCpOI/D6iTgCCGpIgvF
      WUwmE4lyFKvZSrS0RFkxNPDN7rZ6FcRj99aN6z67j7HMMD5HgLCrqRZhJDMbyXBsZJht7TsI
      eDwUxCxFuYCgVrGoLuZiCQbDK/nGkee4ND1D0NrM5bkJzs+MMhlbYG3zevobe1jOxWkJNBH2
      NDDU0s9NK3ZyYvocZ6aH6Q130RZowYyZ2WSEVDEHmKiI1yeae9bfzv9536c5uHo/j2y7n0gu
      xnRyzvhuzBaWswlSpQwmk4l/fPJLaOgcnTxtALBEAUWGjb2DAIiqgKprNDhDVJUKJkz0BlZQ
      lkt47B4kVaLL18OFxGlKUpFWTzudvm4eXvkEF+NnUXQDq+K0ugCjImfsPRt/XQaAxlhuGH5B
      Fejnj5NTp0gW356+Hisu8/Tej9PsbSFTSRP2NPHolieIFaJvw+G9dXQFeukMtdPsaWU6O47f
      HqwJ0WJYzTbS1QRDobUoqiHLtVvsrG3ciKSJLBRmqSplfPYAq8LrkVSjZOe0OGsb4QqbWrYT
      coaoqlWyQhq3zVv350qaiI5GVakaZnSljLXWga3IZTx2H1aTDUmTAZ2ws5lUNUlWSLOrfT9V
      pYLT6iJSXKSilFkVXsdcfgobbn508g0Ws8ssZWL0tTfidxiUtV1tB/jGqz/j6vwsiWyBeCGF
      qqn1FHhBFtB0DZPJxIWFK+xbsYNEMcWpmfMMR8aI5KLkq4X6U+GxHQ8RKySYThpy8/s2HOLd
      2+5nPDaF3+Xjk7d/mHQ5y+//+C/4+2PfpiRU8DjcWC1WdvRtpj3QQr5aZFvvRroaOri8NMJk
      4jrL32IxE260Gu9fd2LHzWJphpWhNciazHLJ+Ozt3k5EVSRdTTDYsLruBCvJRS7ETyOqAt1+
      w2QfK0UIu5rw1xp7Tqvr12MAACyWZ/8/CQ7LqTjp0tupziZMbOvawRvTrzKfnaMslQ3yp4lf
      6NMF2NC+kYKWQVCqLJcXMWGi09dNk6uFNY0bqCpV8mIWpWb/89i8tfZ+GofFSdjZhKSJVJQK
      GSGFqhsmdkVXEBWBvJTDbnHWnVK9gX7E2mb6LTKb3WLH7wjgtLho83Qwk580UIqBFcbyqvZF
      NzjD+Bx+nFZ33XBTkgt47T56A/1cWrrM2bFpKiUNWVUpCiXWtA9ic2qYLDqzy0myWYmFdJSC
      UKQ90Ep3qIPN3et4dNsDPDf8Cm67i08d/Ah+p4+TM+coSxXihSRqzejvdXp559Z76Q13sZyP
      83dvfpNCtcTege3YrXZ29G6i1d/Ev158jny1yKtjxzk9e4HJxGwt86vEO7fci6wpvDFxgqnk
      LPdtOMjlpWt858yPatgYo+MN0BFswWG34bOG+ccjP+PE+DCrmlbhdJtI10w06FCQDM2SrMkG
      Tc7qrkGAC8RKETw2LyW5SIPT4LE2OEOkqykcVoexBP11GACGTqZKVnz77P7W4TA76XQP3JA4
      +NbR6mtjLHGN4egVZNVQVS7k5tHRUTT5bWFxPoefrX2bMVsMOcaOtn3s67yFyewoqq4SrxhW
      wLJURFCq6Oi1ph319agO2Cx2ckK6hhwMGGtTm5fl8iKKKuO1e2l2txJyNqKi1hShJkpSgYyQ
      wozRzHFa3bzlhl4VWsul5Dl8dgOZ2OHrRtYkw1Sjq3T7+0hVE2SFDPHKMhW5yusXjOXLbGqR
      DZ1ruHPtLTx7+WWuzM4iVuHC9AQXF6/y5O534ba7ODd/iUguRjQfJ1ctMJtaQFBEbl99E8en
      z6JqKn/1jj9iLD5FovbEbfSGcNtddDV0cDUySqZiUKU///Af8tNLL/LCyKtcXholXzUKEVW5
      SkEo3kDKcNgcXFocQdM1dF0nkouTreSNDX+ogy898sesaOolVcowEZ9jJhonky+RKmWMNT42
      vG4nyUKOFeEBbFYb0XIEWZUIu5opSDmcFidluUjQEarTMMDEUnEOXddRdIVIaR6/PUCnr/vX
      hw69IrAGvy34i0/qELK20eRppjPQdcMpr93L7UOHmEy+3SWWLqd5ZNNjtPrb6r7ZFn8LD256
      kHjVMFskKwnS1SQzuUlMNaeSphvxP06rix1te2lwhFgozhF0hChLRYNOYHHgs/tZGV5Hi6ed
      gCNIRkgxkr5Mt7+PQ333IWsy0VLE0PBYvZTlMsulBZw2NybMOKxOouUIGSFVl1NkhQzrGjca
      lR7dkDInKjHyYpb5wgyj6WEml6LIZTsmzNjNDorCdXpFUShxceFqXQE7Hp2nv6mHkDvImraV
      tRnZWGqWxDK5SoEdvZu4a92tXImMcnr2ArFCgvH4NJu61rGpcy37VuxgPr3E81eP8JU3voHV
      YuW2VTexoWM1L468hqprmIB9K3bgtBoTRaM3xC0r99bfl81ipSfUid1iq/9ufccqfvPAk3gd
      Ht697X6sZgtWi/WGlfCq1kFCniAum5OyKPDt1w/z0tmLPHv2BFW5Sqe3mxZPO03uFlo9HaSF
      JK2eThYKMzitbopSgcYaxTotJNnQtIVufx8FqfDrxQUyY8ZvCxEtRJA0AbPZULSris7Ra6d4
      6dpLnJg7RkEsYLfY2d27lz19+3hq5wcxm8y/kNcPcHD1ISrWHBs6NtLd1IXf58Fk0ZnKjeG3
      B2hytzCTn6QgGTNaUS6QriaNZYZkRAGtrPly3zKPR0oLZIU0ze5WZFVC1ZS6gUPRFUKuJiKl
      hTq5oCjniZYMSW/A0UB/cBBVVwyQra6zOryeZCVe31wrmoLPHkBQKjVvgPGE0XQNTXTwzOmT
      TC4v0ecf5OrsIs3eRrKVPBazmVWtBoVuIWOI/Vr9zbQFmpnPLHFpcYRctYCkXFfgdgRbjfCP
      1CJtgWYWMhGCbgNB+ONLL5AopqnI1RtKmroOT+15N984+T3Ozl1iXftKBEUikosy1NzPu7be
      x/mFK1yLTtARbONjNz+FCRPPXz2C3+lle+8m3HYX79/7KEcnTzMam2Q8Ns0zVw7z/NUjBN1+
      WvxNrG4d5Kk97+bK0igDzT3E8gmKtZJpppwnFLZT0QoMhVYzmhqm29+HqEiYTWZi5QiiqJMr
      CFitZgJOP1azlaXivOEow4yO9utBhtN1Q5L83YvfoiAU8Dv9vGPTu9jetZO/fOXPiWRvNLVI
      qkSmkuHpvR/HbDIbqDyn/23yiCZPEw6bnUQlhui4zpiRVYmB4BBVpcJCYZYWTzt2sxFdKioC
      kiaRE7NYLTbi5Sguq8tY/4tpMtVUTQdv8PCncuM191YIj81LohKl1dPOeHqkTiPz2v2sbdzE
      6ejRetyQqIicWn7T6FzKRUyYatLgCD6bn7HMMAPBIcP3a3Vze8/dHFt8nVwZwp4G+pt6eHXk
      NFVZYEVTL8/85jf4q8Nf4eXRNwl5gjy9/30UxRLN3ka+dORrAMxnlmgPGBkHFalKs6+RgMvP
      6xMn6ue/+6Gv4rQ5efbKYV4ZfROL2UJXsJ1k8XoxocXfiNvuwmK2oKsaY7EpshWjeRnJxZA1
      hXzVkJTkqwVuX7WfZDHNsanTrGpdwc6+LXzh5a/yuz/8M/oauwFqRDtj6vc6PJTEClPJOf72
      zW9ydXkMu9VOZ7Ct/h68Dg8erQmtojGbmWV9eDs/OP4Ky9kkd6w7wGBoB19++X8iKCI94U4e
      3387VqdBqG52t5EXM2SF9K/HEyBWjPKF1z9PWTKoYYIiMJmYwOcI8Mb0q7/wNclygrWt62lw
      N5CrZnFYncykp+uPfr/Tz4d2f5S1LRsIORvJChk6fT11zY3NYq+bKjRdx2axIqoiLZ42HBYH
      8fIyolrl8TUfYDo3UffXVpUydoujDom1mx01PqdGvLxMUSrUBqXdIK6ZbYhq1Vijinl03RC0
      NbmbyYtZTJhJVGI1tHiWdk83kiYQcjYiSio+Swir1cTlxDkuji9wePg4AZefrz7+l1xYGCZV
      yrB7YCtbezYwHptmJDqO3+XD7/QxsjxOspRhKXe9ELBvcCd/cNfvcNuqfTy67QHcDhdHJ0+h
      o7Orfxt3rb2Vn1x6geevHmHfip381s2/wUOb72Y0OkFBKNId6qCroYPj02c4MLSbtkAr+UqB
      gnDdg9EWaKHRGyZTzrF/cBdfP/5t2gOtKJqK2+5iLrXAYnYZWVX4zKGncVgdXFoaoVAtsqlr
      LSaTiWvRCUpimXQ5y1DLABaThQ/sfYyg20+rv5mCUOLU1BVGl2bJ5kTseHlt7ARVWeBqZJxU
      MUe8tn/JVwt0NbYS9LprRYgy8XLUcKn9Cu/r/9/HdGoK8d/kuZakEsd+ybLmrePMwim+efaf
      6uz9sDvM3Wvuo8nTxNq29YTdjaSFJEvFeRaLcwQdDTS6m+kLrOC1hZcwY2aoYQ0mk8koLVre
      Mm84jCWYycxz0z/EZrGzIriSRCVWT0aJ1fAcQWcDJalERkjW9Td2ix1BEWhxt9Wif7ycjR2n
      w9uN2WSm299HVanS5eulx99PVsywXFjm2OUJMvmLbOpdyVBHB9964yUEWeS+rQdobgpgMxmz
      rNlk5vd/8hfECkk+uO9xDl97g3d89YOs71jNXz70X7mwMMz3zz8DGBWyVa0rSJey2CxWXhs7
      zkR8hsd3PMQfP/sFqnKVHX1b0HWNV0bfJF3KMJNaqC9nwt4Qv/29P2Q+vcjqtiE+c/CjfPQ7
      v0dFqlKVBVr9zTdYVE2YODC0h7vX3crH/+UPODt/iSZfmOV8jGtRY5/W4A6wb2AHiq4y1DLA
      nzz3pfqy7NLiCI3e0A3f81x6kbJY4U+f+xJ/+8RfYrfYeP83P1U/P5+O1EP7wEjzHGjqZSJu
      lFVtFhtWm8ZY5io72vYxnrlK2NXE5pYdvx5PgKJYfNvNbjFZWN++kbnM203qxqEzm565wahe
      lY3m1BNbn8RjN9JTvnPtHxjLXGUgaNj63sKdW8xWnDYXAUcDuq6RE7LoaDUmHYRqN67NbMdh
      dbJYnEPWJFxWl+FnBSpyiaAjhMfmoSxXiJUjNNRSWELORiRNMv6PxQB7dfv6iJUjTGSv1bVF
      XpuPslzk6vwcV2ZmERWJ+dQyDnzMpg1/w3wqyoWpCbLlIr9358e5c+0tfP3YtymJZUajkySK
      KRRNIZKLcWBoD7FCon6zATy67UH2D+6iLdDC2blLlKUKVyKjpEoZJFUmWUxRkarkqnnihRTv
      3nY/gizy7m0P8LWj32I4Moqm6ySKKYJuP5IikS5lafSGmEnNUxTKDDT1oOoabruTPQPbuLhw
      lRdHXkOQRTLlHPlqEUE2JjkTJqqywFhsktnUAvOZpRsofx/Z/17yFQNnct+GQ5ybvwwYzdAr
      SyNcWhwhUUy97TVeh4f5zBJbujfw6YNP47Q5ieUTbOgeornJRdgVptvXx0JxDlVXSFeTvx5V
      oJVNK9nevbP+swkTe/v38/D6d+G0On/hawyD9dvpEKPxa8znZzm6eIQz0WO4bV76g0OU5CKy
      JtWAUvPcv+JddPv6qCpl5gszSJqE1WzDYXEY4rD8JBWlQlZMkxFS9ejPolRA0RRcNjftvi5S
      1QSRkkF8M7wANvz2QB3lreuGOnK5tEiktIjfEaDb34eqKTS6mohXoiSrCTz267lWZpOJu9bd
      SpM3jMvmZEPHGhRNpSxVcNmcnJ+/TF9jNzv7NrN/aNcN160qC+zo3USTz6h794a7+OGFn/En
      z32Rb53+IY9su5/P3vcZWnxNP3ctrdyx9mYa3AHu23AQm8XGbGqBP3nuiwwvjd5wfU9On0NW
      Fe5Zfxut/mbS5SxVWTBK2bWb/XMv/D8cGTt6w+d5avcjBFw+7FY7D266k0Jtj1CVBA4MXv8M
      A0299IQ6mUsvkiimcNtddNTW/h67m30rdtLb2MWda2/BYrYYzrfu9dy6ah8VqYqsKpyZu8in
      f/BZrGYLiWKKYxPnuThh9IeWy0s1FlPIwEv+Rz0BRFVgpjDKZP4akfI8VbWMzxbAYraCyYSu
      68ykp7FabDy25T08vOFdeB1emr0tXIpcuOEx67K5eM+2p7gYOf+2/2MxW1FsFS4mz6BoCiaT
      CZfVXUsV8TNY094PJy8gaRJuqwdzjRPjdwTJChlKcsGgL1tcRsvc1YjD4iAnZo0AOFcj07lx
      zCYLYVcjaSFFUcrR7e8zYoTQydQifDRNod3XbQCtLE789gCSKuO0uozz6CQrcda3r8Uku0iX
      s3xw3xM0+xo5PnWGPSu282cP/B7LuRj3bjjIkbGj/Gz4FTRN47P3fYZEMcVyLobH7mZb70ae
      vfISL468zqdu/whP7n6Em4f28L3zP613fFv9TTw3fIR4IUnA5SPg8rOydYAzcxcRZJF17at4
      ceQ10uUsFamK2+FCVg1ys8vmpCIJLOWiLGSW2dCxmrGY0bxr9oWJ5q8bmzZ1rWNd+0oUTeX9
      ex+jJ9zJcGQMi9nM3hU7uGXlHjLlHB0Nbbxzy73cNLgTSZHYP7iLifg0FxcNU46qaTy4+U40
      XefPHvg9YoUEP738Eq3+Jp7Y8TBXl8exWWwomsqPLjxX30hnyjnG49P1pZUs6eTzKiGfD80s
      EnKGDbHcf8QAyEsZTsRfIVFdpqKUqCgl0kKc5fI8Ta42Ts6e4Gsnv0JZKiMqIhWpzL7+/aQr
      KSaT41jMVuwWO6taVrOjexfv3/lh1rWtZzwxSrJ0o5tsa9dWdvXuIV6Osjq8jqpSodHVjMPi
      4HyN3hZ0NGAxW7CarEzlxgBYEVxJtBRBR8dr99WbaC6ri4piRI+mqsn66ws1oK3P7sdrMwLh
      3tLr9/j78dp8dPi6yYhpZnLjdfnCbH4Kt9VDvBLFYXHR7G5hX+dtTCQmeXn4NBWpyk2DO3lz
      8iQj0QmWczFGo5O8On6cufQSLruTWCGB2+7m9YkTHJs6g6IqfOWJv2Rn3xb+5cxP6ub4V8eP
      c27+MmaTmZJYpskXJlfNG5UaVeZdW+/jzx/8fX5w/lkWMhFkVWEiPk2Lv8nQ6WDi/o2HeGjz
      3Sxlo+zq30pBKFIWyzisNvJCEUmReXL3Izyw6Q5eHz+JrMrYLFbaAi0MR0Zx2pwcXL2fzz77
      BZbzMcpihbNzF7ll5V5euvY6w5ExXhx5FbfdxUvXXuf07AVsFiuqpmLCBCZ4/uoRlrLLLGQj
      XFm6RqKYIlZIUhBKTCVnSZczxs2uyjcsi/YMbCOaTxhKgd6NlMUK96+/k4FwP4kae+lXPgBU
      XeVU/DWqvyCZXdFlMkKCI9deu0Gzk6lkcNlc/N3Jr3Bh6RzRwjIFIc+a1rU8uvkJZFXmuWvP
      UpErFMRCrStrZV3bOhRnlYyY4r4V7+JM9BjxSpTJ7CgOq7MeuylrElaTYUwxzCluBFUgJ2bq
      7iqL2UrY1URWSJOsxEhVE3R6u/E5AiQqMTq83exq38/l5DmSlRiNriai5SVDT4PJKKOarZgw
      OJaCImA2mQk6wkbMkSbjNPn48ak3OTZ2EV0zMxqdRtd1OhvauGvtbYwsj/PQprs4MnYMUZEo
      iWU+sv897O7fyhM7Hub5q69SlQ2hWMDp5YcXnsPv9PLw5ru5sDDMZGKGWCHBzr7N/OHdn+DB
      jXeQLmcZixmE6LXtKymJJUaWJ0iWjOvvsNq5d/1BSmKFzd3reG74CJcWr9Ib7uTV8WMUhCK/
      fesH62t3WTVyhX9w4WdYTGbes+udPL7jIX5w/llS5SyZcpaLC8OkK9f3apquI8hiXWat6TrR
      fKJO3lvR3Mvfv+8LPLrtQV4bP1bvRpeEMu/adh8LmSXuWX87DpuDsZgBKV7Z0s+O3k1MJecw
      AavbhiiLZaqywD3rb+fI6FGSxRRut5WsEidgC4P5P6APkKrGKCvFX3q+IOUQfsHgeG702Rv0
      /To6r0wcZkP7Jr538Tss5owNotVs5akdHzRS05Uif3PhvyOVBd5YPEyqmqTd20lOzKLrOnkx
      Q9jZSFWoUpKyKLrCUGgN6WqSgKMBu8Vew5sEmM6NGxAlS4q+wCCJSgyP3Uu6mkRQqhSkHJcT
      53Ba3bR6OtjTfgBpQSJgDxre1JpRvVrz5rrNAQ6fuUBVlNm9diUrO7p59fIlJqOG9TBfLfLB
      vY9zdXmcbCXP8emzbO5eh6ZrdARbEZICQXeAfz75AwRZ4NMHn2ZP/1bOzl/m5qE9nJ69yGhs
      EqfVwaEHDnB8+rq/ucEdQFEVPvYvf0BRLLNnwCh3/slzX0RWFe5adyvZioF+7G/s4evHvg1A
      JBs1dDxCmQZPEBMmbGYrK5p78To89b9fFErkKwWcNgfr2lfSG+7CbrXXz/c2dmM2W4jmjQBx
      h9XOAxvvYCY5R7yQwmV38qnbP8Lha68zlZzDYrIwujzJ5u71bO/dzHDEeEqHPEGeH34FRVNZ
      0zbEqtYVDEeuEXIH+fShjzLQ2MPBNfv5ixf+uib5MDbPL4++iVRDZJ6fGidTzlGRqvzmLU/+
      6p8A8Urk/1XnDwanfSoxU1/nr2lZS7qSehuhTUenJBaZ/LmkdU3XUDWVWwZvQ9M1mt2tWEwW
      mt1t2Cx2BhqG6PB2E6tE0HSdoLOBqlI28IVSAVOtKuS3B5grzFBVqzUnkYimayyXF9F1nSZ3
      U114NRRay872m1gozBKvLGPGTFWpomgyeSlHg6OBnJhF0w1PrsVsZX45zcXZCaqyiCCobOtb
      i1K112ewoNvPk7sfYSkX5fmrR8iUs6i6xvNXjyAqEl977/+F1+HmlbGjlMQKx6bOcC06we6+
      rdy59hYSpRTz6UUavSFenzjJfGaJJm/IyA7zBLm4eJXR2GRN+Sly66p9vD5+AlVTcdqcRPNx
      LGYLzb7Get9gbdsQd6y9hdnUPJIi0+xr5PEdD/FPx79LXiiyvnM1zb5G7t1wO7v6tiKrMv9w
      7F945spL3Dy0h2w1z5au9fzuHR8j4PKRKKbob+zGZDLx3NVXEGSRg2v2M9jcx3fO/JiecBe6
      rnN2/hLHp8+SKCb58cUXaA+28tn7PsNEYoZr0UkqUpUrS6NMJ+e4tDiC1+lha/cGvvz6P7GY
      iXBu/jKZco41bSvpDnfwids+yNn5y6iayp1rb+Hs3GXDMun0/eoHQEkpEq9Gful5k8nE9va9
      7OzeS7wYI+AKcnDlHYwlRn9h6uLq1nVvK412BrvY1bOHr1/+H8zkJo1NqVwgUlogUjScRUA9
      uM1mseOz+7GabWxr3cVkdoySXKLF3Y7T6qKqGA4pA8NRrhEEDMN1RkhhMZmZK0yREdJoulbz
      nlZqiJBcrY9gMRSjqojd5CJga+Ti/DU0Xacz2Max0UsspJfZ0r2eVn8z08k5fnTxeZayUYLu
      APtWGFWx2dQCPoeXx3Y8iMvm4qWR19B0nd0DW+kNdzGVnONfzv4EQRL44rv+GJvVymvjx1E1
      FbvVTkEoMZteRNO0uoxA1w3tPcDTB97HpcWrpMtZBFmko6GNlS0DCIrIf7v3k5ybu8RwZIx0
      OUuqlCFeTDKbXqAsVbh73W28On6c18ZPGKyjSp5EKY2syoiKzLqOVXz0wJOcnbvIF17+KqIi
      8o4t9/DSyGsomoqqqSSKKdKlLOlyllg+gd/lJVXKEHD5mc8skSlnkVSZp/c/yenZC3WJR8Dl
      R5BFspUciqZyaWmEs3OXiBUS3Ln2FqZTc6TLWZw2Jw9vvptEMc18Zgm33cUDm+4kVcqwuWvd
      r34AOMwO5kpTv5T9YzXZGAys45/P/iMjsWGylQxnF06jaOrbsImdgS4+tPtp5rNz9c2vy+bi
      0c1P0OprY74wQ8jVaHDq/b31m3mitgfw2wOkhRSgkxUy2C12KkoFq9mK2WTBbXMjqSJuq0F5
      tpqt9cpOk7uVrS27cFvdBBwNhJzGWj7oDKPrRvatoisIShVJlSiKeUBnLp7gxbMXuDA7wqbO
      tfzuHR9D1VROzV6gIlV5/97HOLTmAD+8+BxgNLm+9YEvc9PgTl4dO85QSz+5Sp7vnXvGCHY2
      W5AVmenkPJquIcgiFamKqEgMNvdTkQSuLF1DR+eudbciqTJVqcrqNoOqcWBoN3PpRUpiGVmV
      UTRD7p0spQ0pdlM3A0292C02zs1f5tTM+fryAWBN6yBeh4fNXevIVwv1J1gsn+De9QcZj0/h
      trspiiVGo5O8OPIaJbHMUi6KoiqEPQ1M/JzuX9d1Ht/5MOPxaW5ftZ9P3PYhLiwM09fYxY7e
      zaRLGW5euYc3Jk4ynZyjNdCEqEhs7FzDu7c9gMVkZt/gDlY09XI1Msa2no1s693Ea+PHUTSV
      dDnLaHSSY1NnkFWFhUwEq9nClcgo5xeu/OoHgMVkxWK2/pJlkIm1oS1cXLjI4fEXbjijaSpr
      WtcaJnGzFV3XsVqsXFm+xKaOLezs3cOq5tV0NrdzNnUUVVdJVmLM5CbIiRlsFjsmTHT5elA1
      pRausISiyXT4DJO0EakTZWVoLUA9dtOIJnKwsWkr49kRqkoFs8lEvLKMoFYNAoMrXFeN5sQM
      RalAwB7AYrKxs20fFrMZnz3AkUuXSOQzyKpCspjmse0PUhTKzCQX8Dm9xoyaWkRRVSpShY1d
      a8mUs0QLCZ65chhZlZnLLCHIAhPxGXpCncykFow9TbWI2+7i5qE95KtFXhx5jStL17h/4x38
      1i3vZ2XLABcWhmkLtHB67gL5asGQKGsaQm3D6Xd663/nznW3cGL6LKdmL+CxG+aV7rBRkze+
      LRMum5OlXJRkKYPNbCVWMCaisDfEb+x5lA/sfYztvZt59vJhNF1DUiQGW/rRdI2VLQP4XV6W
      stE6tv6udbexrXcTzw+/QqqUIV3Ocmr2PPOZJWxmK2vbV+JzeHj2ymGylTwPbrqTS4tXmUrO
      EclG6W/q4RsnvofdYmNH32bemDzFyPIYJfH6vnKguY9ILlqfgtd3rGa2dg1/5QNA0zV81qCh
      l5dzRm0eE7Ks0OboZqhhLS+Nv8BSbvHGF5pgY8dmPnnz75KpZBiD6n8eAAAgAElEQVRLjFKW
      yqQraUZiV1nZvIp71zzAaPYKy6Ul0tWEEeiMRtAZxmV10RcYZK4wTbKaoNndiqAIdPq6mcqO
      10OmRVWgJBUJOEMGV97iIF6JGumM+UlyQgZRFWpl0iUCjiBVtcpEZgSHxWBnumwGesRldeOw
      OihIeaZy45TkIuW8mVghCYDNamM+E+FfL/wMn9OL2WxmPDbFZGKWzd3r+JvHPsebk6d49srL
      XF66xj++70s0+xt5c/IUYDwdWv3N9c0kQJM3zJcf+xw/qhlRdHQa3EFKYpkfXXwem8VKNB+v
      3xCiIvKbNz9FWaww0NQLwFRilrJUqQveBFlkRXMvrf4mzGYzsiqzo3czd667hdcnTlCVBKpS
      FYfNzju33EvYG8Rtd/OVN77Bm5OnODJ6lPZgC9lKntZAMxs6VmM2mRmJTnB56RoDTT1s69mI
      1WLlUwc/wsjyOMenzyLIIhazuV6RslgsLGWWSZWztPqbsVmsxoRQG5C6bpDCo/k4kioTycZI
      lTOomsbu/q1kK3m292zks/d+GjBxdXmckLuBzxx6mh19m3BY7b+6KpCma7w8/iKHx1+kIlUY
      al7Je7Y+icfh5vuXvsuR8ZeNpUqwm1Z/2y/8Gw2uEJIicmLu2A2/19E5MvEyPU3dLJcW2dC0
      BZPJzFx+mrJkmCEERWAscxVFk1kVWkerp92IMy1F6mK2slSk0dWMpIqMpC4aWBNPJ4JSJexq
      Aty0ezrJCCk8NiMEoiDlaXQ2Yauhvrv9vZSkIj67n3Q1hdvmJugMYdVdXB5bxqQ66A51oKgK
      j2y7n2NTRiBItmYoeetIl7K1z3b9+n31zX9mIbOMzWKjO9TB7atuYkVzH9eiE0b3FRNBt5/P
      v/Q3NHpDLOfihqhPEfn2mR8BsLt/G7ev3s+3T/8IHZ3+xl72D+7isW0PImsKj3796fp7yFcL
      /O6hj/G9888Q9jQQ9ob4+2PfxmG181/u/PgNjS4Aq9lCrGDIuN+qv6dKGRrcAQRZ5MDQbjZ0
      rOZ7537Kjt7NOK128oDdYuPE9FkKQok/fe5/4Hd62dy1DlmVObjmAFVZoCoJfGDPo6xqHeT9
      3/wkoiwy1NJPtlLggY13MLI8TpPPWIZu793Ex29+P6OxCb59+kcGrSK9QEUyALpL2SjPXnkZ
      VVNJlzOMxaZ5+dobnJ2/9KvLCHtl4jD/ePprN/yuM9DFUzs+wJ+9/Nkbft8b6idZStwQOB1w
      Bvhvd/wpLpuLT//0t9+2IfY7/exZtZOZwkQN2qrS5GomXokCJpxWp5ERZQ8ScAQRVMEwyluc
      ta6oQXXw2DyUpCJVpVKjBqisb9xMQcrhtfspSnlKUgmzyURBKuCxegwfgCaTFdJQYxUZARVW
      VF1jqTjHlbEYU8tGNeU39jyKw2rn2NQZVE2hwd3AobUHKIll/vrVf8Bpc9Ib7mI6OYema2zr
      2WgYWxavw7w+sPdxTkyfZTo1T39jN/dvOERBKPH1Y99G1VR8Di9/dO8nkVWZVCnDl14xrn1/
      YzfdoU4DFta9gdfGjzMen+aJnQ/jd3p55vJhJuIz6OisbV9Ji6+RV8ePA4b0IODyEfY0kCpn
      iOYTNLgDWC1WzCYzBwZ310V3n779I+SqRa4uj3F69gJgPLH8Lh+5Sp4Gd4D37Hwn3z//DPeu
      v52fXn6JVCnD3oHtNHrD/OzKYVRdw2q2sLVnI5quMZWYpdXfzFJ2GVGRafKFSBTTrGjq5cFN
      d/H5l76Mpms0ekN8+Kb38tzwK+xbsYM3Jk5ydXmsfu18Ti/Fn1Orhj0N5KsFFO1XBMbSdZ2v
      n/zbG3GEQEEsICgCkfzSDb/32D387q1/QFkqYTVbafI0U5ErvDL+EuPJccOo8m+YP+va1hPy
      B+kPDCJqorHOt3lYLi2xpnEDgiIQdIawmC0oNYCUVkOKCErFCFmzuY2oJCGNzeLAbw9QkHJo
      uobD4kRQhDpvvtPbjaIr5MUc8coyHb5ugs4QFblMvLJcT263WYy83EgqTbZoLDsUVeb5q6+S
      KKZIlTKsaO7jt2/5AG9OnmY8Ps3Dm+/m2PRpymIFWTXkG4Iskqte/8zTyTkiuSiqppKt5Pno
      gafQ0Xhl1NDcaLrGXHqR759/lpnkPI/veIgNHWtIl3OcnrtAtpLnYzc/xdeOfouKVCVdyhoV
      mHKW+zccwm6x8cDGO3lt4kTd1gjwN499jkNrDvD9888iKRJ+pw+H1UGmnKUsGe45n9PLtp5N
      lMQyiWKSSM7Y7+no3LPudhxWO92hDn588fn6wN4zsB271UZJrNDX2MXlyLXa59BpDxqiPUEW
      SZUyPLr9Ad659V6evWKEl6RKGUpiub4UVDSVy0sjzKUXGY1OUhRLiD9n+jFjqnuNAbpDHai6
      RlUWfjViOB2d6i/AkYABtfr5Rz9Af3gAp83Fb+z4IH929+exWmzkqjkqcoXR+AgWs4UVjUNY
      zIatsa+xj/dt+wAeuw9MJnr9A/idQbJCim2tu0lW4gQdDUYIm65TqdX9o+UIoiJQlktGflUt
      7VCoJbK4bV5WNKzCbrHVQ9uqskF4S1YTtHs76fL1EHA0IKsSkioaojhvJ3aLvQaGzeAxN9Dg
      CBNw+fjgvidY277qhs97bXkcSZV45vJLFIQib06ewma+vhq1Waxs69lY/9mEiYOr9+OoNZcC
      Lh8L6SUCLj/7Vuwg4PJz74bb6zdeopiiLFYMjb1QxGVzsr5jFYvZKPtW7KQ71MFQSz8LmUi9
      uHB+4Qp//sL/TVugxZAgAKtaB/jJpRf56Ld/jy3d67ln/e20B1trM7LEdHKOD9/0Xv7qHf+N
      v3vzm/zTie8ym1ok5Aka31lTH83+Rt6z6x2EPQ033ITn5i4zl15kMjHDsakzdARbAXDZnATd
      gfp7AOgJd1EWK/X7xmF1cOfaW1jTNkSjN8QTOx5m/+BurLVN83t2vqOO0jSbTOzq34rDahRF
      vA6PMSFarGzsXPu/5wlgbEYUcmKGrJhG0WQSxUQ9VfGtw2F18PTej9Pm72A6ZYQVB50NZCoZ
      nh35Ca9OvUJFqnAxcgH557K97BY7f37P59nRvZug30taj6GjsVxcxGQy1W9USZOIl6MISpXp
      /ASartLu66ob2t+irXltPmy1fCld1/HavHT5eslLOZYK81SUMiFnmIyQquPQvXYfYMi0vTYf
      WSFDi6cVTVNpcrdSkcu4TD4qSpnXL1/l2qIhbV7ZMsC+wZ28OPJavRTc5Atzeu4iVblKd6iD
      p/a8m+5wJ9F8nJCnAUERuRYdx+/0sX9wFyuae3lj4gT9jT28Y8s9TMRn+Onll3j+6hFa/c20
      +JvY1rOR6eQcFanK6rZB5tILjMYmERSRv3/vF5hMzPLXr/0DiqbwB3f9NkenTjOVnKMklimL
      ZbLVPC6bgz+8+xNE8wkODO3mt275AF888jXS5SzNvkb+j0MfZT4TYbQmtTYC7JwcHn2DglBC
      VETcdhd+l48dvZsJuHx879wzHL72Bhaz5QZX2daeDQRcPtLlLPdsuJ3P3vcZRmOTYDJ6Qw9v
      uYd4McmqViMj7MeXXmBz9zruWncrFrOZn1x6AVER+a93f4KSWOLNqVMMNvfxgb2P8dzVIzit
      TtZ3rGY+s8Rc2mhmPrLtfg6tOcCzV16mLFbYN/C/wQ9gxPnEOZc6xnRhlGhlkcXyDEGvn2Qh
      Q6m29rJZbGzr2kFZKtPsa+GJre/jpv6bOT77JolSom4TnEiM1fKAr88W27t3sqNnN35ngKQQ
      J1pewmFxkhaSLBbnyQppWr0dzOYmKclFo1KjVHDbPERLBsa7wRmmzdOJrhshcnaLk6yYwWK2
      4rK6iJeXaXCGKMtF7BY7Lqsbu9lBb3CAsmz4fUVVAJPJkDmjs1RcwGP3IqoCU4tJ/vXka0gV
      C6WqUJf7NnpDtPqbiBWSDLX0c8fam7m4OMJ4fJp8tch/ufPj/MPx73B86iy/c9sH2d67iZ9c
      egFJMQbnlx/9HMlShqNTp2lwBxhq7ufV8etFgXghRXugme+e+yn5aoHfPPAk9204yHwmwnI+
      TndDO1t7NnB49A2SxTSyqjCdnKcqC6RLWcxmMz3hTkpimVWtQ4xGJzgxc5ZMOUeqlGGwuQ9V
      U4nkYnzrzA9ZzsVo9jdiMZtZ3TaI2+5kZHmcd2y+h5WtK4jm4yzU/rekyuRqVsmHNt1FX2M3
      y7kYNquNJ3c/wnt2voPh5THy1SJOq4PvnP0xuUoBVVPpCXVyZekaHoeblS0rODp1iqnkHFVJ
      YC69REEoUpUFYoUkL428TqacI5KLcanW8c5UcpTEMhXpOkStKJR4bMeDHJ08jclkosXf9O8f
      AHkpy5nEGwjqjZtU3aSxoqWPgwN3s7l9K3OZWcYS17gSvczx2aNMpyZp8jTzyuTht/3N/vAK
      1rSsJVVJ0RXs5kO7nsZlc3EleZ6X536GrxbLachgFVo97TS725A0EbPJUsuDqtJWy9N6i9nz
      Vn5t2NWM3WKrrfUdOK0uFF2p5d6qHOq9l3ZvJ1dTF8kI6Xr6otlkrsOjJrOj9VTEJncbx64O
      s5xLkC5leWz7Q8ylDZP5zUN7+O+Hv0KimOKmwZ18+Kb38vzVI+QqeSxmC/sGd/D88Ct1PuZS
      NkqskERSZfobuzkxfZaTs+d4bPuD7B7YyuHRN+plVTB0NR67u146jBdSfPfsT4jlE/zWre/n
      zOxFvn/+WWxmGzcN7iTo8nNxcZhkKcNAcy+P73iIZ6+8jKiILOdjdXNNgzuA3WKjKgvs6t/C
      G5OnUDSVqiywp38boiJydXmceCHFzSv38MMLzzGTmqe/sYdkKU1vuIvfue0DRLJRimIZr9PL
      fRsOUhYrjETHeXPyFPPpJc7MXSSSi1KRqsQLSTRdw2lzcH7hCmWxxibSVBZrvvBkKU3Q7ack
      ljGZTOwf3MVUcs7YO2FifccqUqUMPqeHZn8jqZ/jSHnsbvLVIhazmT+86xNs7d7w7xsAum4g
      DX9Z1KmOhs/pZWx5givLl244lywlyFazpMrJt72up6EXq9nKbHqGbDXD6YWTDDUOEatGmM6P
      YzVb66EHKxpWkROzJKoxXBZ3PVB6oTDLioaVZIU0kirS4AwjqxJFuVBHZiyVFvA7AqBDl6+b
      sfQwJblIQcoTKS0gqFUcZgd2qwOb2UGsvIzH5qWiGEmFQWeIklRA0zVWNKxiLhnhlpV7SZRS
      zKYWOLT6APuHdvGz4ZdRNJWiUOanl1/CZXeyt387DqudF66+is1i4/37HufU7AXOz19hVesg
      nzn0NDev3MPfHf2fxpeNiX+98BzFapH1HauJFRI4rA7eu+udrGwdYDkXY2vPBvqbergWnUDV
      NHobu+oVGVVX+ZvHPsf5heF6J9Zpc7B3YDtvTJysX/uDq/fzyds/jMvm4KeXX2Iuvch4bBpJ
      ud4NdtocxnIFg79aFEoUxRKKqvKpgx9hbftKXp84wdXIGA9uuqvexX1z8hSLtf2DrusEXX50
      jA38mvYhwp4GdvZt5jOHPspYdJJ4MUWjN8TDm+/m5PQ50MHjdPPlRz9HT7iTTCXHUjaCyWRm
      qGWADZ1rUDWVBzfeyanZC5TECnaLFVlV8Dk8tPibODZ1muV8nIJQ5MzcxX/fAFB0hbHsjcHS
      //aQVJGj48cpS+W3nbNajIrPz9saLWYrIU/4hrSWqlxhLHGN9255PxkhTU+gn7JcJlWNkxbS
      BBxBGpxhAvZAnS5XlAqUpCJ+uxHEoKHXA9k2NG/BbDKzOrye/8Xae4bJdZ1Xum/l2FVdVZ0D
      OgHobqCRcyRAEoEBICkSTGJUIiXRlixZtsZB4xmH8bWv74zsGdtjZVsSKYkSk8QMIhE5NYDO
      OVTOOZ10f5xiUTAt6451zx88T9fpRlWds8/e+/vWelesGCGY81MQC5j1VspSkZJUJF6MYtZZ
      yYs5mmwtmCrB06pzTM9UYoyckCUnZimVBc6PTpLMp9nYsYYXr/yCsiQwHprm4Mo9ZCrrzXOz
      V4hkY0QyMe5adTvHJs6QzKcoCEXuXHUbJ8bPUBRLiLJIMB3h+PgZjHojq1r7WdXax6X5a5Ql
      AavRQrqQ4e5Vt5MpZvnncz+h1urgnjUHmI0u0FbbXK2RZ0o5RElkbdsAvmQArUbDXEy1IC5v
      7CZVSFMUiuTKBTw2F3V2N+9PXaAgFJmPqdW67T0b2dS5jmg2jttWW2UIfdDUfG7v0zTW1FOS
      ytSY7UyGZxgJTBDPJ9GgYT7+YdVvW/dGFuN+zAYTh9ce4JM7H8Ftc/HCxZfxJvysaF5eAWPN
      cGvvDr568Lfo9LTR37yUUDpCtpRjNrZIp6eNn19/h3g+Ra6UZ1v3Rt6fPM9MdKEyk8Uoi2U+
      t+cpBEnAYXVgNpjwVypH9XYPVxZu/GYDQJJFZtLjyP9OcLUWHTOh+ZuSGz84GuyN/PbuL5PI
      x8mXc7itHh5d/zjhbOgjIXb5ch6tSWIxO0eyFMdt9tBTu1yt9KAgyiJlWY3BabCpXHg0YNCq
      jE2r3kZZLmMzqFWAxfQsDpOTbFkNdq4xOgjmfGoAtdmNTqNjmatPDVjQmdFqdZj1JmqMtUQL
      EYw6Ix5zExNePxbZw+nJK5TEMjaTjZJQJlfOs7S+i6Njp7iycB1ZkcmX8xTFEhpgfcdq4rkE
      4XQUrVaLzWgDNCxt6CJdzDIWnCKWS6DRaPi7h/+cVa19vDf2PssauxkJTCArCnOxRUqSQDyX
      RJQk1rav5PzsFfqalzIdmePC3CA7ezbztw//GUfHTvH60FEWEwH+5sifcNfAbSzEfbw5fIz7
      193F1u4NPLL5Pr51+od4E370Wh2f2PEINSYbgVQIu8nOE9se4LXr73B25jIHV+5hY8caJFnC
      nwqypm0lbwy9x+WF6zQ7GzDpTSxv7OYr+z7LYsJPrlzggfV38+V9n8GgN+Aw2/nRxVd4c+gY
      Gq22usQpiwInJ88RzkTJFLMcHTvFt8+8AIA/FVQpFwk/U+G5m+QOJr2BhYQPSZa4Zfk2BElg
      oKWPhbiPi/ODhNIRAqkwGzpWc3jNfh5Yfxfzce9v1gnWaw1Y9TbSQvJXnmMz1LC9cxc/u/6T
      j7y2rXMHDfYGNi3Zgi/lpSgWmYiMYTZ81Ads0puwm2ro0i0lU05h0duYT88gyALJYgKDzois
      SLjNdYxEr6mKTI2uGh7tMNZiNViRZImCGMJurCEnZJEVmXA+SDQfpqWmnWQxjsvkpqwv483M
      Ey2EK6EcMv5kkFTQxGx8ntU9HVyMTjO24MNm9LG1awP+VJB17QNoNRqWN3bzx3f/Dl958b8y
      H0fVxDR0kyqmKQllvnnqB+i0Og6s3MuxiTP8/MY7AKxs7sVu+tAfXBRKZIpZjk+cwZ8KoQAe
      m5tYLs4SVyu39u3EY3Oxpm0F3zv7YyLZGDPRBVprm2h01CPKEu+OnkKn0VX+osLfvfctxoJT
      mA0mDqzYwxvDxwim1cpPX9MybvhG6W9axu19u1hM+Hl79AQjgUk0GvX9KCjUWmt5eONhXrr6
      BgWhSK5UQK/TI1Rk04VykUQuyVRkDrvRSpOjHo/dxetD7/HP536CLKv49bxQoN3Vwp7l27g8
      f53+pqXkSjnisnpPzUZV38eJibM4LTXV72V790YmwjOMB6fQaLRs697InQO3MVjpBxh0Rm7t
      28n/OPphM1ZBwW2tZU3bSj7z/a8gSOJvvgnWarX/rtzZpWui2d5GUSgQzARQUNBqtOzs3s2D
      ax9lLDzK10/+DalikoKQZzY+o+ZbKTJF8UOKwKGBe8CgECuEmU/PVDKxovS6B9CgQavRsqFp
      W2UpY8FYGRAeS32142vUmavVHJ1WT7OtjUghVA1+rrPUU5bLKjtGKlAQVAaQGogXZ2YhzuXZ
      MXKlIsU8bOvcxg3fKK21TXzlwOd49drbXPOqFR5vIoDVaGEkMEFPfQdjwWkWE36MOgMajYZ4
      Plnt2uZ/iboWyyW4d+1BRisqy1WtfZyfvcqwfwyL0YxOp8eg07Nn+TbMBjM/ufIaOq2WWquT
      ywvXAXVN7bG5+OSOR/jOmRc4M32R7voOPrHjYfQ6PaenL6hCNUnlpqolzDI1Jjt/+9CfYtKb
      +MWNd3nh4ivkSnkK5QIWg4nljT1IisSe5dt5fOv9SLLMkH+MdDHDodX7MegMbOteT7aU59TU
      OWK5BBfnrjIemiGUiTAXW2A2usCathVV15rL6uT3D3yeTCnHuZnLjIemEWWJr+z/HHetuo13
      R08iyRJtrma+dvfvkCsVyJZytLlbeHDDYaxGC8P+MS7NX8Ntq2UutsiNCvHi2uIwNqO1KgMH
      NYRjIe5jLKgqlH+jAaDRaKgx1CIpEslSnF+GOmrQMr44xUtXX+bk9DE0Gg2f3/kFas1OorkI
      mVKaZCHJZGSc2fjMTX+3IOT5w33/GY/VwxJXJyvaVhARfRTEPCaduZIuHsCst7Cr7TYSpRgF
      IY8/u6DmPlUS1mUUwvkgVoONFlsbiYp+36AzcO+yh5mID2M12Lm75wGmkxNqGrlUVjOMSymM
      OiPLXH2E8wF0WgPZrMh8RG021Zht9DUvw2N384d3fIFvvv9DYrk42VIeSVYzzmwmK8P+Cers
      bgLJUPXm7G9exkJcZZPe2reT2ehilXCh1+kQZYlkPk1f01LaXC0cmzhNPJ/k6e0Pc2b6ItFs
      nJJYRpIlQpkooiTRWdfOeGi6+h221DbRWtvEucom2GWr5ZFN93LDN8pYUA3p/uDnv733kwx6
      h2l01NNUKal+4BvOl/P8zQN/wpB/nPenLxDLJdjcuZbXh97j7459m1t7d/LZW57kb975RybC
      M1V5dDyn7us8dhcd7jbqazzMROeJZuNMRebY3rMRBUgVM+i1On569RfVJY0oSxh1BvLlApFs
      nPvW3cFze55mZYVtembmEuOhad4dO0ksl6je4JlSjkK5UK2oaTQaPr/naaYrNsmdSzdTX+PB
      Y3NVl3m/sRhOq9HSX7uWRksrgfwiRTGPRW/FrKnh+bmfVi+sL+Xl5PQxrvsHyVSSGH2pl6gx
      1Xzkb+o0OkTK9LYsp6d2Oa9O/YRIOojDWIu3NI9eq5qmy3KZt+deoyAWMOlMxApRWuxt2I0O
      EsUYxUqauCCVK9qeGpwmF5lymh+OfJNezwBlscT3hv4Bg85EUSyQLMXV+r+jG4+1gfnUDAUh
      j0VfQ7urleWNGZqdahn126efR4OGJkc9R8dOYdDpuXv1fk5NnmNpQxef3f0ERaHIkQ2H6Wu6
      xntjp3hm9xOsbu0nkAqxrn0VX973LPU1Hv7l3Is0Ouopi2UGF4cBGPQOkyvnsZusGHQGbEYL
      S9ytTIXnaHTU8+zuJ3jh0ivs7NnM2vaVTIVnGA1OYdabcJjtTEfmWNbQjUlvJJVPc+SfPoNB
      p0en0VcLFx8sc+K5BBdyCS7NX6sCbkG1nNbZ3TcpUI+OnyaajVMUipyZucTGjjVV2YYkS6xq
      7cNpUcECo4EpfMkgnZ6bocY/u/p61RP87dPP32ShBJiNLfJuBa3y7ugprnlHkGSp+jsAgiRi
      1BmwGlVyxcrm5bhtLl67/jaiJGIzWfn6e9+kJJQ4tHo/vU09/NVb/wtJlnlgw918fs/T//90
      gtXwahsNlhZabB00WFoolAsf0fjny3mS/yrGyGF2AhqEX8oG2N61k8HEWS6HzpEsJRiN3aDB
      2kiTrYVUKUGncymdzh5KUpFQ3k+zvY1O51I0lSbVYnYeu6EGQRbxWOpIlGI4TLWUpBKBrJeC
      mMeit1WXQmWphNPkQlJEtBqtOssY7QSyXmRFotnexpXxOV67cpxEPsk9aw/SVbeE96cuoNPq
      WN22gkQ+xSOb7iNTISV86fZn8CWDfOfMj5gIqU/GTClPp7uN75//KROhGabCs3R62vnm+z+k
      KJaoMdspieWqORygu66Dv3v4L7jhG+NHl19FkiX+4r7/xCuDb1ESy1yYvQoahW+dfoFOTxsW
      o4We+k5OT19kIjSDzWjhD+/8Aj+48DMESUCQBB7YcDdbutaTLmS45h1mKjJXFYspKPQ29eCx
      udFoNLisTpKFNKIkEs5E0Wg03LPmAI2OOkpCiXq7B18yiD8ZQpAEbCYrVoOFC3NXMRtM5Eo5
      BEmkzdXCQEsfvlSQ5Q3dHF5zgLMzlwCwmWx8fMvHGA1MIkoiFoOZAyv3VGdNk8FEtpjDaXFg
      NVpuqu331HVgNVn4zK7HuDB3lfHQFF+7+0vs7d3O2yMnyJXzSIrKL73uG6FQgXP5kkHy5fxv
      2AdAQVZkUuUEyXIMSVabSZpKGvtIcIhoTnX067V67lt1P8PBoZvcYRvbN/PYpqcolAsk8nFq
      LS5u691HuOinJBXprl3GMlcvOSHHRHykktZiYjwxTIu9DbelDpfJgzczTyQfoiyVsBns1Jic
      6qxQjOIx1xErqN3mRlszTbYWSlIRURGq2iC3pY54Mca6xs34sgvoNfqK+C1BrcnN6ZFhkvkU
      ClQ6la2YDWYe2niY/33yX0jkUxj1Bt4ZPUk4E6UklCmKZaYiszgtDrwJP6IsMhtbJF3MqEsY
      RcZsMFeVi4VygQ5PW/UCf4Al2dixmv957NuUxDJFocTq1n6VtlbMMBmewZ8McWvvDkKZCL2N
      PQwHJqqCtny5wPaejVxZuEGurBp7FmJeri6qKfFPb38IQRKqm02ARzZ9jD+88wvEc0lOTp5j
      JDBBY00dX7tLVZu+OXyMYDrC3t4dvDN6konwDF117dzat5N6u4dQOkIsl8CoM/DI5vuwGi38
      1q2fqDa7nt39OEa9QfVaOzz0Ny9jyD/Kps619DYtZTgwzjXvCEadka3dG7jmHSZTyrGieRmf
      2fUYp6bOYzVaOLByL+dmLxNMh8mV8szGFkjkUywm/JyYPEsqn77pXmtyNlS/F4/dxYXZ36AP
      oKCQEzJcjrzPRGqIQH6BxewM8WIEt6kBo9aIx+rhqu8KoEQ+coQAACAASURBVPDYhifZ33cH
      giwwG5tBVmSaHS18cuszLKntIJwNcdV3hbyQ4+L8eba17WZ5fR+nvEexGGyEcwF0Wj06ra4q
      U641exBlUd20CjnMeiuCLGDQGphJTuA211WR5822VoxaE3OpKRKlBIYKDdpjrgMN5MU8Oo2O
      6dQElkr8kEajIV1O0WxtQyjomI7MYTGYkWSJN4ePMRtdoL95ORPhGcpSmTsHbiOYDiNIIpu6
      1vKdMy9QFsvYjBaypRwKCuvaV/HxLfcz7B/n0Op9PL39Yd6fukCulGN12wo+tfNR8uUCdXY3
      7e5WhvxjnJg4yxJ3G6F0hO76TmZjixSEEvV2N1qtlluWbeWlwTdYTPi5a+B2aq0OhnzjgCou
      OzV9HlGS+Nj6u1jW0KUuJxSZklhmeWMPk5FZNKjE5Xp7HRPhGU5MniWSiVWXPhajmWd2P84/
      nfo+8VySolDEm/BXn6gAY8EpxoJT1Jjt3LfuDopCiXfHThHPp6ivqeNbp5+v7gHeGT1BIp8i
      V8oRzkSZDM+yGPcTSIaq8oWiqHp+i4I6I3a423h58A3CmSj7+nfzR3d+kfHQDMFUmPvX30VX
      /RLuXr0Pp6WG/StuAY2Gmaga4dTftIwv73uWczOXWds+wF/c+1UV1PUfHQCSLHIhfIJU+ebI
      ooKUI1mKIpbh/z72l+SFHLIiMx2bYkP7Jrrc3YyFRkgVU6qNMRumy9PDdy584ybNfzQXweGw
      0WRtwWqwYTXYAAWb0Y5ZZ6bd0YlFb60uY1LlJCadiTpLHUadCb3WQKezm0DOj06jJVlKUJbV
      jrAki7gtdWoZFNUbYNQasRvtaNHi9We4PDZLOiOwpnUlL507yYXZa+i0Ov7zoS+TLeaYiS5A
      RUlZb3ezpm0lz+19mkQuSTyfYlPnWtKFNIIk8ieHvkJvUw+Njno+ueMR/tfx7xBMhXFaHKxf
      sopoNsHOZVvo8rTzZ69/nUAqxFf2f473p84zGZ4hkArR37yMzV3rqpJoXzLIeGia9UtW88zu
      x3np6htVt9RC3E9XXTuf3PEIZoOJIf8YJbHMfWvuoMFRx7nZK0iyhMfmUpPcEwFWt67gu099
      nZcG32Q6Ooc/GcRlVSl2Bp2e1tomltZ3MR2Zw5sIoNFoeGzL/eo1F0o8s/sxRoNTZEs51i1Z
      xRPbjvAPJ7+nmluEIqF0mGZnA8l8iu1LN6EoCol8iqX1naxoWc5UeJY1bSqoOJb7sDF6cOVe
      1i9ZxfaeTdy//i5+fOlVBEkgVy7gTfjxJgKIski+XOS1628zHZnj/NxVtndv5BM7HqHZ2cjg
      4jB7+3bw8rU3WYj7KApFDqzcw3hw+j8+AEJ5H3PZyX/ztaJU4OLsJWajH25YylIZDRp+dPWH
      BNJ+FBQEScCX8nLVe4myJNy09q2z1dPiaSYn5tRAilKcaCGMKEvUWeopiDmGooMkSwmKYgGb
      sabK8R+N3yAnZChKRSRF5XgmSnG6a1VjeEZQm19aNJh1Zgw6E1khQ7OtFX88yqsXTpMu5Ain
      4oglAyN+9XMqikJjTR07lm5mxD/O8sYehvxjzMUWmY7M4k0E+OnV10nkU5yfucyf3/ufCKbD
      uG21/N2xbzHkG2M4MMFYcBJJkfElApyevsTF+UEmQtME02FiuQSSLFFrdZLMp6q6nzZXC++O
      nSKQCmMzWTEbTKSLGVxWJy9dfR2tVsfBlXs5P3uFdDFDMp/iyW1HMOoNBFIhljf2cHH+Ki8N
      vsHatpUMtPTRWdeGWW8iXciwvWcjblstZ2cuV3VFLbWNJAspTHojM9EF3hw5jlGnJsn31HXw
      xNYj/PDCSyiKwuf2PIVRZ6DJ0cBX9n8WUZZ4efDNqqHeZDBhM9locTbittVyYuIsRaGILxnk
      0c0fQ6vRUGt1clv/Lob94xTFEo01dQx6hxkNTPDUtocwGUyUJQGj3kgsl0Cv03Np/hrZUk7N
      PBDydHmWoKDw+o2jHBs/Q1EsMhqc5LpvFIvBTLqYod7uYcg/yqmp8//xARDILxArhX/l67F0
      /CPBFrF8jEThoyF3uXKONmc72VKmUqY08sSmpxlPDpETshWefiMFMY/HrHI5LXordoMdi8GK
      y+zBbqypVoNkRabO2oDVYKXR2sxcapqSVKQsFjHpLWSFDBadhXpbI77sIuF8gJyQxayzEEkl
      GV38cD3c7mohVypUTeSxXIKXB98kLxQ4sGIPQ/4xRFlEQS0GxHPqJl9BoatuCbOxBQrlQnWd
      L8kSWo0GQRJpqKmjs64db8KP0+LgnrUHueEdxW6yVanKba4Waq1O6uwusqUcBaGE2+YklI7y
      +wefo97u4e3RE+qTt32g+v9o0PDu2CmOjp1ieWMPf33/H/PDCy+pwjSTlSG/OhhNegNPbDvC
      t0+/wItXfk5LbSNr2lag1+rx2N3s7NnMDd9YtewqywrxfJJwJkooE2EyPEtJLDHoHebN4WNM
      R+ZQgL9971v0NfagoFBnd+OxubjuGyWQCpEqpD9EtKAwG13g0vw1xkPTJAtpOj1txHIJNnSs
      Zjoyj6TI6LQ6/sfRbzDsH2dZQxf1NW666zpodTXjNNeQL+cRZYlWVzOjgUkU1BkmkUthMZgx
      G0x013eQKxV4dvfjDPnHCKUj//EBkBHShAv+X/n6QP16JsNT5CsaoGZHCy6L61fGlg40r+K5
      XV9kWf1ysAgI2hIGrRqTWZKKmHQmEsUYdZYG2ms6qTE62N91mPH4cOXnjeSELCa9mWZ7Gzkh
      gwJMJyfY0rJLNeIraqq4IJVVU4tcxp9dpN+zCoPOiKiIdLm7yOdUXo3LWsvvH/w89629g5no
      PDuXbmYipCbOK4pCrpTn1r6dzETn2bBkNV+7+0uMBCZJFdJ0eto5NnGGxYSPlc29JAtqcPMX
      b/00bquTRD7F7x34HPPxRSRZ5qGN9/CDCz/DbDTxyKZ7+cWNd0kXswy09DIXW2TIP0ajo56+
      pqVkSll2Lt3CpflBAqkQzY4GLAYTc7FF7CYr69oH2LF0U5WMFs8neWTTvTgsNUSyMT6141He
      HD5WvQGDqQihjDrTZEs5/vTw7/HCpVcYD01z3TvCbf27MOj07OvfTSgTqaa/rG5bwVPbH2LD
      kjVcnLtKprLPMegM2I1Wnth2hIW4r/K+bOTKedw2F8/tfZoh/zglscSatpXU2d1V3k80G2c2
      ukBZLONPhXhq+4MVLVQ/74yerBReFIb8Y1z3jbJhyWoe3Hi4WuWKZhM3AdWW1nfy94/+JW8M
      vaf6I4Qilxdu8MD6uxj7TZZARp0Zb272I+weAKPWxMbGHWzt2E6yoE5V9616gKJY/JW8/9Ut
      a9neuRO3zc254Amy5Qx6nYFUMV6NuFzbsAmX2cWNyFUWM3PIioRep2b6LnX1kRMzJItx5lJT
      1JrdiLKI0+TCrDNRlsugUNH/W4kWQhi1RjQVl5HafZaYTI7Q09JEf/0K0vm8Ou2KAj++/BqT
      oRn0Ol3VbueyOhkJTJAvF7mtbye7l21lJDCBIAkcWrOfM9MXVLOQLJEXCliNFtYtGeAbp75P
      umINvOEbI1VIkyvnmYstki8XWNu2El8yiKIo3L/+bsZDU6QKGXrqOsiUsgRSIZxWB+dmLuNP
      Bnluz9PIisz52SuY9Sa29WxkOjJHMBVGr9PTU9dJQSzx5tAxAqkw9667Q11K6Ax8dveTmAwm
      rnlVS2Kbq5muuiW8NXJCTXNE4eFN99BYU8/F+Wt01bVTFMq4baqkoKtuCbf37yKciTIanMRi
      MKPRqDOlIEu8M3qyUr0q8tiW+6sxTYfXHmQ0MMlDG+9h/4pbODN9CZPeyG19O6tqVZPeSKaY
      5dzMZTo8rXTVLanGvPqSqvdbp9FiM1oRJIG+xqV8etejKjC44ifp9KjBfG8MfZg0VBbLtNY2
      I0jCf3wA6DWGyo0UvEkMp9cYWO3ZhMPo4seDz3Nq9gTJQoJLixcw683E87GPQLIMOgNPb/4U
      Oq2WF8f/BY1Gw4GuwySKMRwmF9mymvM6nRxnJHadOksDALUmN9FCqGJqz2HQmogXo5SkYrU0
      2mRroSyVyAlZGmzN5AWV+mYx2LAYrPiyC2SFNAatAZNO1SDVGBy8dvEMczEvl+avkSvn8SYC
      SIrMc3s/QY3ZTpOzgfoaD0P+MWRFxpsIsMTdyv88/h3iuSQOk52uuiUql1NWgUzZUk71ueYS
      SLLIjqWbyBSzNDkaeHL7g1zzDtPb2MNUZI50McMf3flFrAYzWo2OW/t2MByYJJAK8dU7fouB
      lj5OT1/EoDMQzcWZiy1Sa3EiI3Nq8jwLcRUFeeeq27k0P8iZ6Usq3qRrHV8/+g0W437+5NDv
      YtQbuVHx4945cBuzsQV+dvV1asw2THojdpONW5Zv4+tHv4EvGUSv1fOdp/47I/4JXrzyc94c
      eq8iLR7kwMo9fHnfs/zk8s+J5ytLQUWhIBRZ1drPSCUQY8g/znhwipnoPEM+Nf/r0twgOq2W
      p3c8TCgdJVVI8+T2B3lv7H0KQpFoRQTnTQQIpaMsbeimu76DZD7FmyPHMelNHNl4mG+dfp5c
      Oc/yxm7sRhvD/nEGvcMVILE6KLQaLblynonQbzADqDIIJ43WVvRaI3r0zEe8KCU97TVdRLJh
      vnPhm1VchoJCohDnYN+d+NO+KhipxlTDp7d+lpVNA8ylpjnhfYeckCVaiCBKAlq0WIw2FEUm
      J2QRZZFmeytWg42MoEZdGnVGYoUoddY62ms6cZpqyQs5muwtTCTUgAeLXhWYqVhz8GcXaLK1
      0mxrQ5DK1JrcaIBYIUJJKhGNFivJizp+b//nMej09DUtZW/vDv73yX9mOjqPFi3JSnp6p6ed
      VlcTVxeGMOoN1FqdnJ5SpQPLGrpZjKvVqE/v+jiPbLyHxUSASDbG5s51tNY28fyFl4jnktw5
      cCvvjJ6kKJRYiHt54dIrDAfGSRbSTISmKw0zG7Iis7Z9gFAmwpB/rJoS+YFp5YMjkU+RLqhN
      LqPeiKzIRLJxRFkikU/yvbM/VqXLuSR7erdzwzdKtpSjpbaJklAikU9xfPy0mqyj0bCypY8V
      zcv4l3MvVpc86WIWbyKAUWcklImQLmTIlQt88bZPc3DlXqYiszy57QiiLDEdnmNN2wpu7dvJ
      1cVhBlp7uTh3jWQhTVEscXF+kJnovGpfdbWwtKGLRD7FbX27ODNzCUVRe08PbjzM+iWrmY97
      CaRUXPzRsVOVMrRAIpek1uokUUjR17iU/Sv2MBuZp8ZkZ9+K3axs6WM8NPWba4FMOjMuYx3f
      O/ddzs9eYCw0xonp9yjL5Y8sdxRF4dDAvTy6/gm6PN2kiymsRis5QZVCt9d2UJZKaCpcTg3g
      MDkJ5wNV4/qhniMkSwlCeT8OUy2pUhKbwU6t2UWtyc1YfBhfdoGckKG9phOjzohOoyMv5CiI
      BfRaHY22Fix6KwUxh6iIRPIhCmKuCta1a90oggl/MsSX930Wm8nCDy78rFrn9iYDKIrC7mVb
      K7ZAC1ORWU5MnEWSJZ7a9iDNtQ1VIOszu5/g0c33Es+n+OmVX9DqauLd0VNqUHU+zaObP8bL
      195Uu87ORgpCiXZXCxuWrOaGTx3AHpuL+hoPblstI4EJTkyeY3BxCFOlGgTqk63Z2XBTGXFl
      y3I8djdOi4NGRx2CJJAt5WmsqWNTxxouVQR06vVRkSyrWvuwGMwMV7y/Cgr1NXW01jZzZeEG
      r157Gw0aRFnEpDdWfcwfGOHfnzpPWSozG13g8sJ1xkPTXJgbRKvRUmO2kyykaXe1kClmWUz4
      qa/xEMnE0Gq0NDrqqzZKUVJjn3LlAg9uOEQkEyOcjuCxuxhcHOatkWMk82m+dPtn2LdiN7+4
      8W71s8iKwi3Lt7G3dwd2k40Xr/wcnVbHp3Z9nBcvv8al+Wt89eBz/2cDQB19EpIioUVbdd4P
      +q/w6tBL1fMkRSJdSiPJ4s1J4Xoz968+Qq2llu9f/h4joWHi+TjziTnenznFquY1tDjaSJWT
      2Aw1FMUCaGA2NYVFZ8FlrmMhPYsvu0C6nEJSVDukVqPDn/GykJlFlAVa7O1Y9BZERcKXXcBp
      qgWNhmDOR697JXZjDalygkg+hKzIbGrernaGZRG9xsx3j/6C0cAUoiwSyUQryA0voiwSyyU4
      uHIvoXQEjVbLZGimkoH1IUokkonxpX3P4k0Eua1/F/etuwOtRsfJibNMR+fpqe/AoDcQTkdp
      cjaQLeewm2ysau3n2LgqfDMbzHx8y8eIZmO4rE5kRWE8NI1Oq6MolBAkAUmReWzL/SwkVGHd
      J3c+wpaudYwExtHr9Kxq7WcxEcCb8PPVg7/FCxdfIZSJcHDlXkx6I+FMjFg2gShL6HV6otk4
      VxZvMNDSR0NNHVcWblQ/U1EoEqrkcomV6/pn9361ooN6n7JYrvgSBAIVXGKmmMNhqSGeS1Jv
      d+OyOhn0qlnFVxZuIMkSdpONpfWdpItZnth6hN+5/dOcn7tKa20z27o3cnziDEWhRLaYpygU
      cdtcfG7PUypkoPJeVrX2Y9QZue79UOpgNVqQFYXJ8CzDgQkyFcVrNBsnkA4jKzJ7e3f8fxsA
      iqKQLMcYil9hNDHIdHoUf34BURZwGF3Mxma4uHj+pt+ps9Vz94rDTEYnkGRJhdiuf4zVzWsY
      Dt74iD9AUiSCWT8TuetoNTqi+RAajQZFkWm1L8FisNLh7GIhPUuvZyWCLLCt5ZbKOl5F5ZWl
      Ekadib1LDqqeYa0Rt6WOoljAXIHj6rUGvJl5vJl5et0r6HIuZSY5TrIUZ0XdaqaCC1yeHq++
      r3guiVFvqMaAmvRGXFYnU5E5gukwmWKOWqvjJvCS2WDi1NR5rvtGMeuNZEo5vvLTP8VutrGp
      cy3XvMPIisydA7dyauo8Q74x/MnQTY6lXCmHLxVkNDhJm6sFSZarQRHP3vIEkUyUFS3L+dK+
      Z1RTucHE7mVb+YOX/xs6rY4nth7h1KQKGV7bvpJcOY8/GaS+xs2Qb4zZ2CK+ZJAVLb1sWLIa
      t60Wvc5Appih2dmI3WSt4lWcVgfbezZVu6qVm4IHNxxmyD9WtUcCdNd1qjr/Up4tXev4/J6n
      GQ9O8+S2Bzkxea46W4HKBTXpjRwde59cOU80FyeYDnN66gKdnja+cOunmI7MYdQb0Wl1XPMO
      E8nG2NK5jumIaojx2F1cXbjB26Mn6KpbQpOzAYvBzJau9fiSQTZ1rlEDshN+tBoNj299gF3L
      tiIrauXt1w4ARVFYzM1wOXKarKg+dWVkynKRaDFErBSm37OK92dOUZY+bGTd2X83d604TG9j
      P/OJ2QrbP43ZYCGWj1YkEjcfBp2BW5buqcirE6RLKdzmOrIVUkOyqE7tkizgzczjyyyQKMVI
      l5JkyikG6tcRyqkxTGOxIcpSCZPeTLIUVyNQpSIeSx0FqUCHo4das4szvuNoNFq0Gh3pUooa
      g5MrM+PVmavW4uBPD/8+83Evkizx4IbDXJwfrEpuQdWYL3G3qaVTWy07ejZxevqimi+QDCJI
      YtUWOBddIJAKE8nEKmW5D7+zZmcjJr2RbCnP6rYVZEt5gukwkWyMhzYeJlPK8dlbnuTeNQc5
      Pn6GszOXGQlM8Isb77IQ96HVaPGnQjQ66onlEkxFZtFqNJSEMqenL1KWBP76/q/x3vjpamKj
      XqtnJDDOXGwRo87A/3PkT/jhhZc4NXWeTR1reW7v05yevkiqkFaD8Cr9kOYKvGo2tlgd/FqN
      lt+5/Rl6G3u47htjW/cGvn/+p0xH5zk3e4WVzb3VcqdWo+WpbUd4a+R49eGSLxcoCWXiuQSC
      JHJkwyGOT5xlNjqP1WihUC7isbm4vHCdQDrM7St28+Xbn+W16+8iyiJumwtfMkisQrELZSLM
      x7w8te1BfMkgW7s38t74+yTyKc7NXObi/OCvHwBpIcml8CmUX2F7LEp5FI3M/qV3E8oESRTi
      9Db08/C6R5EUib89+TfMJ+YoCHnC2RAXFy/QYG9gKvrRLnKnp4vZ/BgGrRGb0a62uMUcwZyP
      eDFKv2cVmbIaieQye+j3DFCWytVMLruhhpyYx2aw4TJ7MOlNlKQi0YJKG8gJWRYzc7TXdLKQ
      maUg5OmyDRDJRsiWsxy/PMrFqVE2dKhPjfoaD02OBhYSPg6uVMnJ8zEveq3upifZnuXb+auP
      /RGNNfX4U0GMeiOBVAhRFqmzu/nDO7/A1YUhuuraWUz4q9UIh6UGu8lGvlzAoNPzuT1P8dT2
      hzg/c4Vnb3kCq9HCdGSepQ2dqgAtFaHZ2YAoS9Ubx2lxYNabUBSZsqgaXG7v38W9aw4yEpjg
      vnV3VJcGsiKzo2cTFoOJ+biPWquTIxvu5uy0Gjao0+r4xPaHOT5xhlguQU9Dpyp5nr5Eupjh
      j+/6Io2OBuwmK83OBi4tXCdTzHJw5V7MBjP1NR42da7lu2d+hC8ZYCQwSbaYRVJkJFnmj+76
      IksbOpFkiU0daziy8TCRTJRhvzrjLnG3sr17I0WhSF4ocMM3yunpi5TEMmWxzH859LvsWrqF
      4xNnVTaqoqa/5IU8e3t3cGvfTsaCk2rEbtsKgqkQK5qX8/rQUXypIJ117Ty+9QGOT5wlkU/+
      ekeYoiiMJa+RFhK/6hQAskKKVmsnxyffI1khPdwI3ECURU7PnvxXf1MVYW1s33yTEcZhdrK+
      ay1owGqwodNo1aRGvYVsOUOzva1io5PJCTlqzS6ihYg6vWXmyZbTLGbmuG/Zw4zGblR6ALVV
      3IndYMeoM+G21FOUVOrb5YkZXjj9FsPzC8RTBQKJGEWhjElv4sVnvsGmzrX896P/xFRkjotz
      g6Qr9IPDa/ZX8IVF7CYbyxq6cdmc/NXbf890ZI6Z6DzP7n6cte0DTFdKmufnruJPhdjUuYZQ
      OoLJYOLhTfdWQyI+s+sxjmw4RK6U5wcXfsYN3xjvVYIuWmubqp7ZZD5FupjFarKytL6LyfAM
      eaHIlq71XKyUbFUqhMQN3yhajY6Pb7mfYCrMtu6N/OD8T7nmHeEP7vxt/uDOL7C2baCy7FJY
      2z7A35/4LkWhxP4Vt3Bi4iyT4Vnc1lpMBhPP7f0E52Yv8+7YKbrqO4hkYjgtDp7b+zQ/vfIL
      FhI+3ho5Tl2Nm0wxy/LGHo5sOES2nGeJuxVdxbr4yrU3OT93lXA6yl2rbken07Jr2VauLFzn
      /NzVKojri7d9mvenzlMQihh0Bt4aOc6bw++xo2cTB1buwWGp4dzsFURZwmN38eNLr9Jdt4RD
      q/dzdPQUW7rX86f3/D5vjRwnWUgjywpHx06RyCfZ3LmeZ2954tfPAKPJqzdp9X/VcXHuEjf8
      H26aUsUkoUzgJrvfB4cG+N29X6W3sZ86Wx2b2rdQNmXw2OqIFyNV2nCsEKnwfFSJs7bC+TTp
      zOTFHIGctyJlrkejAbe5jpnUJIGcl6JUIJIPYzPYqwmQobwfi95SMdTInLg2RFFUPa7IWrQV
      INdASy+jwUlkRVYdR8UsT21/iKJQwmayqmVCZxMPbjjEW8PHuOEf483hY8iVwa3VaLlr9e2V
      Mp2P3qalxHNJuus6uHPVbQz5x9jRs4l8ucC7Y6eQZIn5mI+tPRt4/uLLmAwmEvmUetEUmb6m
      ZUiKhChJbOxcw9sjJ1R+vl6PLxmkLJZRFEgXVTy6SW8klk2QyCcJZSLUmOwk8klWNvdybuYy
      kiLT37SMpfVdvHrtLX508RVWtfYRycSYjsypGvqK20xRFMqSQKqQZjQ4SaFcoNXVzJf3PYPT
      XMPF+UEWE/7q/kBB4d61B3lq20O8NXKcKws3OLLhED+//g7nZq9wvMIeFWURo87I2yPHue4d
      pcPdWrV0AmRLeQZaevEmApgNJta3r2IyPIOCGie1onk5kWwUi8HMrX07SOXTeJMBjDoDoXSE
      ubiXWDbOZFjVaO3o2US6mKlkE4jsXraF696RXz8AptNjSIr4750CQCAeIpC8OQSjxdFKPP9R
      7U+nu5vblu+jxdHCyqZVZOQEsVKE2zvvZCY1SaqUwKQ3YzHYcJs9RArBSgtcoiSVyAkZtBod
      Fr0Vm8FOvBChLJVpsDWh0+pxmTwAlfO0OE21lGUBt7kOu7GGslTGqDMRiCWIZdWSm91kxWlx
      sK9/N+lChl/ceJdzs1e4d81BBhfV+J117QPUmGycmbnEZHiWQe8I+YqCVZRFPr/naTo97fiT
      Qd4eOcGr199Gr9NRKBfIlfMMtPbx3thpZqILzMXUhMUPtEOyInPNO8zxiTMsJvy4rS5AwWww
      0VrbhMVoYVlDF4qi4E0GkGSZQ6v347LVki5m2L/iFnobe0gXMqxbsgq9TgeoXMyjY6fwVzQ4
      X973LE2OBt4aOc4PL/yMhbiPcFaNffqg7KrX6vndfZ+l2dHAEk+r2jvIxNRk+Mg887FFpiJz
      TIZm8SWD1Nnd2IxWEvkUWo2WNW0rUIA3ho5SFIqkixmCFbS6UW/krlW3YTNa+cqBz2IzWsmV
      1ayCX6466bRazs1cJpBWGT4Wo1lN8tHqWN3az3fOvsBYcIpb+3YSzcZZTPjZ3rOJJ7Y+gNVo
      pSgUaXI0cHr6IvlygWA6zJrWFUxH5zHqjZTFMudnr/z6ARAtBsmLH0Wa/OtjlWcDVxYvV5GG
      FoOFZ3c8R7qYJpgJVM8z6y0sq1vG6blTjIfHsJttvDL9I5KlON7MfDXKaM+SA/gyCwRzPsL5
      IA5TLSiQKiexGmxV5WemnCJdTlZSX0S0aPHnFjHrzGxo3EpBKlS9wHkxhz/rxagz0mhrZlV7
      LyaDgbWtq7myMESmmGU+7qXN1VLNk7o0f428UEBSZFX4VQFBAezo2VRZ60sVarIRq0l1Q30Q
      3pcqpMkUc8zHvYwHp1i7ZIDFuJ+e+g4+tu4uJio+3oc33cNsbLHqpd3ctZa/f/QvmYst8vbo
      iepT9tDqfdTbPWi1Wr50+2ewmay8NXyMKws3mInMC7/jQQAAIABJREFU47Q41E1iKszW7g3c
      3reTq4tDlESBFmcTLbVNaDQajo2fpiiU2NCxmnvWHODS/DXm414e3/IA6WKGszOXCGWilMQi
      He42tvdsIpgOMx/3IisK/mSQ7voOWmobaattRpRF7l59O4FUmJOT53Baaqiv8eCw1PAHB38b
      i9GiEpnLBS7OXyOcibGqtZ/3py5wcf4aM5F5lrhbSeRTGHR67llzkJnoQlVN2lXXwfolqygK
      JZoc9UyGZ5EruqP3py6QyKeos7v50aVXeX/6As3OBg6t2c/JCTVcRK/V09+8TG1Y1jZhN9mZ
      jS38+wNAo9Gg1egI5Bd/1SkAOI0utjTvZll9L6IsYjPYMOnNXPeraXzNjhaW1/eyukXdXF5a
      vIA/5WM6NsWg72olRlNTpSsH835qTS68mQW0Wh1ajQ5zhetvM9Sg02gRZZFsOY1eq6fB0kyj
      rZlyZcPbYG2kwdpEXswRLajLoGZ7K022FkRFpCSpa0pF0hFL5Wl2NjLkHUeUJZwWB3/9wNdY
      jKtPlCHf2E1U4wc3HKbZ2UCHp51L84No0fDbt36Kncs28+0zLzAf892E5qZiggmlo/Q3L+PP
      7/0qd626nZHAJD++/AqHVu/DaXFwaeE6VqMZk96ExWhmoKUXh6WGH55/idwvLSPVmWe4ak98
      d+Rkte7+gS7+g4dQOBPhzeHjCLLIpo61XFm4zunpi1zzDtNQU4dRb6C1tgmX1cmxiTNkilnS
      xQxjoSlShXSF5aTh4vwgs1E1cOIDswrAzqWb+NpdX+LV629zYfaqaic1qOh0s8FMtpRjR88m
      ylKZ5y++zKqWPibCswiSWK2QjYemESSRoljiub1P400EqDHbeWb34zQ7Gxn2j+O2ueiuX8JL
      V1UzzERohmdveZJMMUtf01LCmSg6rQ6jzlDRCEEoHeGeSi5yQ00dDksNp6ZUcNZ9a+8EDYwE
      Jn79DGA3OMiLmV+JP9RrDKyoXa/m5Tqa6fEs5a2x1/Gn/SQLCeL5GLFclB1du9i3/CDPX/3+
      TWq9oliky7UUs9nI2oaNGHRGJFliuXsFkiISzPnIi3m1hq/TU2N0YNFbWEzPVbrDaezGGgLZ
      RUK5AG2ODvJCloXMHNlymmZ7KzPJCTXwuiKaC+UC5MpZjg1e5/TkFYZ9E/zegc/T5GzgjpW3
      EsnG+O7ZH3HNO0J/87Jq/d1ldXJl8UaFvqCGO5clgdv7d3NgxR4mw7O0OBvJFLPVhsya9pU8
      s/txRgITHFy5l3Z3K2PBSd4bO00kGyOajXPDN0qqkCaZT/Pf7v0DLs4NcnLyHO+MnECn094k
      bVjV2l/REkm0u1uYjs7dVJK9d43qV86W8ty39g7GglPYTFYCqVBV0i0rMl11S0jmU4wEJrgw
      N8jS+i5Wt61g/4o9nJm+iIKCxWCi2dlAOBPFbXNyW//uqtxaVym5fv/8i8SycXQaHaFMlGg2
      xp7e7QRSYSYrlIjZ6CK+ZIBwJkpDTR2JSqd3TftKHOYaItl49el/dXGo+u+RDYcY8o9j0OnJ
      lQqE01HQqO9fUWSueUcYDU7y1YPPsblzHQ5LDdcqQAGH2c5cxfppN9nY2r2B694RTHoj3oSf
      U1PnQeHXUyE0Gg1rPFux6WuYzUwgyOrTTYMGi87OmbHz/CT6Kg6zgyc3fZKhwHUi/4r3KSsy
      rw29zEDT6qoG6JePSCHEClc/xxbewmX2oKBwxncch6kWq95OWVJxhAqoG1mdyuTXaDRE82Gs
      ehs5IUtX7VKKYoFQPkhP7XKSxTiyItPh7K4Q4PRMxEfIltM02VsxGtSPbzVa2N6zkWPjp/nR
      pVfo9LSh0+owaPV8YvvDpIoZjJWYoqe++wVkRa4w/zXUmO3sWraF87NX1S+1cpM2OxuJ55P8
      8V1f4h9PfI+x4BRz0UV+cvk1FuI+ljV0saljDclCBg0aFBSMOgOCJOCtVHyKYok7Vt3KiH+C
      +ZgXp9XB7x34HBOhGX544SU8Nhd2k62agNLXtJTNXeuYj3uZCs9WL77NaCUu3VzJSxcyVVkz
      wJ7ebexZvp1/PPnPLGvoIpZLUBLLJPIp9izfjtlg4uXBN2hxNvH09ocYD03zk8uvAWpk6ad2
      fZx/PPE9SmKZyfAszsqS0GlxVPcuh1bvw2I0MxqYZC62yLGx0ygotLmaq4K36j2RifG7L/6X
      6mABcNtdFIUi+/p301LbxKX56xj1Rk5PX+StkeNYDGY+seMRFEVmb98O/vz1rwMQzSVUiLDJ
      ykBrX3XZ+X/EBXKb62iytOE219Fq7WR57SpuLIxwcvpEJW8ryzXfVcqy8G9q/gVJYFfPHoLp
      wE0DxKA18OSGT+DNz2PSmQnlA+xqu5W59DShnFq1MepMdNf2khHS6DQ6HCYnGo2WeCFKjcmJ
      qKgJMBo0eCx1mCuVnnA+SFEsMFC3lryops8sd6/AarSjQcNA63LSmRLxfJKZ6DyD3hFKYone
      pqX89QNfQ0HhH07+M+dnr3DL8m2E01HGgtOsau3j7tX7eGv4GCWpzG19u5gMz1bzv4w6A/5U
      kEQ+RburmQ53O9e8I6xtX4kvGaAolHBbaykKJeZiixzZcDdFoURJVClwep2eZMVH+0GmbaaU
      reL93p+6wFhwkiH/OLUWpxp5Kots697At0+/UKUtlCVB1RsVUnhsLjQaLWVJJbf918NfUTHi
      uSQmvYloNs6x8dNc946okCyznUg2RrqYJZZLEM8lSeRTCJLIl25/hnw5Xx3wTksNWo2G3sYe
      ypJAvd2DpEg8te0hjo6dYjw0jctaS6aY5fmLL6v9ikqFTb0R4R8//n9hMpiYDM1g0Bm4b90d
      XJy7dpNy+NO7HuO2vl18fMv9rGlbQbKQUmfcUpbFuB9Jlvj0zse4f/1dmPQmItkY2VKOOwdu
      49unn6cklvEmAtTXeMiXi9jNtl8/AGRFxpeb41rsAtPpUUIFPxkhiVlv49zsWfypD6lwZUnA
      Y3P/mwPAoDVweOBeNrZvxp/yki1nqbc1sL//ACPpq2i1OhbSc3Q4u4kUQhUhmwl/dpF2Ryfx
      YgyNRkOymFDtjBptBY8uoEFDtpxhQ+MWkmW1K1wSi+g0euzGGvzZRbyZeYwaC0evXeX94eso
      ooGF1DznJoYoiWXmYot4bLX0Ny8nnIkiKwpnZy6phAexzLB/gjeGVenvB6bw4cA4mWIWWZZZ
      iPtwWGow682sWzJAtpSrWPauc2XhBr996ye5d+0djAQmMOgM/L+UvWd4XNd5rn3v6R1T0DtA
      FAIgCfZeJZIqVJdsWbItS7Hl/jl2bMeOjx3Hzpf4SjnH+dK+2Ekc+6TYlm1ZvZISJUoUSZAA
      ARC9DzCY3tuesmefH3s4EuOSnPULmBlcmAH22mut932e+/nGqc+TKWQJJEPct+0Ul1dG8SYC
      LIbcbKzr4k/v/RrZgsjfvv4DxQOby5Ar5tGqNUTKQF1ZlrEaLZXgieXQKvny+UOj0uAy2ysX
      2aktJ/j2XV+mIBWYWJ9FEAQ+euBhpn1z3L/9FL5EgP0bdrIQVIw/8WySaFnSLAAn+4/gjQe4
      c8txZvwLTHnn2FjfhUlrYHvrFt5aGCIuJrl54yGeHz+NPxFkfH2adBl2lRTTCkIxn0GmxOam
      PhaCywD01HZyduY8z4y9wv3bT/HZY4+xu317GeOufDaDVs+YZ4pXJt8gkAwxH1jiJ0NPMx9c
      whv3s6V5gGZ7I75kgIaqOr757F/w0sTrxLMJtCo1a7F3CzGHu/dSZbL910HZsiwzExtjKnaV
      fElERmlE5Uoi/qyHXEFk+T04jXprAx/a8SgXVs7fIIID2NO6j8MbjvLS1POMrl+lJEsc7bqJ
      ba3buLD+Jnq1HrPOQqaQJCpGEKUsdoODKr0Dh8FJIhdDJQjo1XqyxQxqlYZCqYCMjEalJSIG
      yxUDueIhVn7eTrqQIi/lGJ5ZYmx5gaSYYTGwRiiauiEEWmn151mNrjOyeg2bwapIAMrQ2vV4
      OfuqLELzxgP01neBAC9PnOWewdtYja7z9sJQWQO/kfnAEtmCyGJohV+OvMBCcJmkmESvNSi4
      czHFW/OXSIjJyuHVYa7idw48xOmpN5gNLKIWVNzcd4i4mOQrt3yW/Z078cS8nNp0nN3t27iw
      eAUZmQNduzk5cBRPdJ27t97KYwc+QDqfQavWcN+22xlo7OXnw88zH1xiNeLh2voM0755Jrwz
      tLmaeWfxMvs7d/LV2z6LLxFgIbiCSlDR7Ghk3DNFtiDisjj45dUXWQq5ubX/KA/tvpdYNs6b
      cxeU+n6ZHwQKxcGoNZDOZxlsHuCrt34WGeit28DdW2+lt64TrVrLyb4jvD57nmxBZDW6zhNX
      nuWFa2f447t+H288wLaWTXz80Id4bfpcxaR/eWW0ciAvyTJ9DV0V/8ZicIVxz3TF0FOSS7S7
      Wkjl0rgsTkZXJ1iNrv/Xh+BILsh4ZOg3PY3VZKbZ2oEklZTQaLWO9YSHvrp+soUMuWIOrUrL
      rtY9PLbncYbcF/i3Kz9CLIoUpAJT/klKqiL1tnqkUpFAxotGpSFdTNHvGiSY8ZEuphXDuqWJ
      eC6GL+1hR/1eRgKXSBWS2A0udCodOSmHTV/FUnyeFms7Nr0dnUrhcNabmwCYWfETTb+r2qy2
      OMsSAWWZPdq7n3Q+SzgdRS2ouWfbrRSlIgWpwBeOf5x0me7cV9/NufmLhNMRbuk/ilqlZmfb
      Vt6Ye4elkLvc+pforutkPeZDKkl01ba/p1kE6Vzm3TusoAjDVqMeqow2ilIRb9xPIBkimonT
      39jDmem3SIhJ/IkgJ/uPcMU9RkEq8qG99xNKRlCrVHzzji+WqdAjjKyO440H2Ny0kRevvc5r
      M2/T39DDSngNd8TDJw4/QiafZSnkpsZSjUatYSnkxhcP8MbcBV6fOc/NGw/xnXu/xkJwpdJd
      jmeTNNkbUKvUZPJZ/vr1fyaTz1BjrcakNXKs94CSWmmwsrGhm48efJikmGJ0bYJwOkpv3QZ+
      dOEJXp16k70dO3hy5AXOzr7D4e695IoFqq1O/OWAEF8iyIXFK1QZbRzr3a90pc0OTm0+roDG
      3iNA3NLcT29dJ8FkiId338eEd6ZSPau2ODnQtZv/cdvnaLDVcXbu3TyE3zgBZFlmPjH1K9iT
      G4YAfXX9HG6/mZenXiCRi+NP+vDEPXzx2FfJFNKEMiFSuRSSVGQ2OMNa/MaS6gZHDw2ORqqN
      ion9QNNR4rkYJ9pPsZxYxKDWs5JYJFvIEsmFOdZ6C2+unmGwdgfZQkbZBslF4rkINaY6tGot
      TkM1mUKaqKi8d7PWgjuxRL2hlcn1hetvnQ/tfYBbNx3DbrQhFnJ44j5MWiNHevZx++ab+f65
      f8eXCFBtcXFh8QqLoRW2tgygVWsYLe+Vx9YmMeqMTPmUC8Sg05PJZ3FZnOxsG2Rv5w5yxTyZ
      fBadRkcql8akM/LZY7+DLxFArVLTZG9gyjeHQavnf77vmyTFFFO+WYZWRskX84RS0UrxIJgM
      sxbzcnFpmMXQCmtRb4WROetf4PTUucqkXo16WI8FiGeV2KGra9cqMuRULkVndSuCAH90xxfZ
      1rKJKyujfGT/g1xeGVMAtI5GNjf1446sMembrVxo1/sQqVyKSDpGX0MP799xF8+MvczF5REE
      QcBlcXB29jznF4bKHCOR5fAqYjnWqFhSvA9ja1PIyCRzadbjPkLJMO/fcSfv23Eny2E37ohi
      nnr+2hmWQm7sxipanI3U22pYDLkreqvryT3L4TWO9e5nT8d2xtYmGWjsZTm0ytDK1Urf44Vr
      Zypni9+6AiwnZ8gUfzXY4r1Dp9KzGvQw7LlceUySJRZC80z4xslLedL5NJP+CSVx8T/l/W5r
      2U6eLOPBYdZTq8xHZ4iK4bIzSySWi7LB0Uu+lKPWVI9WpUWr0pHKx4mKSihfoVQgV058VKs0
      zEdn6HL0olaplSWwoOHq9BrLwXXqbDXs69yJjMybcxe5tDTC3s6dXFwaJppRcrHu3HyC2waO
      8fTVlxCLOdqdLcwGFsiXuTvFklQRw+nUWsKpKN64n2gmTo3VxXff/y3qbbX8/2/8iMvLoxUG
      zldv/SyHuveQyWd5fvw0npiPL534JJ6Yj9nAomLTCywytHyVRns9RalIfVUNvXUbKirKGquL
      D+y6h2H3GCadkXpbbSU5HVDOJO+Jfj7cvYdUPkNndStGrQF/eXti0hl5a/5SJRJJo9bw8tQb
      fGTf+7HoTbQ6msgUMnz3zPeZ8s1xrPcAH97zAJ3VrfzowhMEkiG6ajoQC3mqLU7mgkssBJUV
      Tkm0UZHMpdhQ006jvY71uJ9aazXfufdrRNIxcsU8H9x9H1217ciyzO6ObVxbn8FqsNBgr+Mn
      Q0+hVWu5Y8sJ7ioHY0czceqs1ZyZfovRtUnu3Xo7Jp0Rd2Qdo9bIuGeKdD7DanSds2V+aTil
      VAIluURdVQ1PXHmGzU39aFUa2lxNv30CBLPe31j/vz7s+mqqtE7eWrxR9CYWleze9w6nyUW9
      raFySG5xtNDduIFEPka1qZaClFc4PSot9eZG9jYeIpQNEBUjCIKKbDGL9nqEqVqPTq3DqqtC
      I2jRqNToNUZsuip6Xf1ExBB6jQGzxsK/v/Ey095FIpkYkXSMjx58iOfHTpPOZ8iX4z5VKhW5
      Yg4BgVsGjrGpaSN5qUA0E6fN1cx8+cCmEgT+8I4vkhJTeMtEsmnfLAVJ+awGrYFjPQcIpsJc
      WhpGr9XzycOPsK9zB989/X26azsJJsNM++eRZZk2ZzN5qcBCYAW1SkVHdSuBZIidrYMUpALZ
      Qo7bNt1ER3UrWrWWjx/6MLcOHOX2zccJJEJMeGfY3bEdkPnGqS8QTkcrk8WsM+GOeginIvgT
      QbRqLV21HQw2D7Clqb8SxK3X6Oisbqexqo6LS8P88uqLRDPxsjVRIV3bDBaO9u5DKpWY8s6X
      w0c0rMXWcUc8ZPJZsnmxclPY3NxPIpvg8UMf4taBo4ysXmNX+1YO9+zlRxeeYC26zuuzb1Nj
      cfH6zHlm/PN8/vjjfOzgw/z1a/9MKpchmApj1Or56eVnaLI38K07v0ShVKy876JUZC6wiFhU
      Knm39B+lymijo7ql8hqpJHGo7NwrSEV88YAC42ro5lt3/f5vngCCICDJJXzZtV/3dGV0V/XT
      6eimIBVYjblRq9Sc7L2VgpT/FQZQc1UzD2x9EEEQOLLhGDl9guXEAhExRJXegValZXfDAaJi
      hNnoBMFsgFQ+qYCvtBYMGiOL8TnaqzaAAJtrtjMavIJVa0WnVojGyXwCg8bAQmyWZD6BCg1v
      XButHMpllGigaf9C5RDV5Kjnq7f8P+SLBdQqpZuZyWf581f+nnAqwmrUy/G+Q+SlAjf1HuBY
      7wF+eOEJUrk0k95ZHCY7UklCr9EjCAI/vfw0F5eGuWfbbfQ39vKP5/6N8wtDbG3ZxNm5d5gL
      LGLWmTjRf4QXxs8w7ZvHqDNwsv8oZ8t5XYIgMOaZIpZN4I54GGjs5fTUOd5euMSkd45IOkow
      Ga4Ard5eGKoQ5Vaj6zTZ69m/YWcFjQKQzmf59JGPKOiRsBupJNFX30Uql+W58VeJZxNkiwqP
      SBAEXGZHZaUrSkWeHHmBtxeG+NadX+Ij+96PO7JWITgc7t7LHVuOYzGY2de5k+fGXkEs5hhd
      neCKe4yF4DLTvnlyhTyTZfCVVCrhSwTKX0t0Vrdh1BqYXFfYpi6zg3gZ8pUQkxzo2l3mCCkr
      zQPb7yCcjhJKRqixuuioacMfD9DuamHKN69si1BiosbWJlkJr1GQiqRyaULpCGIh99tXALPW
      SjQXIvsbtkE1hgZ67JtRC2o21W/GarAyG5hmJbqCWBQrnUdQynJ2o51nJ55iObLEhO8aTbYW
      muzNlCjh0LsolAqki6kyrdlOq60DjUqDIKgwaozUm5uI5cIKu1+lI5lPYtFZMWpMuIw1JPMJ
      glkfqUKSzdXbMWiMRMQgkXiGeFr5DAaNnt+96WMMNG5kKeTGqDVw79bbONq7nzZnMz965wnG
      PJPM+RcrTRgB+PzNH+f01JuMrF5jaHm00qySkakyWvmXR/+Ke7beytOjLyslSmSQlQvnun5G
      kkuVJMRiSaLZ3lBh+hdLRQw6A75EgJIsU211VsqbNVZXpWafK+aJZxO8OafEhk55Z1kKKVDY
      QDLMjG+eS2XptSAokoDrQ4XA5eVRrq5NlCkXEn9055cZWb2GLxEgV8zT7mwhkAyxrXUTsWyS
      XW2DVFtd1NlqcUfWKqrU75/7V9QqNQ6THZvRypdPfgqpJHFu/hIqlYqVsKcS1JF/j34qnI5g
      MZhpstfTYK+ns6YNf0LxOQSTYX5y+WmMWgP7N+wikolhM1ioMtrYUNPGv138BecXhvjArnuI
      i0lenVLw6Z868hEe2n0Pf3Xm+3gTgTK94zF0Gh33bruV0dXJ91SMStTaXJh0Jp4Ze/nXTwBZ
      limU8iTyEYwaM6KUpSDlKgcHlaCm0dzGgHMHpZKMWqXGn/TxF69/h2whS17KIRZFmqta6Knd
      SFNVM3cO3M3by2+RK6e+lOQSaTGD3qTGpDGzklhQ2u8aI/FclEwxw3x0WukGa014U+tkimlU
      gprOqm4chmqyxTSxXAST1kwJmZgYwagx0WRtYSo8Rr6UJ5oL01nfgMPopM7cQDqX4Z2lK3TX
      dHC0dz9nps/x5txFXp16k67aDkVfLkncNXgLjVX1JMQkdw3ewt7OHfzvCz9DkiWMOsMNFYha
      Ww2HuvagUWt4ZfJsRZqwq30r21o3Me6ZwqQzsrlpI954gKJUxGowc7LvCEMrSrPHpDPynXu/
      Rr5YQBAEPnbwYWqt1eSKBXa1byVbEPHGlbgmm9Fa+R15qcDJ/iMUS0VcZie+RIBMPlsh07U5
      m1mP+9GqNOxq38piaKXSWrr+PgwanWL7zCZZjqyWdTrKnn3SO8tKZI3VqIfO6jYe3fd+5gKL
      zJdDuY9072MhtIy6HHIx419gPebnC8cfJ5ZNcLL/CHs7d7AUciupjRodu9q3sbdjB0+PvsRS
      yM3Brt387UN/wksTr1c0TpGUYo8UCyLf+9Cf4zQ7eHXyzQrxbS6whFSSSOcytLqa2Vi/gSsr
      Y4gFEb1Gx2pknb6Gbj60536uuMcq20KAR/c/SL2tlssro786AQqlPFOxq4yGL+FOLSj1fimL
      RqWlydxGl62PbvsmvJEAf/Pmd3lm4ilWosvkpDxX/5PN0aK38s1b/1/2tR+gymjnhannbjgX
      qFUatrVsI5wLki6kqDHWUWduRKvWkczHKZTyVJtq8aTcNFlaCGdDpPIJjFoz/rSHhdgsgqAi
      mU+wmlxCX8751aoVR5ksywxUbwVBps5px+0LshhcJZKOMbR8lauriqjsOtpDKpXY3rqFoizx
      yUMfrtS+H9v/IDq1jinfHK3OJr77vm8x7ZvHXyYUNFTV8jev/4BLSyP01nWRyCbLpcpxzpbJ
      zh/ecz8/H36eL9/yaaKZOJ6YjwnvLLdvuokNNW3sbt/GjrYt/MelJ5kNLHJu7iI72wY5N3eB
      kdVxUmKaB3bcwUI5LLpYkpR4V2cj377zyxzt2c+wewyxmCNbEDFo9Xzm6GMc7NrF+YXLqFUq
      jvcdZs6/WFmZVYIKT8zHyOo1Urk0ucK7NzkZGZVKdYPzTa1S0+JsQCzkcVkcHOzazc+uPEs0
      E+fa+jSbm/rxxvxsLeeknZ09z9DyVSW8orGHCe8M2YLIfHBZ6YeUgxOTYoqR1XHUKjVtzmZa
      nI1Y9WaC5aDuVybe4OzcOxzt2c+u9q3s7dzB+YV3iy65Yp4fnv8JeanA527+mOIAi3m5sjJG
      u6uFoz37eHtxCEs5KnVifYa1qBeXxXHjBMhLeS4EXsOf9fxK8mNJlkjmY9QaG5EK8Kenv00i
      lyAv5ViNuYllosTFGw/MdqOD1dgKL04/z1pMqY9H3+MPaK9pxWVz0l7VRbqQpNXWwbD/IiVZ
      wqyzsNE1QCDtLTc0Sth0VXTYe5StUiGFRqWlxdZGppzkXmdqwKAxsrV2JwuxGWS5xB0b7mch
      NouMzOjSIrF0svx5ZGTkSucUIJ3PMOweI5gKM+aZ4p3FK4RSEUKpCD84/xMWQyusx/y0upoU
      aUJSYeTrNDrmA0vkyzqehJikIBVZLacWhtMRmp2NLASWlTSWTIykmCJflhysRr28PvM2l1fG
      WA6vlrdIReaDyzfc6btrO8vxpBKnNh8nL+XJFkSm/fO8OvUmQ8tXEQsiu9u3ks5l2NzUx3fP
      fJ/1uA+xkOPq6jUe3HU3gWQYg0bP/dtP0WRvYNI7S7urFa1GW/l9GpW6wt25PgxaA0VJgXzZ
      DFaSYqrS5zBo9Ozu2IZaUHPH5uM8dfWlitYokAyxGHJXSrmyLCtyifIBu6u2ncsro4SSYTKF
      LJPrSsTqjtbN3LnlBD8ffo50LkN/Yw+z/kWuuEepsVajFlQYtHoGGnuZDy4hySV2t2/l/MLQ
      e96znn84p+Q3tLqaSIhJ1mM+wukoN208+O4EuB56HRJvNLX85xEUvXgjAa56Rm543Kg1sa/9
      AMsRxQCvVqmJZWMshhcIpPwshhfI5NPsbTtAnbWOfR370Zs1OI3VrKfceNMe1Co1jZYWssUM
      deYG/BkfiXwcu8FJrbmBdCGFO7FEIOMr+4AtqAQ1slzCorURzPpRCSqCmQB6tZ4d9ft4c/U0
      MiWchmp0GjWrQSV5vKGqjq6aDjzl7q5WrWWgsZdwOkpRkmh1NStOK2BPx3YuLb/7eUfXJplY
      nyFXzDPtm+eerbcRzyboqe2kr6GHdD6Lw1xVITsLCBjK7M5QKkKdrYZoRjloHus9wPiastI4
      zXb6GrorJpPbBo5xzaOoL3VqbYVKB7CjbTOvTL5BJp/FG/PzlVs/y5WVMTpr2hj3TBHLxplY
      nyGQCFXu6iVZZm+Hooq8ddMxrq1PsxBc5q4rPFb1AAAgAElEQVTBkzx+8IPIMqRyimbq7sFb
      WImsUWW0EsskcJrtbG/ZxGDLANmCyIWlK7gjHra1bGJjQze1VhfPj53GE/dxfvEyFoO5MgEa
      7PV01bZXpMoAnz76Ee4aPMmVlTFyxTxdNe2cHDjKxcUrlGSZglTkUPdeqoxW1mN+BlsGiGUT
      XFkZrRyQNzVtZNwzhU6t4cN7H8CgMfDyxOv01G0gJaYYaNyIw2yvsJVCqQgqQVW56R3s2v3u
      BBClDKPhS7/14gdlaRSLIlNlWez10V3Ty6cPfo49bfvY236AYCpAMHUjPVoqSbTYW/jdI1/E
      arJwYf0cqUKCYqlQ4fYX5YISSeS/SJOlhUJJwaprBA35Uh6nsZpN1YN4U2vIyITEAGIxi1Vv
      o9ZUr1R+BBVqQY0kF1lOLBDM+tFrDOgNAg9uv4/lwDoLoRXWYl566zbwgV33YNIZWQytsLt9
      G82OBix6E3ZjFZF0FJ1G6SjHs0lMOiN99d0VWQQoN49h9zjL4VVqrdVE0lHmAkt0VLciALXW
      aj5x+MPlDqmZB3fdzYGuXVRbnBSkIns6thPPJrGbqnj84AfJSwVWIx70Wj0n+g6XD6WbuWPL
      CV689jrjnikSYopQKoKMjEFrYMa/wEpkjVwxR5OjgZSY5kTfEVQqVUWaoBJU1NpcuCPrhFIR
      pnwKyDeYDHNm+hzn5i/S39CD1WChu64DXzzAzvZBSrLiPvvx5acYdo9j0r8bU9Tf0MO+zp1E
      M7FKRUgqSTy4426cZgcDjb387k0fpc5Wy9DKVaoMVqwGC9UWJ1dXrzG6NklCTGI2mPn4oQ9y
      YWmYdC5Dva2WtZiXZ8deJZZNcKLvCAatvmKg73C10Fu3gXHPNHZTFXdsOUGzo5Fr6zP81fu/
      xUf2vZ87t5wkm8/yRtkU4zBV8af3fA2AaosSrlKZAP6M578seV4fNqONal0DS5FFlOxVF13V
      Xbw88yKrsVUGm7by0vQLZAq/6geWShInN95GMOMnVVAih2pNDRTlAnaDC7GYJVtMY9ZaMWqN
      iEURh8FZDrCLEstFCGWD1JhqSRVSOAwuOuzdBDJ+luLzdDv6ynpxhRNUooReYyjjFgOsxJa5
      PDtX8SQIgsC37/wyP738NIuhFawGCz11nbw08Tpr5YDn1eg69207hValQa/V0VPXSSyTIFfM
      0VXbzp6ObRU/q81gwW6qIimm+MLxj/P2whC+RJBXp95kV/s23lm8wunpN2lzNXN66k2G3Yrg
      K5qJsRBcYWhllMkyyGklsoZKpWIusFjhaI6VzyVqlZq7B2/BZXGyuamPq6vXyEsFxEKO3z/5
      aQxaA28vXCIhpmh2NNBor8OfUHDm11e262iUaouTWCZeDvo2oVIJPDP6ihI9lM9QbXESTsdw
      h9cQBBW72rdSkkt8YNfdTPlmOTN9DoveTCAZQipJOEzK6jfpneXAhl0Mu8f5u7P/Qr6Yp8XR
      SK6YY9g9Tr2tprLFMmqNPHHlWULpCJ899js8uPNufnr56YqeJ5yOcrRnHxPeGRrt9ezv2oVJ
      Z8SoM6DV6Hj66ktcWlZo2etxP9VmJ5/76dd5a36Ine2DNFbVcfvm49yx+ThHevbyk8tPKWej
      6xMgJAYIit5fuWB/07i/74PsbdvPvvb96DR6Xpx6Dn/Sx0p0iSurl5QwglziV36uzdnBoc4j
      mLRmFmJzrKdWkWUZUcoiyyUarS2UZAlBUGHWWghnAwQyftQqdUXbXyjlEYsikixh09tJ5uOY
      NBZ0ah0alaZ8wScx6yyYtGZkwKqzolPrqDbUshoIV5bnjfVdaNQailKRNlcL6Vya84uXMeqM
      5CWFiS8g4I0HmA0sEE5HmfbOc//2U1gNFuYCS+xqG6TKaEOlUvH12z/PnVtOcHb2HaZ985Xq
      gyzLzPjnyUuFcgOsqVLj7q7toCSXKsjATD6rNOUEAVmWK9wcSS5x15aTZAtZNGo1a1Ev9287
      xaXlqxzq3sOsf5FNTRvZ0tzP3539Iclcmkw+S0Eq4rI4Kluy696Dm3oPsBr1cvPGAzyw405S
      uQx3DZ7kqZEXkeRSeeMkQLkR9u27fh93xMPZ2fNEM7FKH+R6mPd9225nJbLG7o7tjHsmEQs5
      1mJerq5OVPow4XRUcdXZ6wGBOls1m5v6ONl/hLOz55FlmX2dO2i01/Hm3MVK+TJbEHlj7gKZ
      sr+6IBV4ZuxlFkNuDnbtYWN9F2/OXSiDite54h7DE/MhFkSSZZrHhYUrZT/AIlO+OXyJwLuG
      mOvw2P/OMKrNCIJAk70ZWZb5xwv/cMPz4UyY/e0H8cQ9N+i5VYKK2zaeKv9ZlWTIjc5NzEWn
      seqs7KzfxxX/RWRZIp5XDNYRMUx7VRcaQUNHdRdve5TM4WwxS42xthxi51AS3QUVGpWGgqSU
      EkVJxKK1EMz4UAlqijEbry5eRKPScKhrD82OBupsNfzx899FEAS+cfsX+OPnv6toU+Qk29u2
      4E+EEMr/gOtDRmZo5SrhVISkmOKp0ZfQqjUEk2FWo+s4THb0Gh0ui+OGv0uHq5V7tt7G2dnz
      bGvZxIf3vo//+eo/0FhVx2eOPspfv/YD3JE1DFo9vXXbcJiqONi1m7989R/I5rOc2nScuwZP
      llErKcx6E9945s/RqbXctukYLc5GYpk4T448X4lBBUjmUjdYGUEhK7gsTnLFHD8bfg5vPMDV
      1WtIJYlqi7NCqFMcVF7mAktEM/EbQF7Xu9+g9DGeHHmBdD7Dq1NvsLmxj2xB5P7tp/ib1/+Z
      Yu7d13bWtPHz4edIiCk2N/VRkmX+9vUf0FXbzkBDLz8eeoq/f+NHOE12jvcdxmW28/z4mYrV
      VMEwRssGoiJJMcVazFu5YbQ4G3GZnXjKkIYqo40T/YcJJEJ845k/I5SKcKhrD/s7d767AhjU
      RpaTc78RgPXe0WbtwmWoq3z/xsLrxLI3xp9+cMcjbG4YxBNfo1SSqLXW8eiuj7KzZTeCIPC2
      53UCGR9RMczN7bfjMlTjSa2Sl3IYNSZaqzoIZQOV4ItQVhGOXUejiMUMgzU7cRicBDI+4rko
      2WKGYqmIoFKRKaYRC8q2qdHSTDot8YsLrxHLJohm4uxsG+ShXfcSyyZ4e34IlaDicM/eSoo6
      gsBdW25hZHWcQCqMWqW+QTq9r3Mnd2+9BXdknb2d2zk3d5FcMU9RKvKvF3+u0AfUWprtDQRT
      Ecx6U5lovJkfvP0Tzsy8RSAZ4p3FK0z55kiIKa6uXiMhpkjnMhi0BoZWruKLB/jSyU8TzkQ5
      1L2H/7j0JOfmLxJIhsjkM2QLIlKpxEJQSWGPZRNE0jEla7ksr25xNPL12z/PWHm/bTVY+fzN
      jyMIAheWhtGpddiMVjwxLzajlT+47XOEUlGOdO/FnwzgTwSRZbmsLu3DajBTY63mLx/4Q/LF
      PMlcik8dfpRz8xcrku7j/YfZ1NjL7ZtuxmVxMLx6DRUCG+u7MGgNSle4qDj9pnxz5MsRrtUW
      J+Oe6bJgL83jhz7I4e69nJ46d4P1s9XZBAj8zoEP8Nb8RUbXJnCaHTQ7Gvn6qS9wsv8ISyE3
      rc4mOqpbeGniLE6zg6Wwm4JUJJPPMhdYencCqFApe63fEnsEoFcb2Orai1qlLB6CIGDRW7m8
      eqmCQu+r6+e+Le+jw9XJtqbtBNNBClKBolyk3dmBVq0lL+WYjlwjkg3SXDa8rCQW8aU9OI01
      BDI+NCotS/E5pJJErakeSS5h1VoBgRZbOzXGWkYCQzgN1Wyt24VWpSOWi2LRWdGoNISyAdIF
      ZfsgiiUm3MuVzxEXk/zonZ9yYWmYz9/8ccY9k5xfGGJX+zZUKhXdNR18+eSnK5La+qoaxEJO
      ObPYqjFqDaxFvRW84UBDL2a9iWZHQ6VilBLTtDqbyuFvKp4Ze4WJ9ZkKb6feVkukXHXa27mD
      5fAaYkFEEAQMGgPJXEoJGAyucMU9xoXFK9RYXBVI1kcPPMxAQ68CC9AZK1uc7tpOvlBmhgoI
      PLb/QY707COYirAUXuVjBx/GZrTy46GnaLTXc6RnL3P+RWosTr5x6gv84PyPGXGPs611M6vR
      9Rto062uJgLJEEthNyvhNVaj6yyHV9nRtqXC3b/evzg3f5GlkJtQKoxUKvG12z7HK1Nv8vbC
      EH313dy+6TgbG7qVC16WGGweoKGqjskylVolCAQSYf7prX9XwlBUGqRSkfbqVj5/8+MUSgWe
      uPIMvXUbsOjNbGrcSLYgMro2yZkpxYl2S/9RpnzzLIVWSOXSPLjzLkKpCPs6d9zoBxAEAYe+
      mmwxQ6Jw4938+pBLIKZkLq9cZi44i1lnpspgp6mqmf66TSyGFymVJDY1bKHB1ohGpeFbL3+d
      mcAUkUyYxfA8Y96r6IxqXlz8JcVSkXwpj0ljZiI0SqFUoMveQ7aYplAqEBFD6NR67Hq78sct
      KJ3fRksz3tQaS/F5EvkYOUksq0GLuJNLRLIh7HonDeZGiqUivc5+9HotsVSGeDqFzWRlb+dW
      prwLFCWJ/saeCjuzyV6PN+5nMbRCtcXBSsSDO+qhzlaLVqUllokTSUeVvWhZsBXPJvmz+/4H
      +zbs5JcjL+AyOxALOe7eeiudNW1Y9GaueaZJiElsRis2o4U2ZxPfuP0LhFNRWpxNfOWWz9BR
      3cqUb5ZtzQPki3n66ruVSCQxhS8RwGa08oXjH6fd1YJJZ2IusEhDVR0jq+PoNDo6XK1kC1l0
      Gi3uiIekmGIpvMrF5WHMehN//8aPFCfb+gzX1qdZDK0QzybwJgJKcHQhy4m+w/zg7Z+QLYjE
      swm2tW6uXJBWg4UtTf2cX7ysOAVjPmLZRPnO7SCVT7Me89Hf0EOxJBFMhtGo1FxxjxHJxLAa
      LGTyWYLJMCVZ5sLSMEMrVxEEgVObjzO6qsBve+u6KMklbh24icXgCqF0BLVKzd899B1kWSZX
      zHO0dz82g5VLyyMc7zvMpsaN/PCdn+JPBFEJKmb8C+SLeWYDi5zoO8S19RnuGbyVlyZeYy2m
      wLaSYurGRpggCNQZm7BoreSKWYqlAgjKXV+PmedHXubyymUWwvNMByY5u/A6OrWO7poenrr2
      JKPrI+SlPAvheS65L5CXclxZvdFQkxAT1NpqKQoFdGo9G+y9FEp5LHob3faNzEQmygpPNTZd
      FSatiRpTPVExQrqgHFzThRQOg5NqUx0N5iaarK140x6q9HZMWjN15sYyPcKEN71GLBdlLbVM
      e10tXzn2Zfrbm0kTwR9JcGDDLj577DFFolCSeGj3fbw08RpSSVIQJKvXiGcTrITXqLPVsBZT
      7r6ZfJZjvQfIFfJ013VSKpX4xtN/hj8ZQizk+LP7v84D20/x08tP8/z4GbprOzm15Tgj7mt4
      4wEimZiSKTD3DkthN1UmG0+OvMB8cJm1mBeHqYpp/zwT6zMUpAKfPvIo7oiHn115lhZnE5eW
      RlgMrTC6OsEXT3yCWwaO8sbcO6zH/ETSMdaiXhJispyjXGJX+1ZGyl6AWms1R3v2M+tfZENt
      O3313axG1+mp7aS9uoVQKoJJZ6Iklzi/MITL7GBv5w5i5TDwYCpMsSThNNnpqu1AEARFpVvI
      VwIrTvYfYT3up6e2k1g2gU6to8XRSDAZZrC5n4SYqmitSnIJd2SNZC5NPKvYKpfDqyyH17Aa
      FFN/i6ORLc39/ONb/85KZI0p31ylRHqlnBTpK+Nh2pwtFEtFsgURu9HGxeVh8sV8RbIuySXa
      XM18664v/aoUQhAEbDo7LZZO2qxdtNt62GDr58dDP2YlsvLelyLLJSZ817AbHTw9/uQNB16x
      KLIWXyUv5fnP42T37RxoO0IoG8SbVvy6Nl0VxfIyd6j5ZvwZL93OPjxJN+lCipgYJitl6XH2
      YdXZSBVSxHNRBEGFXe/EnVik1aakEibzcWaiE3jTa/Q6Bwhl/UhyEY1sRFeqwmV28b1Xf04g
      GWYxuEK7q5ml0Coz/nmqjDbuHDxJJpdlQ01bxbcKsK11E0thpWpl0OrpqetkObxKSkzxzuKV
      ykG5IBXQabQMNg/wv05/j0w+SzKXKpMPwuSKeUpyiZIsV/a1KoRKKVWWZYxaQ+UCyUsF7t9+
      B8+MvkymkCUpptBrdMSySs/jYNcefjHyAulc5obtikGj58CGXZj1Ju4aPMktA0dJ5TI0VNVy
      sGs3d245wYvXXmM+sMSj+x5kyjfPL4afxxsPcLBrN3aTjYXgigLwLWRZi3kJpiJ84tAjtDmb
      cZkdvLVwiVwxT3dtB63ORuX/YbJVNFFL4VV2tQ3yp/d8jb99/Qd4Yj6Ww8q58L1nqju2nKTW
      Ws3G+i5enjhLOB0llUsTTcfob+xhaHmU16bfotFeR75Y4ETf4Up1SUbm0f0PYtGbSYgpDnTt
      4lNHPsJtAzdRbXFVIAFFqcgnjjxCY1U96VyGheDKb5dDq1UaNCot4XSI/335X37dy5CR8SW9
      v7bkWWutK8drvlsBMOvMtNQ1cn79LI2WZsJiCBUq7AYHM5EJ4rkoM5FJfGkPRo2xXO4sx5Ai
      YNZZyUkiVToHiXwcT8qNJ7WKKGXJl3JkCmnUghpBEGi2tJa3WCa0Kj1vjszxi+EXuLw8RiD5
      rnE/nk1wfvEyBanItG+eOf8Ss4EFilIRW3nZbnM10+pswmawcNPGg3xg1z3801v/TjQTIyGm
      kOE9PmiZVkdzJftYr9Hx0O57iWeT1FpdOM0ONtS0caLvsDKZNHpu2niQa+sz5CXF5H/vttsV
      hWYhj1VvoSRLVFtcaNXacse5m1prNSsRD2/OXahsMa6jFgGqLQ6Fkxle5ZXJs/Q1dPPc2KtM
      eGd4depNQGDYPabQIxJ+VsLv9oGWQ24e2n0vU945vn7q85h0JqZ9czTbG3hj7jzj69M4TFWs
      x/3YDBb8iRBDK1cZbB4A5Mo5BZTV8uHd9/LyxFkSYhKtWsvDu+9jNrBAqSRhM1pJikqsUmdN
      G1fLWv7r11e2IJLJZys8o0Z7HfduvY2kmEIs5tnS1Mf7d95Jh6uVX159iWH3GNc8M3zs4MNo
      1BreXrhEoVzmbqiqwWmy88urL954CP5tYz3u4ez8md/4fI25BrEg3gC8AjjadTN39t/NUniR
      XDGPUWfigzseob6qnnQhhd3gJCwGcRpc6NVKs6re3FTW+WgUyXMhgV3voNc5gFqlxqQ1k5NE
      0sUUNn0VyXyCRksLnVXd1JjqWE+56Xb24U15cBpdeFMetGodLdZOzk1dJZPPUm1x0eJUDnNG
      rZEmRwPZvEg2L9Je3VIOsxOxGSy0u1rI5rN01Xbw4sRreGI+PrDrbrY09fFMWfosIHC4Z2+5
      WlKivbqVlcgaL0+exZ8I8Ud3fJHbN91MLBtnNrDEl05+iu+d+1fenh9ia8sA4+vTvDV/ieN9
      hzjWe4CO6lZeuHaakizzuZs+ysXlYcY905h0Rr55x+/xv07/A1fXJohnk2XKghI6rhIE9nbs
      JJ5N0Ops5mDXbi4sKehzqSThjngqjjAZma3NAzTY6yhIBfZ37mLC+24wiEatZWh5hEgmRiyT
      IJyK0Opq4rH9D/Lc+OlKdzghJjned5hxzxR5qUCV0Up33YaK/IDyjevc/CW6azs42L2HVC7D
      W/MXERB4/NAHFTtnYJFIOspCcBmLwVwpt5p1Rv7k7q8qSJdinscPfpClkJv/78w/4Yl5+fih
      D/HG7Dv8/Mpz+BLByoqdyKUY80zxz2//mEKxwH3bb2faN8/bC0NcXhmlxuLCrDP99yaAVq3l
      xannbtjivHcc6jzM7tY9TAUmK2Ww3pqNPLLrMdqc7Wxt2s5UYIJIJsyo5yrJTIq9rQe4FhpG
      LIqATKaQVmr6BidqlZr2qk5abB3IlCiUCqQKCcxaC1cDQ7RY2xClLMvxeY40H0eUshg1ZlKF
      JGvJFQwaI2pBjU6tp9asGO4zxRRNzloarS1k8iIalYaHdt3DjtbNXFkZ4zNHH0UqlViL+VCr
      VBzs2s3+DbsUIVY+U4nYUavUJMUkPyl3KfsauumqbefcnPIP/ZuH/oRbB47xxJVnkUqSQrmr
      30CLs5Gv/vJPWQq5kcs5t4qMQYc3HihLok1o1GoSYqqSaXtgw+5yeTNOX0M3J/qP8NzYq+SL
      BSx6E+n31PdNOhN/8cA3mAso0FqNWqPo48vNvPu23UZKzBDJxDDrTXS4WqixuhhZvcbEupLW
      qBIEBEHFLQNHKZVKBFNhbEYrw6vj+OIB5gJL3LnlOBa9WTmcxwOsx3yY9SZ2tg0SzcQJpkI4
      TFXkinma7Er1bi3mxZsI8NEDD/HTy0+TK+YpSEVCqUgFoKtcaxq+fffvo1GpCaej1FhdtLta
      mPUvMuaZZMo7p2wl0xGkkkQwFWYlvKZYV10t5KU8YjGHy2RnNrBYsUMuBJYRCyJS2STT5Kgn
      nk3+9yaATq0jko3cwPO/PoxaE4/v/RSbGwcZbNxGNBNBr9Ez2LSNxqpmTDoT3zv/90z6r5Xf
      jIQv6aVUkjGYdOQlJb1dr9ZTb25Eq9ISzgbRq40EswE8KTdqlQarropSSaKtqhNf2oNebWBn
      /T6CGb/i+inEsWitygQSNGhUGpKFOBpBiyflVsq1Rj3+lJ9L85P4E0Fi2SQj7nFWo+vMBRRP
      azybIJPPct+2Uxzs2sPFpWEKUoGeuk6qjDZu2niAVybfIJaJk85n2L9hF5ubNvJWuX+wFl3n
      3y4+iSzLCALYTVUMNPRQQuaZ0VeQZCXA4mjPfiLpKFaDBZ1Gx4m+w6jVal689hr7O3eiVWuU
      ZprZwUf2vQ+VoCJRVpDes/VWLi+PolVrK8EXgiBw79bbkEoSPzj/E1K5NN64n08eeYRqi4ve
      +i7OTL+FTqPjA7vuYTXqJZFN4k+GWI2uI8klaqwufvjoX3FpeYSLS8Ps37CLA1270Gl0tDia
      8CWUQO3VyDopMY1Zb6JYkpgLLmHVKxKQS8sjBJIhXBYHUqlEQkzRaK8nlUvTXdfJvs4dnJ4+
      VxGkdVa38b4dd3B19RolWWZ3x3Y+sOsejFoDz469SiQd49z8RXxxxejSVduheKJXFZJ0d20n
      uUJe2Z4aLZh0Jj51+BFanE0MLY0oyA0UQ9bvnfgE0755TvQd4WpZAv7fmgCCIDBQv5lwOsRa
      fLXidtJr9Hxi/2foqeklW8jyvXf+jnHvKHExxpR/kjfmX6PKUMVrc6d/JWMgkY2zp2MvRVmi
      wdJUkTYIqKgzN7AQm8VucBIRw9j1DtKFFFZdFWIxg0lrJpwNUpSLKAssJAtJMsUMS7E57AYH
      8VyUamMtyXycdCFJrblByQMLL7GwrnQIBxp62NE6yFxgkY31XYTTUcSyLziaifOjd57AYbbz
      sYMP88SVZ5XMrPy7OBMAl8XBUsiNXqPjfTvu5PLKVSKZGG2uZv7gts8RTcf42fBzDLvH+cSh
      D5Mt5tjbuaPicFoOrxLNxLhp4wEe2fd+JEmqmNCvrc9wbv4iy+E1RtcmmQsscnFpmDn/Imsx
      L8lcig/vfYDd7VvxxHwshdysxdaVrRiKfPnU5uPc1HuAdD7Da9NKPJCCL1wklIrQ7mqprEC7
      2rdy55aT/MfQL0mKKUw6A+cXLiu+iHyWRDalhH7ns9Raq8mWCQ9iIUepJKHX6CpbLJ1Gp+BN
      yiXLTx5+hOfHXuX58TPs7diOIAjUWJzs7dhOX2M3D+26lysrY4x7Jjk7+w4rYc8N54hWZxPH
      eg8w419gLebl8zc/zqWlEaZ8c+W0Sj0qlYq1qJcXr73G6NoEgqCqnMvu2Xob7a4Wnh8/QyAZ
      rEyy/zYaUaPSsLNlN3vb91OUCqzElinJJWaDM7TYWzi78BrvLL91w88US0UmvOOVr987zHoz
      zdVN5UTJOIvxWWJihO31e0jkYjiN1SxEZ+hzbSZXyiEIiidhNjpFLBchXUgRyYYwaAxlfIoR
      h8FJi62NFmsb2WIWX2Ydo9ZMoZwHMBedxmGx0FjVQCAap726lTvL0oJLyyM02utwWZzsbt9a
      EaSF01EGGnuZXJ+lKBW5e/AWLAYz3ngAp9mOUWugoaqOS8tX2dW+lZP9R0nnMnjj/grIKZZN
      IEkSvmSQifVpXitTDa5Tz0Bp+rQ6mzi/OMSl5RFG1yaptVYTSkXYWNfFSkRJqZSBne2DhFJR
      qi0Ofu/4J5DkEk+PvkQqlyaYjPC+nXfRaK8jncvw5MgLPDnyAoPNA5TkEipBxYEuZVtVY3Xh
      sjjYWN9Fq7OJ+eAy8UyC+7ef4srKGHs6t7MW9ZLKpdlY3w0CJMQURp2RzupWpn0L2IwWdrVv
      RZJL3LHlBEuhFTY3beQ79/4BU745qs3OcpXNzYWlYXLFPHs6tvHNO36PZ8de5fT0OZ4be5XF
      kJtp3yzFkkQsE8dqtNzACnWYqri0cpV4Nsl63M+l5RFSOaXzXyqV0Gl0CIJi4EnnlccPdu3B
      YjATTil9m9XoOmsxL/ling/teYAT/Uf+72JSBUFAr9HzH8P/SjqfKp/Qs8yH53BHV8j+OvWn
      LFFrqSOZS97w+M09JwkXFF9qXspj1BiRBZlux0aGfOeJ5sI0WVvxZdYxaxVinEalRSNocBhc
      ime4qpNgxo9Nb8efUe4W8VyU6fA1rPoqAhkfJq2ZQqlACRmdWk9b1QbemBhhPaocmF6aeJ1I
      JkZBKmDUGvDEvHhiPjY2dLMe81FltPKVWz5LX2M3M755aqwuPnP0MZZDbsVhFVhClmU6a1pZ
      CrmptVZzy8AxJZBCTPK7N30MtUpNX0M3l8u5wcoNQcJutJHOZ9CptcSyCZ4ceQGVoCJTENnZ
      Nshf3v+HTPnmUatUbG/bQiQdY3NTH390x5cw6oxMrE9z2T2GUavn6upExVr55ZOf5vZNN/HD
      80+QK+aRZRl/Iqg0veIBpnxzfOboY+ztUMIzGqrqWAq5WQ67mfTOMeaZxBv3M+6ZZk/HNjqr
      2ypG9BN9h/ns0cc4M32uglTZ2jygIL9/LmEAACAASURBVBe9syyG3CTFFPFskotLw9Tbajm/
      oDTOeuu70Gm0fObIo0z75vnp5acr14MvEaDKZCNbEDHpjHz7ri9jM1hYCimoxiM9+yrlTFBK
      wx/acz/JXJreug2UZAl/IoROrSWTz6IWVDTZ6xlZHacky8SycZJiig/vfR+ZfJYnLj/NixOv
      /d8HZadyKZ4a/8UNYqvrmbW/jvwMcP/gg+g1evxJH7WWWnZ37CGnSVJvaaIkS6QLKTbXbMed
      WMSdWKLH0U+NqY5iqYjd4CBbzOAy1ig6H0HFppqtCnQr6ydcjlQqySWs+ioyxQzZYganoZrO
      qi6yxQwqQSAiKjKBZnMHP79wprI0FksSdw/eQrOjgTu3nGBifRadRsdXbvkMDrOd5bDSoDm/
      cJkp3xxT3jnSuQyZgsgL104z0NhLUkxxYWkYb9zPhcVhJr0z+BNBQqkIo55JcoU8l1dGcVoc
      FS9xtdnBzRsPEU3H+OSRR6i1VTMfWMag1ZPOZQilIqRyaV6ePIs74mFDTRuBZJj1mBcE+P65
      fyOeTSihFeE1PnbwYaxll9bPrjzLW/NDqFSqiuq1ymitCNykkkQ4FeH58dNEM3HmA0sYtHqK
      JYmu2g485WRLUEq7i6EVBdArplCr1CyElklkk2jUyllr3DNFSS5h0OrLSTIufPFAOT85yWeO
      Pcr5hcuY9UZWI+vs6thKQkxzdvZ85RrRabT01HWyo22QpJhmYn2azpo2rrjHONyzj1Obj/Pc
      2OmKIE5ftqgCrITXuGnjQbprO1gILtNd20FHdSvt1S2MvacaVZCKfObYYzwz9nK5qPFfUCF+
      3dCqtSyG5/Em3pVOb2/eSbujg5Xo0q+83qg1UpAKDHuUu4BRa+RozzG8mTXC2SDxXIyH+3+H
      y77zgMCOur34MuuEskEMWuP/4ezNo+Q6y3PfX83z0NXzPKtn9SC1WrNkSZZkeZBHjMGATRhN
      EhNIIAQOISFZOZysHG5yF/ccyAUHArENGIwxtizZ1mSN3Rq61fNYPdXQNc/z3vePXS5JwTnr
      JvvPKlV3L9X+vv1+7/s8vwedQo+YRw1GM2HCqSAzgck88jxaSH5P59I0WlqwaoqoMFQhiDkU
      chUGlRF33IVWqcOmKyWWieDyBwuIRIVMTjARZnx9iosLIww1DVBpKeeHF14kmU2x6Flmxj2f
      d7hJn7EZrEw5Z4nmwa/BROguoVZWyOGNSUCmaCqWN9eYqbJW0FRSx6GOvQC8N3+F+pJapl0L
      2L2r7Gvdztj6FMlsinQugyfqY6C2J///qOVW/r3x9Zm7BozpXIZj3QeoLqqUOkT5z+5sHiSe
      iiOXy9nZvK1Qr2uUatorWlnw2gs/Y2fzIHXF1ThDG6gUKhQKBUaNgc3VHSz71wtDK5vBSndV
      OzdWbpHJZZHJJCtpOBllW0M/aoWKwcY+9rQM4Yv60ajUGFQ6ri7fIBQP88TWh/jB+Z9ydvYS
      9cW1ZHMZqizlPDl4nEsL16izVXHVfgNXeKOwm4uiFMbRVt7MpcURKsxlbK7pYHZjiXg6SVfV
      Jt6Zeo8Fj52hxgEuLV6TqBeCtMm9r4SttVVRX1zDWsBJMBHGoNb95xeAXCanv2YrepWeVDaF
      XCan1FiKzVBMKBEkmr4jMFqp5eGex3hn7mThtXgmjlFl5tGuD+GKOQing0z5bkm5wOkg/WXb
      sGisWDXSoMseXqBIW8xScI5IJszWip0UaW1k82DcapMUiCEi4k1IO5xVa5OmxMiYD04XkmQa
      zM3EMzHEnBwEFfd27GNzTWc+01fCliz5Vthc3cGKfw21QkWxoUhKKCmpQ6NUc7hzP75oAKve
      QkNxLUq5glQmTSjfxpMBe1t34Ai5CmrM1vImxh3TrAUcbK7ppL+umx9e+DeSWSnuZ35jCVd4
      g2A8dJeVsLaoGn8swHpQykgzagySg6xpgHjqdlrL1rpeXrnxO64tjyGXy8nksshlUuif3bdK
      Kptmxi1h3ftrurDqrVj0JkKJCJlchjJzKR8deoyfXP4FnqiPSksZP372n1AplLw4/CrH+44Q
      zjNB/bEgo6sTmLQGbEZrXsWZpcJSxrRrDkfIxbhjGoNGRzKbYsa9wIp/nUPte/BEfWhUaiYc
      M6SzaUoMRXlMjEiFRXKM6dQ62vOl0pNbj/PmxLvYfatcXrzOmGMKV3iDcDJCf20P9bYa+uu6
      aS9vYWRF6or1VHcUtEudlZsQENjeuIUHNt/LsP0mJyZOE03F+NzejzPjXvjPLwAgH1Yh8u7c
      KQIJP2vBVWY2ppHJ5NzbdoT2sg621m7jE4OfpN7WyFvTb9w1Q+gs76KxpJFx700CST/pXJIy
      QyUymYyskOXGxjDhdAi1XINepcceWkQlV9Je3MNSaA6VXIkMGXqVAZVCRTDpw5f0EsmEqTLV
      Me2fYGfVPryJDXRKPRaNDa8nhdMTZcXv4NToVQKxEH9y6DMUG4p4a/JM4W9TyBV4Ij58sQDh
      RJRnd36Y3916m3mPnVgqwTM7P8SUa5YdTVtZD7oYXr5JPJPkgZ5DknklEWEj6kWv0jFQ18NQ
      Yz/zG0voVFpyQk4qmVLRArmswlzGAz2HcEe8qJVqTFojNUVV3Nuxl87KTZycPIMgCkRSMf7n
      E9/CFwtwdvYSWqWGrxz5Ao/2H+PJrcfz/uQFlHIFB9p384X9z5DOZQo3A8CeliGurYwx4ZiR
      zi6IfH7fJ1jyruIOb9Bf20NOyLGrZRs/vvRzFr0rDNT1cHXpBpFUjB1NWxlevkkmJ52pmool
      ip1SoaTOJul83m92lJlKsejMLHlXqLSUk8ykWPKtsBHx0VnZSkNxHdubtjC8PEpWyDLU2M+M
      e4FtDf14Y34WPPa8pkkyFMlkMnJCtvDULdJbGVkeZXx9ikcHjuXVoG18bt/HEQSBLfU9HO87
      ym9unuBw5z6aSur59c03JeRPLosz7GE96PyvLYB0Ls0/nPnO7yXBpHNSyMMf7n6ejvJOdCod
      WTFLOpti0b8IiJQYStjatBWzxsyI6xIGpUR8M6pNpIU0y+EFKg3VVBqlDpEgiviTXrRKPTqV
      HnfciV5poM7SiEapQRBzRDNRWovaUclV5IQsoiiykXCxGJqjxtxALJbjxffeYso5j0KQZMYq
      pQqdSssV+w0iqahkokHGYGM/e1qGmHHP01beTJm5hOE8XS0rZLm4MMy8x87Y2iQlJhuOoItS
      UzF/98hfcNV+g2X/egGGO9Q4wHP7nmHZv14ItT43d5kZ1wLbGvulcqK6nfaKVnQqLWfnLrER
      8WLRmSQ4rHc13+aThGeDDX0M228WoLq9NR28cPFlXh75DTaDNZ8ZnOCBnkMF84o/HiSVSdFV
      1cbn9n6MFy69XJCtZ3JZlnwrrAbWsfvWON53lPt7DjHunOb0zAU2Il7kMjnL/jXS2TSJdAKt
      SkM0Fac9zyuNpmLE0nGcoQ16aztJZpJYdRbUShWiKPL00GN8avdH0Ku1TDpnserNzLoXCSXD
      fHbvx8jmcnx6z0eRy+W4I17aK1p4bewkmVyWYCJMX20XpaYS/uTgp9la31vwWj/afx9vTZ4h
      Jwqs+B1cXBzm1vq0xAWdvYBVb+Hpocew6Mz847v/L5eXrlFmKiGchwLvaRli9P9PTOoHXauB
      ZV4d/9UHvhdOhRmq38G8d45/Ov8/eWX05zjCDhqKGvn44LMMNW3nDfsrbMTdaJQaNEotRrWZ
      eCaOVWNDJpNRa2oglokQSgVQy9WUG6owqI1E0iFaizpYDi+QyEpAXZ3SgFlt4Zr7MuWGKvxJ
      L0XaYgQEoukoxdoSktkUk6vLZHNZjnbv5/P7nqGvRgqFfh9D8sWDn2HCOcOSdwVBFHik/xhj
      61Oks2lCiQipbIr64ho2V3ew6F2h2GDlvz3wJWZd88hlcnJijvfmr941mVXKFchkcqbd88TT
      SRxBl1QyCFm+dO9n8ceC/PL667w9fY5l/3ph/J/JZTkxfpph+00+PHg8H6o3yy+vv06drZo9
      Lds53LWPf37vZzhDkm93fsPOUGM/u5oHWfAu89LIb7jlmOZjQ49j0BhY9q8y414gEA/dEaKh
      4LH+Y8x5lig12ri2PMqLw6+SyqTICjlKjTaO9x3lxuo4giDwcP9R/vKBL5PMpFjMm01kMgqi
      vId7j7Jv0w52NG3hpeFXWQ86KTZIupsbK7d4bv8z3Nd1gNOzF7HqLbw78x4jy6NYdGZevPoq
      awEHyYxkBX3fV5DKprinbRcDdZvRqjRcXByhzFxCV1UbmVyGJwYewB8PsZL3FguCwI7mrSQz
      KXQqLefmLzPhmCGaivGlez9LOBHFojfzaP8xPFH/f20BeKIbnFl49wPfkwHFhmJ+dOWfCSaD
      hTanLy5Fbh7edB/JbBJnbI1wOky9uYmskMGsttJW3EksHSWalW7+nJgjkY1LBu5sHJVcTU7M
      0lHcy0p4iRJ9GWq5mmRWAnepFCoUMoU0FJHJMapM0oE65WRv6w70ChPvTl/gt2OnmNtYLBxq
      ZUgTyStL16WnR0QyjztDbpwhN/d27COVTfGN+74ojdeFHH9x7Hl+N3aKc/NXCMRDjNhvSsiN
      /GHxfYLbb8dOsuJfJ5wM01fbTSgRobG4jqNd9/DytdcI5hWfNkMRGqUatULFE1sewBPxSgF8
      7XtoLKnj3NxlwskolZZyDnbsRqvU3oX5RoQDHbt5pP8+zs9dZi0gNSkEUeDS4jUiySirAQe9
      1Z0UG4swaQ30VHdwdu4ScpmCbx//CufmLkshEoYittb34o8HOT93hU3lTWxvHOCN8XdxhzeY
      cM6w6F3GFwvwzfu/RCwdx6DWc2LiNGfnLnFhYRiTxkixsYh4OsGEYybPOF3jQPseHCEXx3oO
      cn35FrF0nBprJZXWMkLxMHtah9Crdexu3ca2hn6JRzp/ldMzF5j32LmxOs6Sd4VUJi0Bf5Uq
      7u3Yw+XFa8jys5RLi9eY21jk5OQZam1VGLVGWkob6alu54WLL7PiX+fK0g1yQu6/tgA0Si1n
      F06TuoP9+f5VpLPhiW4QSAR+7z1XxMnW2m3sqNlDPBtjI+6k0dLCpG+MYDpAOpcikYuTzWUx
      qk1SEJ/KgEVdhFwmw6g2sRZZxpNwU2msBlHMT5hFlAplXlmpo8pYi05pwJ+UKAUymQyDRs8b
      1y8ST0mqwnAiTENJHTq1DqNGT2t5IwsbdinjylTCYH0fq4F1am3VCIJAKBnm7Owlrq/cIhAP
      4QptMOmcu6v701Ranw96SPOJHU+gVqqYds0XbsSPDD7CN+//E87OXeJfL/+SnU1bsftW0at1
      PD30GO6IF3fYw5Rrnse3PMiRrv38j5P/D6+NnqC/tofjfUdYCzj58eVfcG3lFhadsVATy2Qy
      ZjYW+cW135LIJKUQvoZ+drds4+wdgRA2gwVfzF9oma4FnCSzKZyhDeqLayk3l/LXD/0ZnqiP
      U1PnyOQyuMMefLFAgT+6f9NO5jeWqLJWUGEuLZw13nfP5YQcx/uO8Ll9n2DZt1rAptcWVXN+
      /grXVsYYd8ww2NBHpaWctaCDSeccx7oPcmt9miv266z41vHfQbqWhnEteKN+ivQWoqk460EX
      fbVd9NV2M7x8k3pbDTkhV+APSeCzDF1VbVxYuMpawIVZK+XD/d0jf8GZuUv/tQWgUqgwqPWM
      OW5Tl0E6HD+99RMMr1z+QB8AQGvJJhpsjVg0RSwEZ5n0jbLJ1kWR1ka7rZsrzvNE0xEONRxj
      LjBNi7WNYdcFBsq3E06HiGaieRK0kG+r6skIaQwqI87YOkUaG2tRO5F0SArKS7jZWb2fcDLE
      yNzs7cxfmYzn9j/DtoZ+Xr91itHVSb546DPsb9uBVqXh7elzVFjKqbSUc2t9in988tu8PPJa
      4ZCXzWWpKarEGbptIdWrdUy55gnEg5QYiznUsYczMxfJCtmCbud9Jr9Ro88f+nN87egfMdQ4
      wA/O/7TQAnWHPZSZSgr2SkEUpKjP9amC0+rxLQ+wHnTSW9NViEIVRIFYOs6Hth7HFdqQbnaN
      EV/UT6W1nLaKFgnFkg+qXvatoVGq+fSep/MS4UXsvjW6KjcVQvCUcgVfvvfzuEIblJlLONS+
      l3Quw3rQxampc5LPWGPAf4dEJJvL8sKFl1jxr3NP2y4yuSx7W4cIxEM4gi5sBmuhy3Z56RqZ
      XBa7b40qawXrQRcVljJ2Nm/lxorULFArVdzXfYAdTVsZbOgrnBPsvhVurk5ITNKQ5FC7M9fZ
      oDEwtjZJMpvCHfZwoG0303mAsC8W+M8vgJyQ472lc9xYv44MGVZdEWatmabiZp7oe4pt9UNc
      sl8gnPzgXIF7Nx3BrDPz/dHvUqQtlgzw5gauua8wF5hkT81BTGozyWySRC5OKpdiU1EnkXSI
      aCaMWq5BpVBTbaxDIVfiS3ox5OUO1cY6krkkWoW2MDdQyJUksgmarC3E03GWPdLuoJDJWfSu
      sOhdxh8NopDLQSah9G6tT+MIuoin43xq10cQgZur48RSUr9bhoyOytaCOUMuk9NX2000GcMd
      kchzC147sVSM1rImHhs4xoRjhgWPnRX/eh5b2CmVNYkIzpCbCks5lxZHCueACnMZu1uGmHDM
      oFGq0ao1vDZ6ksMd+6gtquJI135+fPkXBGIh6ktqCtZMaW3LpO9p/gqz7kX2b9qJKAr86b2f
      51DHHm6sjrOrZZBvHPuiBM2SydCpNAXp9EZU6uxUWMoIJyM8NnA/j/TfxyvXf8e0a54zs5fo
      re3kxookcEykkzwycIwpp4SgHKjtYVfLNoaXb4JMRqWljAnnDNdXbmHRmvjc3o8z5ZxjwWtn
      U3lzQaogCQMlQt9Tgw8TSIToqmpDqVCSEwTemZbw8DPuBeTISOcy7GoexKq3FJ4yz+78cGFo
      Z9aZ+fOjf4Q36scRclFjrWQ96MIb8xNORuiqavvPLQBRFHln7hQ/vPJ91kNrhJMhTFoTX97/
      VZYDS7wz+xaXly9SbqpgPfT7kC29So9Za2HRv0CttQ5nbBVF3ryeFTIIQo6WonYEUWQxNItZ
      bSWdS+OMrbEUmqPB0oJJYyadS+GOOVgMzVNmqECr1LEaWSaeiaFXGQinw4TTIYq0xQSTPvQq
      PWqFmjAOWivrONZ1mI1wQBKixYJ859Gv01PTzovDrzK6NsnDfUcJxEMIokh7RQtXlq4zvDxK
      bVE1FZYyjnTtZ2x9ipHlURqKa9GqtFKUj5At9Oa1KimvQK1Us7mmk9/dertQr+dEAbVSVXBv
      mXWSg+qh3iPEUjFqbdUYNXp+euUVys2l/OUDX2Yt4KDaWokInJ29VBC8pXISiUIhV1BqKkat
      UNNcWs9Htz3KuGOaMnMps+5FFvL+37enzzPpnCUYD5HOZnhp5FU8+fT11rJGEukku1u24Qi6
      8Ub9bES8TDhnSWVSXLFfzzvZBIYaB3CHPcRTCYxaAzdXx8nkMjzcd5TBhr4C3PeTOz/Mycmz
      hcUZTkj+gddvnSKVTeON+jFqDFh0ZoxaQ/6gHuS9+WEuLAyjU2lRK1TMuBcK3atYKl7IOMuJ
      AptrOmiwSXqjTRXNfH7vJ7hqv0lWyFFiLOJYzyHOzV2mrbyZ7qp2Jhwz6FRant354f/8E+An
      wz/Cd0cMajgZxu5b5NraMPFMnEAiQCgRZGfjbhyh9YJkothQQiQZZsYzxZR7giXPElW2CtQK
      NY3WFhQyJSqFmgnvKFaNFbVCQyaXZik0h0wmo9XWgQishO2oFSoEUaDKVEO1oRZBFDFrLCjl
      SrRKLVatTUqdVBlRylUksnGWI0t02vpwbcRY9jrQq3X4ogHJ8JJJ4btDePWH+58llAgzsjzK
      pcVrWLSmAu1t0bvMkneV6jxprc5WzejaJIlMkoHaHnKigE1vRa1UU2OtJJaO8/OR1zBo9IUx
      vkwm41j3QbQqLVvre/nWg1/mxuo4p6cvsL9tF//90b8oJNKLwLm5y0w4Z6kwl3JzbZxIKoYv
      FuCrR/+QSnMZ5+evEEyEqbKUI5PJmXLOcXFxhL7abkREam3VJNJJ6mzVBXhUJBUrtDEBFHI5
      f//YN5lyzTG6NsnW+l4mnXMFkJeISFtFC46giyK9hesrYwRiQZpL6znadQ/D9psIoog36ufC
      wjDL/jVKDEUc7zvKuGOG1cD7EU8lrAelrN5oKk6R3oLdt0ooEWZzdQfhRJT9bTvJ5KfZ5eZS
      DrRLh9zcHeX2asAhwYpDbq4tj5HIJCWo8dokK4H1gm9ASpOfxRX2sBpw8LGhxxGBhpI6rHrz
      /3kBZIQ0a9El1mKLBFJeFHIlN9dushF1F/6NDBmpXJp07vaBOJ1L8+H+j/J475N0lndxf+dD
      FBtKGHXcBsymsim21ewkK0sTTYcp0hVjVJso0UlRSdP+cTRKLelcCqPajEquZD26QigVICNk
      sWqlYDRXzMFSaA6dUodMJmcxOEcsEyWeiTJQPoQn4SaSDpHMJhiZXuLc9HWWfetEk3G+99Tf
      0VRSx/fOvMD8xhImrcTGOTV1jqyQLYRL7Gwe5ED7LuLpBCv+dWwGK701XVRZK/ib419FrdRI
      CyQVZdGzTG9NR6En3VRSh1lnQq/WIZfJMWkNtJQ2cHrmAiv+dTxRLwN1Pfzb1V8TzySIpmNE
      EpLHuLaoir85/pU8c99FS5k0+9iIeLHqLFRbylkLOgvpkzqVjiXfCsgkeURvTRc5IceZ2YtU
      WSt4avARTk6eLTyJ7us+QENxDcG45CArMdr45fXXyeQJ0FX5tHuA+3sO0V7ezIJnhcOd+yQ9
      vkwqQ4507ee9+auIiPRUt1NmKiWeTpDMJPnx5Z+jUWq4t2Mf6VyGmqJKAokwM+4FkpkUNUVV
      pLJpKi1l/O3Df065uZTTMxfoq+1CEATG1qd4b/4KOVFAq9SgkCs41n2QuY3FwoYihZSYC1Nk
      i87EUj6+V0Rkd8sQrtAG1dZK6mzV/NvVX7PgsVNvq7lNhvv3VzgdZHjjHInc7S7HfGiSTdWN
      LPjmiael1/trBpDLFIys3gbrqhRqvDEvb069jifqodxUQbmp4vd+R7mxknn3BBqFhnJDFXOB
      aTbiToq0xShlSoq1pRTl7ZLhVIhkNpl3eqko05czH5hBo9BSYajCpLYw5rlGlbE2rx6Ncdlx
      Hl9igwZLC3plgPHobWFUKBEGRPrrumkubUCr0rDqlxSlwUSY/SV1pLJpLDoz781f4Y3xd1DI
      FTw99BhymZyfXP4FMmRsbxwglU2hlCtwBN2SNl2lYbChj1vr03RWbeJHF14qzBb+7N7PFyyN
      AP5YkDn3Igfad3Nl6Tp7W7fzg/M/RUTEpDVSb6vhHx7/S77yyt9wafEaCrmcBzcfps5WzffO
      vIAM6K5qp764hmd2fIg/+MmXCScjyGVy9rVu5+1pKUXFG/Gx6LVjM1gBSV7sjwe5t2MvsXSC
      s7OXWPGvY9FJEokSo40/O/wc3zv7L9j00oL/q9f/gWA8lGd+bmNsbYIt9b2cmDhNd1U7B9p3
      8dPLr5DIJPjLB/+UH5z7KclMimXfKn90zyd5bfQt5tyLNJXW3SWc3NG0hQXPMhcWhnl55DUW
      PPY8fOBuSFtPTQflphK+cex5lrwrjN8BaC4zlZDJa6L8sSAXF0bIiQKdlZt4/uCn2N44wIvD
      r7LgtaNWSkS55tKGD34C5MQcl93vEs9F//1bKFVy9jUepNJYjSvixBPdwJ/w5duNcvQqHf01
      Wzg5fYL10BqRVARXxMlacBWL1lqQTNfaaikushDPRFErNWgUGjxxN0a1CZVchUappdJQTSIb
      ZyEwnd/50wxW7CSWiZHMSYtBq9RKhvhcmkpjNdXGWilWCRnehJtWWydzgWlCqRByUYHD50cE
      Oipb+ci2R1nwLPObmydIZVLsbN6KOyzRz7JCjvbKVg607eL1W28D0hmoSG+lu7qNCwvDqJSS
      WOuN8XdY8NjRqbR88eCneWjzYRpL6jgx8S6CKBBKRMjmslh0Zi4uDrPsXy8Qm9UKFcikMieb
      kzTso2sTZIUstvzvSmXT/PN7PyOVlQZUqUyKezv38e7MBQwaA3KZjEwuw7m5ywRiQRqKa3lu
      /zNMuebYiHjpqGzFrDPxy+uvE08lqC6qQKfScnnpeqEDE0yE0Sg1fP/p/4FRY+Dc3OU89FbP
      9dVbnJ65QENxLZlslkOdezFo9HRVtbEaWOfa8hgbES8P9R7m9OxF4ukEY2sTFOkt2AxFbK7t
      ZHRNYoUmsym2NQ7gDm9g0hqptlZweuYC/liAS4sj9NZ04Qy76a3pJBAPFVSpMqClrJGD7Xto
      q2imSG+RGK4qLYc79+EKbXDLMc3o2iSL3hUOtO9mR9MWzsxc5N3p84wsjzG3sYgvGuDrx77I
      zbVxHEHXBy8AT8KJPTr3ezf/+5dCIeemfYyV4DLpXDo/D5DxzLY/4OODzzLhGmfJv3DXZ7JC
      lm1123l26FMcaDlEVpXglvcGFYaqgnjNl/QyVLkbR3SVUn0561Epk6rKJGHSzWprAYCVzCaJ
      Z6JUGKtJ59KSlCKXIpIOMekbw6KxkhbSJLIxjGoTepWeiiIbm2va2deyG180wK9uvMGse4F5
      zxLxdIIntz7EnpYh3BEvCrmCiwvDeKOBvO5dOstkchlG1yZRK1V8/b7nSecyhZ1IpVDhDLr5
      0cUXmXTOYdQYaClrpNxcyuH8Dfv+Tbm3dTvtFS18dOgxzs5dxhcLkMlJT48/PfwcFZZSVAoV
      //fpH3JhcZicKBQe+SqFkgWPHYNaz3ef+Cs+tPUh3hh/p0CVSGXT+GNBTkycZtm/RiwdL9Tn
      yCCZkabaqwEHBo2eP9j1FJWWMmpt1Uy55sgJWSkYW8xRYS6VUnREga/f9zw6tZaXh39DNBXj
      G/d/kUnnHDPuBVQKJaFEmHAySmfVJnRqHR8efJiOylbenX6PBlstf370D3lr4owkQZAr+Mcn
      v40gCgzbbwLkLZF9OIJudjZvz6uhKwAAIABJREFU5WD7bm6uTiCXybAZisjkMpSabCjlSv70
      lb8mmoxRba3gHx7/SwRRYMI5S091O5WWch4dOMZLw7+53RrNZVHKFTzUewSTzsgbt96RvucP
      WgAbCQee/0NQRjgZ5sLs5btmACIiVZZqttVt5+TMm7+nEwIo0hdxcNNhLtrfY8wxSo4s/RWD
      rEWXkcvkVBvrkMvkOKPrFOtKSOUkJEpGyOCOOdApdZg1FqwaKyIC3oQHg8pIsa6ETC6NRVvE
      SniRjuIeDGoTJrWZRCZGmb5CCt7IJVCqRTLZHK9eewdP1Eex0UZ9cQ3NpfVEUjHeGH+HnJDl
      0uI14ukE60EXn9v7ccw6I5vKm7m5OkE4KcFm9Ro9GoUKf36naiqpY9wxTSaXxR8L8o37/4TX
      Rt/Kw7UihBLhwo7WWFKXT06cQ6vU4In6kMuk6fGZ2Qu4wh58UT/+eFDilrYOEUyE2VTeRInJ
      xo3VcQLxEP113XRXd/DrG28WHFQiEE3HCy3VVDbFse6DTDhnEESBwYZ+vnrkC4iiyOjqBJcW
      R2gubeD07AXJWCOK7GoexBv14wp72NWyjUQmSYnRxvn5K3iiPuJ5BtGEY4aWsgaeP/ApXr72
      GuFkhKK8IT0QD3FxYRi7b5Vl/xrNpQ2cmDid30iyVJjL2Nm0ldE1CaZwX/dBri+PsR5yMete
      xKAxEIgHeXroMUZWxnCGNhixj+IIuaUaXwaBeIhEJsmJidMU6S18bPvj/MvFl3n15glKTcV4
      I360Kg0GtZ7DnfuosJTiDku+Zp1K+8FnAI1C+x/e/CCRpFUKpUSOu/N1lU76coubmXRP/N7n
      Gm1N/PDy97m8fNsIMa9doshWTDAp4e8i6RC9ZVskvo9ciVllJZQKolZoMKpMCGKOZC5ZMM4k
      snHcMQdGtZn1yDImtYW0kMaX9LIWWaazeDM6lYEL62foK9uKM7aGTCk5uDbCPjRKNTqVlvaK
      Fv73uZ8AUk0tz/tJNUp1Pshhgq6q9rtUrXbvKuOOafa2bifnkrQz719ymZwyUzFV1gpW/OuI
      okhDcS2eiI/u6jbmNuyFpMndLUP83SN/QTKT5Ltv/3OBkFBTVMkf7v8kr9z4Ha+PvY1Vb+av
      H/oKt9anmHbNY9IYuLx4nZ+P/JYqSxnu8EYeyXgEo9rAjy5KZ4/aomrmPUtsre+lrbyZX1x7
      nc//7KuUmUoKg72zc5cwaCQptl4jeTh2NG1FEHMEYiHcYQ/fP/+vPLT5SMGs/+rNEwAMGQfy
      YRjt1NmquLEyTjqbZnx9uhDwUWUpxxv1o1aoSOcyKGRy3GEPz/3bn2PSGvlfH/0OiXSygGos
      Mlg5OXlG0kVNnsGkNRJJRlEqFAXPgChK56Q3x98tyFpeuPhyATx2vPcISrmSRDqBRqXhnen3
      Cn7uLXWb2dG05YOfAFqFjpXoAsIdrq87r03WLhSihnnv7TJJrzZg1Vk5u3AajVJDJBUmlr59
      gG60NXG851FevPGzu0BZ3vgGlbZyAinJXpfIJsgIaRRyZQGVYtZY0Cm1NFlbSWWTuOIOEtk4
      OTGHUq7CqDIRSYeJZ+MMlG/jivM8GSFDjbEOrVLHUmierpJegkk/5YYqQhk/ZSV6djfs4tXr
      J1nyrTC6NkG9rQatSkNHRQt6tQ6L3sIXD36aN269gy8WwKiW6l5XeIMSo42vHHmOocYBTkyc
      luhly6M81n8MlUKJWWtkxe9gT8sQFeYy3pu/iicqTV///rH/xsWFkcLIvtxUSq2tikpLBScm
      TheeEladhecPfZqXR14llZVwH5POWV69+Sbl5lL++MCn+N6ZF3BHJKnCMzueJCfm+Mi2R9jR
      tIVgIsKB9l3UF1fz6s0T+WhUIW+oj9FYUo8j7zXY0zrEgbbdrAVcfHLXU3ii/gKluaWskQnH
      DGqFirriatRKFX213QWcuojIK9d/J5VbqTgf2fYI7rCHh/uO8vzBT7O3dTu/GX2LM7MXaSpt
      4PGB+/nItkdYDTgYXZskkoox7ZrnRxdeZC3gZHvTFha9yzTkWaclBhtGjZ6+2m4213RycvIs
      f3LoMyQzKQ6078YXCxZmKke77kGr0ki6KWs5JyfP4sun/Lx/7gLwRHzMuhd/fwGIoogg5lDL
      NR+YF1aiLafbtoXuyh6KdFI91lHeSVbIcHP9Os6wgwXfPJtK2zm06TB6tQG1Uk1XRQ9mrZlr
      a8N3ySR0ah0ybY54NoYgSgygalOtxAPKpckIGerMjchkcoZdFzFrrAhijmJdKcW6UmTIyAoZ
      yRCdDkrRmRkJmiXmd2JPwk2xrjRvncyxFraTyMVIpQXGVxbzO7aM/+vJb/OF/c/gjnh59eYJ
      gvEQhzv2saN5C66wB6vezJa6zfzB7o9wdek6b4y/SygRYcI5QzgRwaQ1Um4uZbC+l9+OnWLB
      Y+fS4giJdKLQTkxmkpLEOxaksaQOq87M6NoEZ+cuc2FhmMH6XtwRLyqFipyY441b75ATcigV
      Srqq2phxL5DIJAnEgwzUdXNteYyskEWv1jGyPMqid4UZ9wI31iY4kQd5fXTbo1xcHKGlrJEv
      Hfosdt8KLaUNfPv4V9hU1kROyPHg5nv57jvfZyPiZT3owhF0Me9Zwh8P8s0HvkQ0GaPIYOXM
      7EXsvlWmnLN85fBzmLRGttRt5sqSlBAaTydoKqln0WOnxlbF9sYBRFGUVKbZNFadmWQ2xZsT
      76KUKynSWxio34w36scXCyCIAp1Vm6ixVvLFg5/mycHjvJJnpnZUtmLVWVjyrdBZtYk3x9/l
      2vIoR7r248lrlOKZBKdnLpDKphlbm8Sg1qNTaRlq7C9EOIGUe9Bf1333Aohmwoz6LjMRuIEn
      8b5kQIFJZcWkttBk7qCjqB+FXIlCrqC5pIUdDbtoLmnllzdfuov8EEmFeWrgad6Zexu7f5FZ
      zwxXVi5Tbiwnmo4giiJKuYpHNz9BRp4imU2gVkjdoI24C0EUUSnUrEdXJM1/OoJRbabSWI07
      5sSgNpLOpqRsMTGHKyYR4OrMjdi0JWSFDO6YkwZLs6QdEkU8ecdYjhwN5mYEeQqZoETMyRFF
      kffmr3DVfpOx9Um8UT+CKFJstPHRbY9yauoslxavcWXpOqsBBxPOWeLpBIP1fdQWVVFmKs4P
      XeZwR7z48zuSIApsbeglEA8jiCJtFc38duwt7L5VhhqlEIyJvGklmUmxo2krfbVd9FR3cHFx
      hGgqRk7M8d8f+Tp1tmrGHdPEUnF0Ki16tS7f7+/kG8e+yFX7DQLxEJ1Vm4gkozhDbonrH95g
      1b+OWWdkqLGfExNnWPU7aCyp4/TsRU7PXGDYfhNV3oLYW9tJf10P06456otrSGZShS6X3bd6
      x3Yo4/SMVM6qFSpi6Th9td1MOGaw+1aZcS2Qyqb48aWfo1aqONC+G7lMznvzUnTTetDJJ3c9
      VfAcy5BRba0gGA8zvHyT4eWb7G3djt23ilKuoMJcys+vvUYsFefmyjh6tQ6lQokjr9pN5dLM
      byzdFeJRYS4lmoqxEfFSYrQRScbQqvIIFb/j9gKIZ6NccL1NOBNERCjUuiIitcYm+kp2YFHb
      cMZXmQrcYD40iTvhQC6To1caeXv25F3DMKPahFwm48rKbSWi5NOV88d7vkxbWQfHex5hW912
      dEod6VwKjVJHTsihzys5TWoTgpCjSFtMsa6UVC7JRtyFXCYnkY1jVJvxJjxkhBQquQqbroSM
      kCaYCiCXySnS2rCHFlHIFWgUGoIpP2a1lfXoClXGWnxJD3XlpVSbq7lmn8xLhiVdflEeeVJi
      lEwvJyfPFrowerWe7Y0DZIQMe1t38PLIb7DqLagUKor0Fmm3cS+QEwWJPSNX0FRSz9898jW2
      N23hzYl3yQpZBuo2o1PrCjMBlULJsm+NS0vXCh0VURTRKDVS6TN6glgqzkDdZiotpZyZvUQg
      HiSZSbKlvpfLS9eJJmM82HMvTw89jkqhZEv9Zn4zekLyKUf9nJ+TwjVS2TTusJeMkMUZktI1
      tzUOIJfJC7jB2qJqVEoVr42+hSAKfPdDf40vKqlCtzX0s+CxS8nvGgP/66Pf4db6NFPOObQq
      DalsijJziSTbiHjwx4M8NnB/odyR7i3wxgKMLI8SSkT49vGvcrhrPxcXRvDF/MTTCV4blTaL
      rx39Y6x6C2dnpftJqVBxvO8IbRUteKKSg08hl9NYUneXQFGr0hRgZ6XGEh7tP8bn9n2C10bf
      kkh/3/rWt74liiKTgRsE0rdrpDuvQMpLtaGe2dAtpoOjxLNRCUSbjeKMryKTQamukin3RH5n
      V/JE35NsxDaw/zuaXE7Icbz7Uaw6K2atGb1Kx1xgmkn/LbJCBqPKRDKXpMpYS4WhiqXQHFlR
      QnyncklCqSDtxd0YVEYCSR/umBOrxoYjtkqtqZ6cmMOktuJNbKBVainWlZDIJlDI5eiUenwJ
      L9ur9rIRd+KKOSQZ8doqTv9tKYRJa+S1L/wL60EXr42d5PLSNXQqLalsGrlMjlapZtI5m08s
      X0Svlhbu41sexBlyc2rqHD01nXx278coN5fy7sx72H2rVJjLeeXG7+ipaue5fc/w1uRpzs1e
      Zn/bTvyxEA/334dNb2Ut4CikNVZZK/jI4MOcmjpXQKrkhByJO3CC8XSSs7OX8tx9gZGVMR7o
      OcTR7nuw6My8Nnqy0LHb3TrEakA6lD+x5QEe7jvKoneFoaYBfnfrbXyxABcWhplyzbHkW6HC
      XIYj5KKxpI4ntjxIW3kzb0y8K7VJhSxVlgpKTSXo1TpeGztJNBWju7odi85Emam0YFQBaC6t
      p628mWnXPNlclo6KFvZt2sFqwIFVZ+bM7EV+ef119GodO5q20l7RwpRrDlGUMsreR8ioFCq2
      1G/m1ZsnGFufZLChj0gqxh/seoruqjZurk5QYSmj1FRMna2GZCZJW3kLcxsLXF8dZ++m7Sx6
      VvDeaYgZD4yQE++GV915pXIJ1mK/T30ACKZ9bK/ZzbbanagUakwaE0aNCaVMyYzn7jhVjVLD
      1ZUr/G7yNd6dO0UwEaTCUsFqxE40E+HBliek88TGMIIo0FM6IBngRUEKl7M0kcjGmQtMUaIv
      R6vUkxFSaBU6+soH2Yi7sGqKyOSkTlA4FSKQ9JIVpDyCaCZMKpdCBmiVOsxqKwqFjLk1B0Je
      bNVS2sDpWcme6A57QIQHNh/i07s/yrHug/x27BTJrJSqHkvF2dbYz/WVW1xduk4ikyKZT2q3
      +1aY37Ajl8toKWvAFfJw1X6DtYCTjsrWwsFybmOJUCLMtGueJwePc7hzPz+7+iscQReyvGz7
      4sJwAZe+uaaT3tpOJhyS+rK1rBFP1F8Qi70frPf98//Kb8dOYjNYaSltpK6oCpVCiUVnpthQ
      xOMDD/Ddt3/ArfUpNEoN4USEnCBwrPsgkWQUq97M3z78NdorWhhZHmPYLnmDT89cQBRFcoJA
      e2UzlxevcXr2AmUmyall1BiQy+V8Yf+ziKLIetBFqalESm6ZPk9LaQPfefQbvD11jpOTZ3lw
      82F2NQ/yzvR5BFGU5hZCjpHlUXprurDqLIyuT3DVfpPOyk0caN9NLB1jbmMJuUxOKpfOY9dX
      OTV1jng6wc7mQa4s3WAlsC5hEQ99hjcnTiOIAkq5knHHDNvv7ALNhyf/w64PQDwb+w/huABK
      mZJgJMwvR1/CEV5n0j3BvG+OMmN5/gYWKTYUE0vHiKQihTT0Bd88leZqRIUUgzTiuiT5DVRG
      FDIl494b2HQlaJRawqkg8WwcQcxRZ24kno2RKWiFVAy7LiIi4oyu40t6iWdjlOrLKdaVYdZY
      0Sn1FGmL8Se8VBqqCWfCtFm7WHZ5KDOWsbW+j4c2H2ZnyyCvXHudjsrWQiF4a22Kk1NnWQk4
      cOUzs96/9m/aQYnBRiKToq2imU3lzVRZKvIitRCf3PUUFp2Z9ZCLdDbNntYhTk6dxaa38qGt
      D3Fy8iwgnReUCiWlpuJCbZ3IJOmuascfDyED2sqbGXdMM+WaY7Chn49vf5zW8iaWfWuFJ4Ja
      oWLZv0ogHpKyCZJRPrnrKRxBN3KZjLH1KdaCTqZdcwTiEtKlp7qdP7rnkyz5VumubmPvpu2c
      nDzHu9PnCSZCjK5NYvet0VHRyvyGnUw+TceTx0UChT78D977KSv+dUwaI3213WRzWRpL6gr8
      T1/Mz/G+o7x+622iqRj1xTXc0yYxVyWMeQ3vR6PW2WqosJQhiiKeqI9oKs7bU+eYds2zs3kr
      37z/SyQzSeY9eZmHCEqFEr1ay1q+y5bKpjnQvhurzsxDvUckg8z8VRLp5O0F4E95iGXvprfd
      eWkVOrLiB4OvAFQyFf9y6ccks7c9saIoolKo+Kujf8u+lgO0lGzi4r/DJwKkckmySikbK5wO
      UaIrYyk0j0ltRiFToFJoWIssY9UUIYgCKoWatCCVIwICkVQIuVyBTAZF2mJAqpuVMhUZIYNS
      riSeidJiayeQ9KFSqPPB3DneGr3MqVuXsfvWONK5n8GGXkqMNjYiXk5MnEZELJQcgigWDlPv
      y54rzKX82eHPU2+r4aWR37DsW8MZcvNw332MrU9KEmWlil/deANPxMfX7vtjPrfvY2wqa+L1
      W6e4tT5FPB2XALfI6K5q5+bqOCqFkng6yZb6zQWUYiQZKwRfZ3LZQv3/Up6w9uDmw1h0Jh4b
      uJ9Li9fuOMeBO+zh2soYK4F1dCotyWyK7qp2qqzlWHRmjvcdZXRtglNT5xhZHmXFv8ZGxEsk
      FWOgtgd3xEOJsZg/O/wcB9p3448F2dbQTzaXK9xozaUNNBTXcnlRspb21Xbzv8/9hEnnbKEF
      mRUkI5Esr+c/0rmPTeVN/Or6G8jlcu7vOcSXD30OhUyOQq7giS0PshJYxxnakHr3zVsLQSJq
      hYo3J04z7pjhC/ufJZ3N8PT2x/jCPc/SU93J21PnSGXTVJjLeGvyDDfXJlDIFFy132DJt4pc
      JpMGYTKZjFZLF96EC+EDUiIrdDXoVUYWw9O/917hJk5niHxASEYoGUSj1FBlqSbzH7jEygwV
      DNUNcmHtNEXaYhzRVbRKHVqlDgGBJmsLNm0JyWwcIZ8AU22qYzE4R07MEslE0KkM6JVGloJz
      yJDRZN1ESpFkNWKn3tzISsROKBVgzj+FRVOEM7pKVsjlRXHS9fb0ef7p9A9RyZWUW0oBSXvO
      nU8+URqUjTumMWmMfOfRr1NbVM2Z2UuFOjuRSXJ56RoKuZLnD3yKQDzEWxNnEEWRl0Ze5eTk
      GYr0VhwhN0q5kmd2fKjQ8Tjee5QvvPg1/LEgX7vvjzjQtpsnf/BZQKr91QpV4U8x3IFHT2VT
      3FgdZ9m/xrRrHp1KU3hPp9JytPsA6VyGppI6Oio28Ytrv6W1vBF/LMipyXNMOGY40CZ1aTRK
      NR8beoLXxk6SE3J8bt/HaS5r4MWrv+aX11/HZrDy3vwVzs1dZkv9Zp7d+SQ3VicYX5/i1voU
      O5q2cLz3KDaDhZOTZ4kko7Tks5AXPMtsb9zCCxdfRkRELpPzb1d/TTJ7GwigUqh44eJLiKKI
      Qq7IL/4oS94VHt/yAAfbd5PIpOipauf75/8VgJHlUa6v3MIfD3KgbVc+iqmL5rIGOita+cqv
      /gaA0bUJntr2CHbfGg/03Ht3TKpFXSQNpMT3jd1yagz1bC7ehkFlYjW6+IFlkEKmpL90B+/M
      nLoLmQgSHMumL+Y347/CGXaQyCSI3QHPUinUfHTLJ+gs7cYZd6CSq8jk0sQyMaqM1UTTYUKp
      II7YGo7oKolsArVCTSIbp9pYSzAVoMXaTjqXQq2UDPJapZYSXRkGtZFqoxS8rZKr8CU9ZIUs
      e2oPFsBaRqMamaCmsbSGvroOri9LsTvPH/g0giDZECPJGMG4tFDMOiPzniWiqTiBeAiLzsTF
      xRHemT5PKB5GRKS5tJ6uyjZuro6z7JfEYgN13fhjAdaCTlYDDhY8drY19tNb05mnIa8RTcVo
      Lm3gx5d/TjqXQaNQc2N1nEpLOSaNgVJTsUR5UOsIJsIc6dzPszufRBBFWsoauJQPr0tmUvTW
      dNFS1kiFpYxtDf38fOQ1AA627+Z7Z14gmopxfeUWK3nqmygKfH7vJ3io70hewBei2FDE+fkr
      3Fqf4sbqOKsBBzPuRaLJGM58HpdCLuc7j36DYfuNAo8/mU2x4FnmXy69LKFh9j+DN+rn9MwF
      EpkkjpBLijYSRdQK5V2Q4HAyij8WLMACsvlFH03FJOmCXMm52UvE03Ee6TsmbQpKFZ/Z8zQL
      HjsymYzemi6+9fo/cH1ljGXfmkTtEHJSEmV1F2dmL1JmKubz+z5xd0qkUWWm3thMma6KSkMt
      bdYeagxNKOQKVHI1RpUFT8J511NCjgKbopJ0OoNaqWbBN3/XAigxlHJx6TyO8Dp2/xJqhZqB
      mi0FUvFg3Ta6KrqxGUqY8UuuooyQQaPU0lM6wDX3ZSLpMGa1hUgmjBw5pfpyDCojrug6KSGV
      P9RKIckl+jJKdeWMe29gUJkkFGLMgTvuRC6TE8m8j0RUEk4HiefCtNfUUV1WRLHFRI2lhkpT
      JRadmd/eOsVgQy+zG4vUFlXxlSNfYGt9L+/OXLj9hSUieTVjkK0NvcRScSot5Tx/8FPc07aL
      F6/+Gk/Ux0bURyyduKu9/EDPIQAuL11DEAU2Il4213RSYizCpDHgCLmkiXHAyf5NOzk5dZZz
      c5c50nUP7y1c5frKLQRR4MzMRcrMJVL4Rv7nG7UG5jYkkZ9KqWLes0QsHZcyze4w8lt1Zp4e
      eoxYOsH1lVvEUnGuLY8ysjKGI+gikg+zG6zvK3SDHu67r5AAY9aaeGfqPMFEGF80gIhIZ+Um
      Jp2z+baxjH2bdnJteawwQ6i2VnKs5yDusEfyAIduD1yLDFaeGnyYSecscpmcrfW9aJRqSozF
      fOXIc3z//E+JpmJE84F6KoWSsfUp5j127mnbxas3TvDm+DsUGaxSToGhCJ1aR29NJyXGYhpK
      armwcBVfXn36e5NguUyOTmnAoDKhkquR5QMG3l8gNcZG9EojJrUFnczEGzff4uTUSc4vnmU9
      tEZr6SbqixqottTwWO+HsPsXCSRutxiT2QSPbH6c9dAq66E17IEl3p1/m2X/Eve3PYwrvkYy
      lyAnZHHHndLsQKbEoDKgVxowqk2EUtLPc0RXGazYiUquBhm48yRpAQG9yoharmYxNIteZaCl
      qB2NQsKl9JUNUqovl4ZncjXdpX0Sg0ihwe7wcmryPOOOaZ7Y8gDvzV+VfMOxIE8NPkIoGWbY
      Pko6Jy34L9zzLKlsClGUTBkLHjvO0AYNxbUYNAZWA+sEE2H2tAwRSoQKZweZTMY9bbsIp6KM
      r98uLVf961xfGcMTDZBIJwuxQxXmUqZccwiINJbUMbo2iYjIpvJm9GotRXpL/vAI2xr6KDHa
      Cjyco133SO1blZr7uw8VamiAXc2DPLn1Ib5/7l/ZiHiZdM5ysGM3n9r9EcpNpawFnFj0ZhxB
      Fzubt3J95RaTrjn2tA6RzKSw+1ZxhjfwRf18fPuHCuI9uUwaaqVyaX525RXCySgtZQ3kRIHH
      B+7nZ1d/VcA+bm3oJZvLUG4uo7GkljfG36Gvtou/f+ybvHrzTUbXJkj9f52dd3Rc53nmf3d6
      AWYwmEHvjSAIkCDA3kWqsaiRalSxJdmWbEfr2I6dZO1dr+Ns1t7NSXKS+GwSr9eOk3U2luyo
      WI2iJIoSRVIsAEkARK8zg+m9z9yZufvHHQ3Nlbx7rHsO/yAvgYNyv/u93/s+z+8Rs3x+16Oc
      uH76RrCgIHDFMUG+WChPsKMZucHy5b1PoFFp5ByB5StMeeYJJsL01neSFbMcHTqM4XdlgwqC
      gFqhxqK1YtPV808f/ow5/w30Xr6YJ5QK8aVdz3Jk3T00m1u4aD9/k4NMIShYDi2xHLq5peqO
      uXDFnCg0cnsyIcbRqXSyBNZQR0KUzei1xnq0Si2hTIB0IY1CUKBRaomXGEMSMholX8yjUWpR
      KlSoS6He2WLJSxyZRZREOZVebSBfFFEKSpajCyyu+vHHwigVKowaAwqFgnAywtr6bk5OnebF
      K28gFvMc7N9PKpdGIQj8yV3f5MDa3aiUSiZWZ7BVWsmKWf723Z/IUpGGHi4sXaGvYQ1Gjb4k
      JCxwduEik64ZdGodlboKBpvXlRWbchaAxGBzP/aQE3tolcGWfvb27KDeXIPFYGZvz3Y+v+tR
      Lq1c5bVSR+Ur+z/HB/MXmXDNABLNVQ14Yj66ato4vzjCxpZ+6s21FIpyO1ClVDHnW2LWe2Ne
      c1vfXtwRLz87/xz5Yh5rRTWemBx27o0HSGSTbGrbQIO5trwTSEAoFZFdbvEgiUySJ3Y8JAMC
      /CtYjRY2tgww5pzEFZWjXD86M/XWdRFIhDBq9AQSIQIJeQj20OZ7SwfyVYpIjNrHyeSztFY3
      sqNrCw9uuotTpZYswM6uzVgrqvnczuP83Xs/Y2x1klAywoRrhv7GXhSCgpeunkCv0dNd28FL
      1058OiwKyAS4n174Hx/794+yrtY3DJLIxikiMem5Xkp/EVjfsIHF4MInfEYIJ8Pcv+FhXEkH
      9YYGVuN2EmKcglTAqDYiAZ6kC0kAvdJAb/UAWpWORC6OQqEglU9ijy0RygTos64nlPGX4oMU
      OOP28pxDo9SWMoiNpPMpqrQWFqKztJk60RkEsmnY07WdK45x5nxLWAxVfH73I/zb6GvlrzWQ
      lH0C0555wukYf/nW3/P+3AWGW9fzNw//ZznPyiP7mQPJMLGMnBD5t8f/jIHGtbx87URJdyX/
      6antYHPb4E1vZ5BKvM1C+Uww413gnekzLAedHBs6TH9jL/82+jqrEQ+FYpEP5i/gjLjLu5Je
      o2UpYGcl5OTp3Y/y1tQZrjmvs7V9I0sBWaa84Fum09ZGUZKoNlZxqH8/P7/wApG0LPPurevi
      nsGDVBurZD2PwYQ9uCpfB3DIAAAetklEQVRLFJQqdGott67dw7xvuXyY/ejr39GxCX8iyB8f
      fJYXr57AX4qJvXfjnaxGPAy1DDDrXcAXDxBMhhEEgQ5bC+3WFn747k8IJcM8ufNhJlanWY16
      SGSTbGkfIl/M8/MPf0V/Uy9t1mY2tgzw9vQZnOFVtnQMcW7hMrmCiK2imoP9+6mttHLVMUEk
      HUOpUOKN+fHE/J9+AaSySV6fevUT77WYW1kIzvOjc39XDsputbTxhe1fZKh5M+/Ov/2JHych
      kVUm8KRkM71aqaFaZ8OsrSIpJtAqtaTzKZSCEpPWjFKhRCyKxHOxUuJkgHguKrNxxCSRTIhm
      UxvRbISEGKNCXUGVrhqNQkNBKmDWWsgUMriSTtpMnSTFBEoVGFRGxuzz5YieZC6FXqUlkoqV
      S5h2awuhZITe+i4cJYdXUSriinrZ1j6Eu0R7/qM7nyWSjtJkrqfF0sR/eeNvuLA0Ws4JAFlv
      dVvfHl4dfxuzwVS+d2T97eQKufIATEK6SWNUlOQF4on5GWjq5aHN93Bq5oPyQE9CYqhlgHhG
      LoMe3nwPPz33CzJitjQjyJSny1+79Wm+sPtRnrskB0dolGpSorzDZvM5Ts18wJhzkgZzHYIg
      MO9fIpaRMwJ+cPTbmPUmFgPLN8W0inmRk1PvEUiEyJayzeb9Szy8+V62tA3yxsQpsoVsWa4A
      cFvfHr5z5Gu8MvYWjrCLtJhhXcMaZr03PMBVBjNXHDIcwKjR02CuQyoZfhSCgsrSIK61ugmz
      vpJfjrzKxeUrNJjraDDV0lXbwb2Dd5LOZX67J/j/d1UZLLRWtWGPrHzsnjvm4tT/9ZCvhJbx
      J3z01fXLNsZ85mMfV6GpoNPSzVgghlalw6ypolpn45zrNDZ9HVqljsaKZrRKHSkxiajMoVMa
      UClUIElIUhGz1kK13oYzvkKukGUhPENSTKBXGdCrjKgVavQqg/x1Jp1k8mnWWQe56rtIhcaM
      UW2ktUHPlOM3vy+JtJjl67c9w7xviVMzZ8t6lt1dW5nyzLNSGvmrlWp+8MYPsZcoCD889RNC
      qQj//ZEf8LNzzxHPJBDzoqyYLJnZ+xt7eWzrMZxhN96YHzEv0tfQw+H1B9CqNFQbLQiCwOPb
      7udbL36fVC6NgGyD/OtTP0aSJB7Zch+b2wbpqe0sB0eYdBVU6IwYNHrWNcguLRn9vsrvH/gC
      i4EVXp94B5VCxfOXX2GgaZZsPktRktjY2s9q2ENPbQeXV66Vy4xpzzyVOmP5JyPmRf7mnf/J
      jHeB7toONrVuKAFsW1Ar1eXMsGtOOZjQGwuQzKZI5FLkCjkiqRhDLQO0WBpZ17CGx7c9gCDI
      M4Xx1Sn0al0pOENWnNaZami3thCIhxho7GXSPct8KRr1/uEjmPWV/PTsLwC4Y90+OV+g1BhY
      Dsqt73HXNEuBFXrruz/9DiAIAp22bkadI+WHWUDg1p7bWQovlU3zv3kFkn7uXHsYQRC47pn4
      2P3jQ4+h1CiIZsO0m7oxac1yYrylT5ZoKzVolDp8KQ8JUVaUBjN+KjUmgukAJq0ZQRCoNdSX
      H0adUk8iF6fO2EB9KUhDLOao0Jjwp3xEcxEMaqPsLNPVMOVcYnzBiUrQlrsaKoWa1aibt6fP
      IBZEUrkbOhytWsMtvbtkd5nRwlM7H+bc4qWyIrG20sr2jk385Oz/JpKK0l3bSTyTIFTqrEhI
      LPhXeGvqfQ6s3cVr4++QzKVYCTkZtU9g1BqwB504Qi62dQzTWFXPddcMD2w6wvHN93Fy8j0K
      xTwGtZ6/f/+fiWcTbG4bxB8P8ti2+3ll7KScv+tb5tXxt5hwTVOQigy1DvAvF17AoNFToTOW
      8wu+d88fIggCp0sittkSfeGjnaLZ0sAXdj3KhGsGAYF7N95BJB3HG/PTYW3l9255klPTH+AI
      u4hm4qgUSlQKFQONveWIqAX/Mhtb+pnyzNNgruOKY4JjQ4d5YsdDXHfN8PTPv8kVxwRmvYkv
      73uCv3r7R8x5F2ks2R9/8MYPCSRD3LJmJ8sBR3lX3tDUh0lXUaZ5S5LMZUpmkygEJR221jLp
      I5lLsxxwfLoFIEkS2WKGWD5IW20TRr2evrp+Ht/0JDvad/Pq9Zc+MS5JIShotrRgDy2TzCVR
      KdWAQG1FLQ8PPcb+ntt4ee4XxHNROdtXTLIYnSWQ9mHWVmGPLeNKOEpxPHpaTB3kClkSYhx/
      ykMsF6HO0Igr6aSrqpdINkRLZTsNFc2sxBax6m2AJAerUaTWWA+SxPqaYULZII6QmzcuXsYV
      9uOLBzk0cIAv73uCvoYezsxfKG+zu7q2sBrxyHJchYoXr76BUWvgh8e/TyAZIpqO4Qy7USqU
      3L3hDl66eqKs7jy+5V6mPHNE0/LM4KMaP5FNMuWev4m3Wqkz8oXdj/H8yK8RCyKxTJx3SsF7
      oWSEOlMN0955jm++F41KwzXndXL5XLlNuOBfZqCpj3Aywpq6TsZL3SaxkGfCNV3mfR7o3YU7
      6qentpOjQ4c4v3C5HDgNYNQYeGjzPUTTMYxaA01VDfzB7V/EG/cz5pxiS/sgGpWGz25/kDcn
      T8s0aUkil8/x6NZjVOlNKARBdsYh0VXTLkfNpmMEk2G5/Bt7m3dnznJ67hyrEbktms1nGXNO
      ylILQSZ57OrewqxvkXZrC5W6Crpq2smI8sH4qwe+wPrmdZxbuCx3nIoFZr0L1FXa2N45TKFY
      IJSKyC/qvj3YjNWfbgHExSgXfO/iTjnISmlMxgoMBi0WvYU6QxOXHRdvan3eWAACZxbfYz4w
      RyKXoLtmDd879H0O9R2hy9aNgECDsYlgxs+GmmEyhTTRTASrvoY6YyMgoRSUZApy0LVYFFlN
      2GkzdZIupDFpzCgVKsKZIGadBQUK5iMzSEi0mjrwp3wlQ02xxApK4U6uEs9FsceWCEYT5QhV
      kPGEjVX1pYGWk6JUxGKsokJrIJcX+eODz5LN55jyzKFUKFjwr/DTs/9KKpfmrsHbcUU8WI0W
      3FEfGVGWemTELA3mOgrFAts7N5HMpoikoxg0eg4PHCh7AwC2tG/ksa3H8MWDGLUGjm48xDvT
      HyAhl3sj9jHCqYicH1zIISCwq2sLG0pcojV1ndy38SCRdIzu2g4W/CulRHkF3zr4lVL3ycgf
      3fksaTHN21Pv8/K1EyRzaWK/cUaRFalHeX7kFbwxf9mOeHJSru8dYRfLQQcfzF+gsaq+XJII
      CMx4F5j1LZYPzP/16Le5Z/BOXrjyenlX0aq1rEbc+BNBcnnxppdnu62FcCpaZv9cdVxnwb8s
      G59yKa45r9NYVV9+4ZyePc/5xcsYNQacpTNEbWUNVxwTLAftdNraaLHIz9IDm+7+3RdAUSpy
      2X+GuPhx9mc4G8Cis9Fqbuey42L5GwTZL2zWmW9Kiwwk/dzacwcKQYk37iFfFGmobCaWjZAp
      pEnlk+WWZywXxaQxYdFbAQGLzoqERK2hgVguQpupE7EoEsr4qTXUsxxdwJtys6NxL9FsBJ1a
      To9PiAnssUVs+lpiuSgFqUCFppJCsYBJX4k7ECWdk6fKnbY2/vHcL5j3L9Fha+Nrtz5NbaWV
      V8ffIlZKSf/Oka8z71vi4MABHCE527YoScx5F4lnEsz6Fnl0y30UJYn9vTtRK9VIUpFZ3xIT
      q9N01rbTVt1MbaWV29btZU1dF+FkhCZLPf/+zq+gU2s5OfkeoVSEuzbcTru1BWfExVdvfZo6
      kw1XxIuExLRnnpoKK8eGDjFiH2ddQw93rNvHn7z6lzjDLsZWp9jUtoF6Uy1iIU+7rZVCscDb
      02c4u3BJDq1Ix8kVRFqrmzHrK4mkYhi0eh7bdoyUmOb0zA0vd5O5nnpTLYFkiA5bK56Yj6JU
      5A/v/D0yYgZJkhhu28C8f6msHShKRdY39THjmceg0QNCOXLVoNFj1pswagzEMwmKkoSAnEoq
      xyXdwxf3fobnL79CvpgnmUth1lfSWFXP5ZVrMobdPUO+mC+3VA8NHKBSV8GX9n6Wi8tXiGeS
      mPUmJt2zrIRWWf1tWJT/15UQo8xEx37rfQGBwbrNrK3tI5D0o1QoGajfwFNbnyYtpm/CpSgV
      SgwaAz8+/w+8PvUK78yeZCm4SFaRIlvMoBAUANQbmyhIefwpH1vqd5LKJ6nSWajUmHEnnCWd
      v59MIU0kGyJXyGJUV1CQCiU4bpJ8USSaDaNWqBEEJWurB5gKjVNvbEQhKFAp1NgMVupsFayp
      62Rv3xBqlZJxxxwgYNZX0mCqIZPPlnvfG5r7yRVE/vXSi4zax7hn8E5cUQ/bOobIF/KEUhHU
      ShXVRjnOZ863xIOb7mZDcx8nJk5RLE1Nx11TLPiXeXfmLJ/d/iBjzkmuu2Z5a0pmar4ydrJc
      rlx3z7LoX+Ga8zpP7jzO53c/wkrIwUqJrPzKuJx9sBBYYda7WD6rgDy1DiYjhFIRLq1cxR3z
      lVNf1jf2sRCQ6RxHhw7x7UO/T52phg8XRzi7cEk+9AuU42Qf23Y/KyEnhWKBP77z3yEoBHRq
      Le3WFiZc0xi0evkQq9GTFuUzokapxhlxc2rmA7J5ke/d/c0yCMuoMbC/dye5Qo7/duw77Ore
      wmJgheWgXOPvX7OLJksj8/4l4plkaWJuRaFQloFmOrWODc3r2NaxibxU4O2p92msqqPD2sJS
      wM7ndh3nS/ueYGx1io8iZT/FAoj9Vl8AgFapx6qt41fXnmfSM0FaTNNqaeOW7gO0WdoZdY6Q
      zCVRCkqaqpq5sHKelJgsD39csVUy2Sz3rXuApdg8zvgK4UxQTiLJhkvQKwXhTIiCJA+LGiqa
      cSdXMaiMgESVtpqEGGd30wEi2TBGdSVxMYZSUJAvioQyQeorGilKRfY034ogCCgFBZ6UiyZz
      Cz21HXgyK1gqTWgUOqoMlQgoOHH9NMtBB3etvx2DRs9gSz/emJ8x5ySSJLEScuCKelnwy9m2
      KqWKA2t3c805Web+XFi6giPk4tGtR+mqaedLez9THmJJEgRTYUbsY8gZzBl8MT8NVXUUJQmN
      Us146ZeXFjPM+RZ5d+YsZ+YvsqdnG9+448u8MPpa2ZraV99TrqdBHjj5EzdyvO4fOoIrKqPI
      j2+5D6VCgUJQ8O6MjEeZWJ3GHZNT5JO5FAf793N8870oFQqCiTBvXD8lh4PYx7jmmMQZdsmD
      KSSe2nmc+zYeZH/vbgIl19hgSz8A7qiX7pp2BkvQYJAFhL6SUT2eTfDZ7Q8ysTpT9vFmxAw/
      ev9/4Yp6uaV3J2qlindnz2EPrbK9Y5iW6iYyYoYrjglu69vD5eVr5ZeGPxFixD7GuoY1dFhb
      ODVzFnfUi1JQ/u4LQABWEvO/1RtQr2/mxPU3eX/hXfLFPIViAXt4hXwxz472XdzSfYDBxiGO
      9N/Dh8vniH4CRj2RSTDYuJF0MYmAQG91P6FMAI1Si1VvYy48RTgbIiEmGKrbynuOkzRVthLN
      hqnSWVEJSsLZIJUaE3Phaar1Npaj8zRXthHJhstECVfCQTQbxhV30GPpY1P9Di57zhJI+0nn
      0zRWNtFis2I0qImlUrjCfjpsraxv6uPV8bfkWhg5PNpirCKSipZ7+IFkGEdolRnvAh22Flwl
      2+FTOx+mu7adfzwns/Nv6d1JTYWVCdcMn9t1HItBrnM/umoqrfzo8T+Xo4CSEa46bnTPDBo9
      2UKOaDpGTYUNk76CcCpaIkXb6G9cQ29dF8FkGJO+gr944LtYjRYWAyvs6d6GK+phzreIN+bn
      wvIoHbY2Ru1jZMQs7qhXNsj8BvtpS9sgu7q38Bcn/x6tSoOn1FERC+JNAzC9Wk9ffTd//c6P
      OTl5mt3dW1hT28Vzl3+NPxHigeG7mPcvc3ruPO3WFrpr2rFWVJegXAXmfIts7xzGoNWjVqj4
      4t7PcsUxUZZUBxIh1EpV+e9GrQG1Sk2btZn/dNc3eP7yr9GoNFgMZmyVVlosjaxvWsuvRl/j
      jeunyjtXoVj83ReASlCTLqSI5T6eAKNWaOivHubnl/+ZtJi+6V48E+XOtYdRKdXYKmoQBIGX
      xn9VSnj5+NVlW0OrpRV7bJF+2yAj3g/JFrJYdDbEoohVb8OqryGSDctlDALhTBCdUobQ1hrq
      8ac81BnrERCw6mrIFNJoVTpMGpkkbdPXUqW1oFQomQ5NMhG4wub6HazEFilIeQQELs1Nc3Jk
      BH80wme2P8B37/oG75QQ4yDLP+KZBJdXroEkl3V6jY5HttxXBu7+x8NfZ1vnMPcOHuTuwTv4
      6bl/Zd63TDKbYta7yOvjb5MS03TYWknl0vhiAdKiXAIaNHpeuPIGVx3XOdC7qzToKqJWqrhj
      3T4MGgOb2wdZDKzw0tUTeKJ+9vZsxx508uHSKFq1hlg6gTceYM63iFFjYNQ+jkalwRPzlXU1
      +WKBP7nrD3DHfCwHHTSa68v0i49edq6Ih9Oz5zg8cIA/veePaK1uZtI9Q3NV402KTq1aw9mF
      S4SSEdJihjHnFLFMvAzuiqZj2MOrxDMJKrRGntn7Gea8izfNUopSkR+f+RdcEQ9H1t+KJ+ov
      d6YMGgM9tR0YNAaUggKFQsm+nh08seMhXrjyOh8ujnJs6BBGrZF3p88y7Z1nMeDgUP9+Ht12
      jItLV8jkszSa6z7FDiDID1O2kCEhxso/HL3SwHrrFixaG6fnT33MG1BTUUuFtoJ/uvRTzi69
      T4W2kln/9E3soN+8buk+QEtVC+dc7zEfnqLO2ADI5pkaQy2uhBN3chWdUo+AwGx4SpY4aM2E
      syGUChWuhAxYNWnNiMUcWqWW5egCdcZGFIKyXEKlxTSxXJhcMSfnC2Qj5ApZBmzDvDpylng6
      Sb4oSzkiKTmdPZiQXwB3D96BPbRKOBWhprIao9ZAQSqwrX2YY0OHuLg8yr+Nvk4kFeXY8GEq
      tUZ88QAXl6+iVWlorW4u/+I/OjxKyG+1Y0OHODN/sRRlJPfVw8kIYiHPru6tXCkBu3L5HI6w
      q9x0iGcT1JpsZbXlRw9OIBFi0iMjz33xAN217TL2ENjaPiSzfpzXqdAa+d493+S5yy/jinjp
      sLaSL+ZLrdw4U5459vfuRCEI/HLkVZnYYK4lkoqhUanZ3LaBBf9yuUaQkLh38CBDLf3UmWpo
      MNeVS5sWSyMnJ99nxrvAXetvQ6VQsadnK1qVlnHXNEVJYta7QDQT49lbnmJD8zourVxlxrtA
      s6URV8SDr5Sn9uuxN3lv9jzZfI7rrhlmvPPlzLZ8MU+V3sx7c+eIpGJ869BXZEDXp2mDKgUl
      dfomGgwyiDaTT1OkSDDjI5wNYNJWMem+sY0LCAw0bOCX157Dl/DiS3i5bL9Il60Hb/zj7KH6
      ygYeGXqMuBhj1CsjGHuq+7Dqa+TY1UKWdD5VzgjIFbKoFGqSuTgV6kqyeVlNmi+KbGvcQ0KM
      o1fpcSdXS50lHTqVjo6qHlxxBxJQqTHLKMV8iiqdBbPWQraQwRX24Y/GUAgCiUySswuXWPCv
      8PCWe6k313Bp+Rq7urZyx7p9LAXtLAXspMUMo47xUuqkHFTtCLtIZlNMeeb45eirVBuq+KuH
      vsed/fu4sDSKSqGirbqFD5dHCZW0Q/bQKuncjYl5Nn9DFrEa8VCpMxLPJOit6yKZuxGcvba+
      mxZLIxISX7v1GVJiRuYDbbufqhI63KSrlIVuxmrW1HViMZp5dfwtLq9cwxcPMOOZ55pzEoBo
      JnZTa1KSJAYae8nlRQKJIPduPFhiAa3QWdNGQSqiVWnLX6tBo+fZW57kumuWl6+dIFvIcWzo
      MLYKeffNF/LcteF2nt3/FC9ePcGZuQt02FrZv2ZnOZXn2PBhNrdtIJZJMOeXPdTbOzeVbJJJ
      mi0NTLpny4suVxApFIs3leqV+kpmvYvki3l0ai0fLo1++kkwQDDrZSYyTq6YLTE8c3KMkVZJ
      X80AWoWeJnMTx4cfwxNz36QAlZDor19PT00vjoi9LJazGWtoMDXy1uybjNpHMKuraaxqZCo0
      TqXGXCqJNpIriigEAXfSiVgyvMfFGPFcjD0ttzIbmkQsioQzQZKivMvUG5tIigli2TApMUmu
      mCNbyCCWaBTVequsIBVUrMQWSYpxdnVtRauXuH/obgoFiZWgLHHormnnnekPCCSChJJh9Bod
      qxFPGdEnIR/sPqK8gQyNOr84QjQdJ5aJo1Nr+ZcLLxBJx/j87kfxxQNleQTIu+3GlgECiRBN
      VfU8suU+Li5flUVuah3P7Hmc2/v28euxN1EICrpq2qmttFJvruO1CZnwMOtbpNPWynXXNJIk
      8dVbn+bc4mVaq5sJJILUVFQTTkcYc04ilqyfIJOY84U8iWySPd3bqKm04orKqt4qvYkZ7yIv
      Xn2DQrHAVw58nj999S8JpSK0W1v54fE/Y2v7Rhb8y7RYmkhkk1xculIWvJn1lfz5sf/IddcM
      r42/TSgV4ZHN98ll8dXXSebSVBuqWFvfxVtT7xNORUjn0jw/8gqvT7zDQGMv+9bs4P3Z80hI
      PLP7cb687wlOTr5XLunUChV3D94u0/CKBTprWjm68bDMRm0bxKSr5PLKtU+/ALLFDJd873+i
      T1iiiF6n5aGBx9nTeQuN5iamvVPMBWZv+n99devY3raL4ZYtbGvdzu6ufUx6JpgPzBJJR4ik
      w7ijbsKpMLVmuV5XKzXoVAayhUzZMmfRWrHoqlEICmyGWjzJVWz6WiRAo9TQY1lLtc5GKCML
      1sxaizwhNjaVGUKy6Euuu4NpP2qlBo1SS7aYYV19LxPhC2xoWoeYVTDcsp6v7P8czogbd9SH
      xVDFtHcerUqLUNLCH914iC5ba1mXIwgCDwwfYTFgL8moFURSMRb8yyRz8llAq9Lgjt6Qjq+t
      7+HuDXdwxTHOto4hjm+5jwX/CrYKKyZ9RZlu3WZtRqvSMOdbwhP1l7k/IO/W464psvkcnpgP
      Z9jFlGcOd9TLd458nXA6ijvq5yv7P8f2jk1MumdRq9T4Yn7WN/XR39jLctBJi6WRXd1bWAqs
      cGTD7Yw6xhELImkxQ3NVPcshJwpBYH1TH0WpyIWlK7w5+R5alQZvPEAgEeLJnQ/TVdOGPbTK
      qZmzFIoFVoJONEo1o/ZxfnHp5RL+UJa+vDFxiuHW9cQycZotDThCLnIFEavRwrhrGk/MRzKb
      KgeWR9NxLAYzTVX1qJQqRu0TdFhb+IsHv8uka5bnLr+MO+rlwU13U2+uYXx1+tMvAFfSjitl
      /633C1Iek9qCSSMHMtSbGriwcr6sG1Ir1LhjLt6afZPLjos0mBpJiclPNM2nsxm6bD2ExQBV
      Wgu1xnqi2RBFCmWi9PXgNZJiEqPaSCgTpLGiBYPKSI2hngtu+XNW62twJeyoFRqshhoSOTlx
      MlfI4ogvAwJiMYdeZUCn1KFR6Qim/dgMtZi1VaysRjgzdxFBkCeu7piPQwMHODMv480j6RhH
      Nx4klIywqW0DD266myt2mZ/5e7c8yWNb7yeZTbEcdPJU6WH4SP5s0leSyWcpFIvlRJln9jzO
      8yOvYA+tshSwM+qYYGRFTuZstjRiD61i1Bp4Zs9nmPMusPoR57N7G4ViEZ1ay0Ob70Gn1rAU
      sNNoruPrt32Ra85JjBoju3u28Xenf0YsE8dsMPPrsTeJpuMMtQww3LqBKr2Jl66dIJgMMe9f
      IpvPshrxcN01w66uLSXfbR+nZ8/jjvrY1jHMOzMf8Ob102Use2NVPTu7NmMPr3Lnulu4tjrJ
      VccE7qiPVC7ND45+m/29u3l9/B2yhRxGrQFN6UXw/aPf4vzSCPligeGW9dy38SBFSeJrtz7N
      iP1auQukUqg4MfEu7piXoxsP8d27vsGLV14nmAyTEbMc3XiYfzjzz+SLBSRJ4rprhjcnT5PI
      pT79AnCnHYSyH0eg/+Zl0liw6moBMGoq2N2xl7rKeoabN5MSkzijzhJ1Ic9cYIZQKvSJbVEA
      m6GW9Y0bGPOPUJQkjOoK/GlZzKZSqChIBeqMDWys24pJU0Uw7Wc5OoeEJL/JCxmWInO0mTtw
      JZyEM0Ee6H2Mq75LaFU6dEo9zZWteJNu0vkUbaZOPEknmxt2EsmEqNbV8E/vv0wym8IfD/Lu
      zDk+mL/IyMoY1cYqwqkoaqWaeCbBctDBVcckVxzj5YC5OlMNHy6NyAZwMYM37ucPbv8SVXoz
      HbYWqvQmRu3j5Aoie7q3MeGa5tzCJbZ2bMQZdtNZ00ZRKpYx6seGD5PN5/gPh7/KpZWrjK1O
      saa2k9vX7cUVlTk8vliA80sjHN9yL/FMgm0dw+zs2syp6Q9YCTo5u3ARnVpLg6mWodYBTs+e
      J1/Ms7a+h02t67FWVHNq5sYLqaumvRROrSqjEPvqe1gO2snm5YfXFwsgIbFvzQ7SYpZ1DWu4
      tHyFUFIO3U7lMsSzcqtYhlypeG1cJl/XlbIIZrwLxDJxnGE3Hy6NEElF6bC1cnb+IqP2MYxa
      A49vu5/loIMDa3dxbPhIiVVU5MiG21jX0ItYzLMUsPOZHQ+yuW2QswsXy12oNbWd8nxDkvg/
      LbjAJrihLr0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Player Release Clause - Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Players - Market Value, Wage &amp; Release Clause' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Players Market Value &amp; Overall Rating - Age' width='192'>
      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
      XVH3vBaVj5UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Players Market Value - Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Players Market Value Overview' width='192'>
      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
      86+GBP8/eYjcu3OeNJ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Players Market Value, Overall Rating &amp; Release Clause - Club' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Players Number &amp; Market Value - Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Players Overall Rating - Age' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
